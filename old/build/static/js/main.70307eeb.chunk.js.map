{"version":3,"sources":["hooks/sort-data.js","hooks/format-currency.js","hooks/format-headers.js","pages/home/staged/staged.js","hooks/api-call.js","hooks/get-order.js","pages/home/staged/staged-orders.js","hooks/get-dashboard.js","pages/home/failed-processes/failed-jobs.js","pages/home/failed-processes/failed-processes.js","pages/home/missing/missing.js","pages/home/missing/bc-missing-items.js","pages/home/home.js","components/checkbox.js","actions.js","hooks/get-actions.js","components/order-details.js","pages/failed-orders/unpulled.js","pages/failed-orders/unpushed.js","pages/failed-orders/ignored.js","pages/failed-orders/failed-orders.js","hooks/get-settings.js","hooks/get-type.js","hooks/log-change.js","pages/settings/map.js","logo.svg","pages/settings/params.js","pages/settings/settings.js","components/tabs.js","pages/failed-processes/unprocessed.js","pages/failed-processes/failed-processes.js","hooks/get-user.js","pages/users/user.js","pages/users/users.js","pages/login/signin.js","pages/login/login.js","components/mobile-links-modal.js","routes.js","hooks/get-links.js","components/navigation.js","components/footer.js","App.js","index.js","hooks/select-all.js"],"names":["useSort","items","caller","data","failedPulls","failedPushes","useState","key","direction","sortConfig","setSortConfig","useMemo","sortedItems","length","sort","a","b","elementOne","elementTwo","UserId","isNaN","parseInt","includes","Date","getUTCMilliseconds","undefined","toUpperCase","requestSort","override","formatCurrency","num","currency","locale","Intl","NumberFormat","style","format","formatHeaders","headers","ignore","Array","isArray","formattedHeaders","forEach","header","firstInitial","sample","slice","match","formatted","split","indices","letter","idx","push","counter","index","splice","join","formattedHeader","headerArray","Staged","props","Object","keys","getClassNamesFor","name","error","message","className","isLoaded","subheader","map","onClick","toLowerCase","item","market","orderCount","totalAmount","apiCall","operation","query","variables","token","url","window","location","href","process","graphQlQuery","options","method","JSON","stringify","withCredentials","Authorization","axios","request","then","res","err","result","status","userAction","tab","ids","console","StagedOrders","unpushed","setUnpushed","unpushedError","setUnpushedError","unpushedIsLoaded","setUnpushedIsLoaded","setFailedPushes","failedPushesError","setFailedPushesError","failedPushesIsLoaded","setFailedPushesIsLoaded","ignored","setIgnored","ignoredError","setIgnoredError","ignoredIsLoaded","setIgnoredIsLoaded","apiError","setApiError","useEffect","mounted","getUnpushedOrders","results","errors","Error","unpushedArray","failedPushArray","ignoredOrdersArray","toReturn","unpushedObject","failedPushObject","ignoredOrdersObject","order","PushStatusId","Market","count","total","OrderTotalAmount","daysBack","markets","itemCodes","environment","jobs","getAllProcessingErrors","allErrors","ProcessJobId","Count","Categories","Category","Name","Direction","DataDirection","ExternalSystem","FailedJobs","values","to","pathname","state","job","i","j","FailedProcesses","failedProcesses","setFailedProcesses","setIsLoaded","setError","getAllFailedProcesses","Missing","reformattedData","itemCode","BcMissingItems","setDaysBack","missing","setMissing","render","setRender","useRef","getAllActiveItems","current","allItems","allItemsCount","getAllErpItems","erpItems","erpItemsCount","allItemsByMarket","erpItemsByMarket","theMissing","Country","ItemCode","filter","id","onSubmit","e","preventDefault","document","getElementById","setAttribute","type","placeholder","onChange","target","value","Home","user","setUser","localStorage","getItem","loggedIn","setloggedIn","parse","loggedInUser","setLoggedInUser","params","useLocation","userFromState","action","restrictions","pages","role","Checkbox","handleClick","isChecked","checked","actions","unpulled","postPath","actionId","onClickArg","title","getActions","takeAction","OrderDetails","setItem","pastedValue","setPastedValue","category","editableFields","settings","maps","users","handlePaste","event","paste","clipboardData","getData","details","modal","getElementsByClassName","main","getElementsByTagName","modalHeight","clientHeight","getAttribute","removeAttribute","closeModal","entries","detail","suppressContentEditableWarning","onBlur","handleBlur","Id","EnabledDate","onPaste","toggleSelect","userRoles","Role","newRole","textContent","handleRoleSelect","toISOString","UnPulled","allChecked","setAllChecked","setIsChecked","setStatus","response","setResponse","setUnpulled","activeLink","setActiveLink","innerWidth","width","setWidth","toggleShorterError","setToggleShorterError","orderDetails","setOrderDetails","showDetails","setShowDetails","vpWidth","setVpWidth","showMessage","messageRef","clickCount","path","sessionStorage","scrollTo","top","behavior","recall","alert","restrictedActions","handleSelect","pastTenseVerb","toggleErrorMessage","element","classList","toggle","replace","click","headerCheckbox","rowCheckbox","add","addEventListener","useLayoutEffect","browserWidth","onresize","getQuery","callerId","ref","OrderNumber","OrderDate","OrderTotal","CurrencyCode","At","Message","Exception","UnPushed","chars","setChars","clear","toggleError","errorElement","clickSniffer","attributes","nodeValue","removeEventListener","Warehouse","OrderTypeDescription","CustomerNumber","StagingImportDate","ErrorMessage","Ignored","noLink","setNoLink","delayed","setDelayed","Type","showError","ignoredOrders","setTimeout","IgnoredDate","User","FailedOrders","setGetQuery","setClick","currentPage","setCurrentPage","unpulledIsLoaded","setUnpulledIsLoaded","setQuery","recallApi","newQuery","chosenPage","getOrders","updateSettings","column","newValue","getType","table","typeMap","bool","int","tinyint","long","byte","float","double","decimal","DateTime","char","varchar","object","string","XML","columnConfig","DataType","logChange","userId","prevValue","dataType","toString","_g","Map","setNewValue","changeDate","clickLocation","updated","mapData","useCallback","row","currentValue","defaultValue","dataset","selectElementContents","prevVal","newVal","columnName","ColumnName","typeNewValue","Number","MaxLength","test","scrollIntoViewIfNeeded","inline","mapsUpdate","modifiedAtElement","modifiedByElement","changeDateTime","IsoCountryCode","ErpCompanyId","SourceWarehouse","SourceShipMethod","DestinationWarehouse","IsoCurrencyCode","ErpCurrencyCode","ProcessingSequence","DeactivatedAt","ModifiedAt","ModifiedBy","Params","paramsData","enabledDate","getParamByName","prevEnabledDate","paramByNameError","paramsUpdate","valueType","ValueTypeId","substring","Value","val","setting","trimEnd","SubCategory","ValueType","Notes","SettingsPage","setPath","setMaps","setParams","chosenButton","getSettings","code","Tabs","tabs","activeTab","Unprocessed","setActiveTab","activeTabIndex","setActiveTabIndex","activeTabCount","setActiveTabCount","jobNamesUnique","setJobNamesUnique","jobsName","activeTabKeyValue","tabIndex","next","chosenButtonValue","LineNumber","AdditionalData","currentTab","setCurrentTab","email","roleId","password","this","r","Email","dateRegistered","DateRegistered","lastLogin","LastLogin","LoggedIn","failedAttempts","FAiledAttemps","usersName","mutation","firstSignin","Users","setTabs","setUsers","setUserRoles","setShowMessage","roleName","setRoleName","prevElement","tableHeaders","deleteUser","signOut","liftData","innerHTML","indexOf","children","option","remove","userRole","updateUser","tabsArray","tempTabs","RoleId","getUserRoles","activeItems","FailedAttempts","Active","rerender","setRerender","UserClass","getAllUsers","clearId","liftUser","Signin","profile","signUp","clearError","signedIn","username","setUsername","setPassword","confirmPassword","setConfirmPassword","setId","setName","setRole","roles","setRoles","successMessage","setSuccessMessage","setLoggedIn","renderSignUp","setRenderSignUp","changePassword","setChangePassword","userInfo","handleSignIn","innerText","userData","getUserRestrictions","roleProfile","userObject","RestrictedPages","RestrictedActions","getUserByEmail","userByEmail","activeUser","signIn","signin","errorsArray","errorMessage","focus","getAllUsersSansToken","required","signup","onFocus","openDropdown","toggleClass","onKeyPress","Login","MobileLinksModal","links","link","activePageFromLinks","activePage","dashboardRoutes","rtlName","icon","DashboardIcon","component","layout","SmsFailedIcon","RunningWithErrorsIcon","SettingsApplicationsIcon","Settings","PeopleIcon","LoginIcon","useLinks","routes","inputId","linkId","route","activeStyle","border","borderRadius","margin","color","ListItem","padding","fontSize","paddingRight","_excluded","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","xmlns","height","viewBox","transform","d","fill","fontFamily","fontWeight","letterSpacing","x","y","ForwardRef","NavBar","setSignUp","setRoutes","setActivePage","renderMobileLinksModal","setRenderMobileLinksModal","reRender","setReRender","handleMenuClick","boolean","updatedRoutes","initialRoutes","temp","REACT_APP_HOME","exact","from","Footer","App","ReactDOM","module","exports","el","range","sel","body","createRange","getSelection","removeAllRanges","selectNodeContents","addRange","selectNode","createTextRange","moveToElementText","select"],"mappings":"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","file":"static/js/main.70307eeb.chunk.js","sourcesContent":["import { useState, useMemo } from 'react';\n\nconst useSort = (items, caller) => {\n  if (!items) items = [];\n  if (items['data'] && items['data']['failedPulls']) items = items.data.failedPulls;\n  if (items['data'] && items['data']['failedPushes']) items = items.data.failedPushes;\n  \n  const [sortConfig, setSortConfig] = useState({\n    key: caller === 'params' || caller === 'users' ? 'Name' : caller === 'map' ? 'Id' : caller === 'unpulled' || caller === 'unpushed' || caller === 'ignored' ? 'OrderNumber' : caller === 'order-details' ? 'lineNumber' : caller === 'jobs' ? 'OrderNumber' : caller === 'jobs-summary' ? 'Count' : caller === 'staged' ? 'market' : 'missing-items' ? 'itemCode' : null,\n    direction: 'ascending',\n  });\n\n  const sortedData = useMemo(() => {\n    let sortedItems = items && items.length > 0 ? [...items] : [];\n\n    sortedItems.sort((a, b) => {\n      let elementOne = a[sortConfig.key];\n      let elementTwo = b[sortConfig.key];\n      \n      // Correct for cases when the user ID is used in the ModifiedBy field, i.e., when a job modifies a parameter, not a user.\n      if (sortConfig.key === 'ModifiedBy') {\n        if (!elementOne && a.UserId && isNaN(a.UserId)) elementOne = a.UserId;\n        if (!elementTwo && b.UserId && isNaN(b.UserId)) elementTwo = b.UserId;\n      }\n\n      if (!isNaN(parseInt(elementOne)) && !isNaN(parseInt(elementTwo))) {\n        elementOne = parseInt(elementOne);\n        elementTwo = parseInt(elementTwo);\n      } else if ('EnabledDate' === sortConfig.key) {\n        if (elementOne && elementOne.includes('T')) elementOne = new Date(elementOne).getUTCMilliseconds();\n        if (elementTwo && elementTwo.includes('T')) elementTwo = new Date (elementTwo).getUTCMilliseconds();\n      }\n\n      // Correct for null or undefined;\n      if (elementOne === null || elementOne === undefined) elementOne = '';\n      if (elementTwo === null || elementTwo === undefined) elementTwo = '';\n      \n      if (typeof elementOne === 'string' && typeof elementTwo === 'string') {\n        if (elementOne.toUpperCase() < elementTwo.toUpperCase())\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        else if (elementOne.toUpperCase() > elementTwo.toUpperCase())\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n      } else {\n        if (elementOne < elementTwo)\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        else if (elementOne > elementTwo)\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n\n    return sortedItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key, override, pause = false) => {\n    if (pause) return;\n    let direction = 'ascending';\n    if (!override) {\n      if (sortConfig.key === key && sortConfig.direction === 'ascending') direction = 'descending';\n    } else direction = override;\n\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedData, requestSort, sortConfig };\n};\n\nexport default useSort;\n","const formatCurrency = (num, currency = 'USD', locale = 'en-US') => {\n  currency = currency.toUpperCase();  \n  if (currency === 'PHP') locale = 'fil';\n  if (currency === 'AUS') currency = 'USD';\n  if (currency.includes('Z')) \n    currency =\n        currency === 'Z-PHP'\n          ? 'PHP'\n          : currency === 'Z-C$'\n          ? 'CAD'\n          : currency === 'Z-MXN'\n          ? 'MXN'\n          : 'USD';\n  const result = new Intl.NumberFormat(locale, { style: 'currency', currency }).format(num);\n  return result;\n}\n\nexport default formatCurrency;\n","export default function formatHeaders(headers, ignore = '') {\n  if (!headers || headers.length <= 0) return;\n  \n  if (Array.isArray(headers)) {\n    const formattedHeaders = [];\n    headers.forEach(header => {    \n      if (!ignore.includes(header)) {\n        const firstInitial = header[0].toUpperCase();\n        const sample = header.slice(1);\n        const match = sample.match(/[A-Z]/g);\n        \n        if (match) {\n          let formatted = sample.split('');        \n          const indices = [];\n          \n          formatted.forEach((letter, idx) => {\n            if (match.includes(letter)) indices.push(idx);\n          });\n  \n          if (indices.length > 0) {\n            let counter = 0;\n  \n            indices.forEach(index => {\n              formatted.splice(index + counter, 0, ' ');\n              counter++;\n            })\n          }\n  \n          formatted = formatted.join('');\n          formatted = firstInitial + formatted;\n          formattedHeaders.push(formatted);\n        } else {\n          header = firstInitial + sample;\n          formattedHeaders.push(header);\n        }\n      }\n    });\n\n    return formattedHeaders.length <= 0 ? null : formattedHeaders;\n  } else { // The headers argument is a single string, not an array.\n    let formattedHeader, headerArray = headers.split(' ');\n    let sample = headerArray[headerArray.length - 1];\n    const firstInitial = sample[0].toUpperCase();\n    sample = sample.slice(1);\n    const match = sample.match(/[A-Z]/g);\n    \n    if (match) {\n      let formatted = sample.split('');\n      const indices = [];\n      \n      formatted.forEach((letter, idx) => {\n        if (match.includes(letter)) indices.push(idx);\n      });\n\n      if (indices.length > 0) {\n        let counter = 0;\n\n        indices.forEach(index => {\n          if (index > 0) {\n            formatted.splice(index + counter, 0, ' ');\n            counter++;\n          }\n        });\n      }\n\n      formatted = formatted.join('');\n      formatted = firstInitial + formatted;\n      headerArray[headerArray.length - 1] = formatted;\n      formattedHeader = headerArray.join(' ');\n    } else {\n      headerArray[headerArray.length - 1] = firstInitial + sample;\n      formattedHeader = headerArray.join(' ');\n    }\n\n    return formattedHeader;\n  }\n}\n","import React from 'react';\nimport useSort from '../../../hooks/sort-data';\nimport formatCurrency from '../../../hooks/format-currency';\nimport formatHeaders from '../../../hooks/format-headers';\n\nconst Staged = props => {\n  const { items, requestSort, sortConfig } = useSort(props.data, 'staged');\n  const headers = props && props.data && Array.isArray(props.data) && props.data.length > 0 ? formatHeaders(Object.keys(props.data[0])) : [];\n  const getClassNamesFor = name => {\n    if (!sortConfig || !name) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return props.error ? \n  (\n    <div><p>{props.error.message}</p></div>\n  ) \n  : \n  (\n    <div className='dash-staged-tableset'>\n      {!props.isLoaded ? <div className='loading'>Loading . . . </div> : <div className=\"subheader\">{props.subheader}</div>}\n      <table>\n        <thead>\n          <tr className=\"header-row\">\n            {headers.length > 0 ? \n            (\n              headers.map((header, idx) => (\n                <th\n                  key={idx}\n                  onClick={() => requestSort(header[0].toLowerCase() + header.split(' ').join('').slice(1))}\n                  className={getClassNamesFor(header[0].toLowerCase() + header.split(' ').join('').slice(1))}\n                >\n                  {header}\n                </th>\n              ))\n            ) : (\n              <>\n                <th></th>\n              </>\n            )}\n          </tr>\n        </thead>\n          <tbody>\n            {items.length !== 0 ? \n            (\n              items.map((item, key) => (\n                <tr key={key}>\n                  <td>{item.market}</td>\n                  <td>{item.orderCount}</td>\n                  <td>\n                    {item.market === 'CA'\n                      ? formatCurrency(item.totalAmount, 'CAD')\n                      : item.market === 'PH'\n                      ? formatCurrency(item.totalAmount, 'PHP')\n                      : item.market === 'MX'\n                      ? formatCurrency(item.totalAmount, 'MXN')\n                      : formatCurrency(item.totalAmount)}\n                  </td>\n                </tr>\n              ))\n            ) \n            : \n            (\n              null\n            )}\n          </tbody>\n      </table>\n    </div>\n  )\n};\n\nexport default Staged;\n","import axios from 'axios';\n\nexport default async function apiCall(operation, query, variables, token) {\n  const url = window.location.href.includes('localhost:3000') ? process.env.REACT_APP_API_DEV : window.location.href.includes('localhost:3001') ? process.env.REACT_APP_API_LOCAL : process.env.REACT_APP_ENV === 'development' ? process.env.REACT_APP_API_MANUAL : process.env.REACT_APP_API_AUTO;\n  const graphQlQuery = {\n    operation,\n    query,\n    variables\n  };\n  const options = {\n    method: 'POST',\n    url: url,\n    data: JSON.stringify(graphQlQuery),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    withCredentials: true\n  };\n\n  if (token) options.headers.Authorization = `Bearer ${token}`;\n\n  return await axios.request(options).then(\n    res => { return res.data },\n    err => { return err; }\n  );\n}\n","import apiCall from './api-call';\n\nexport async function getOrders(query) {\n  if (!query) return;\n  const operation = query;\n  query = `query ${operation} {${operation} `;\n  query += 'failedPushes' === operation ? `{OrderNumber Market Warehouse CurrencyCode OrderTotalAmount OrderTypeDescription CustomerNumber OrderDate StagingImportDate ErrorCode ErrorMessage}}` : 'failedPulls' === operation ? `{Id OrderNumber OrderDate OrderTotal CurrencyCode At Message Exception}}` : `{Type OrderNumber OrderDate OrderTotal CurrencyCode IgnoredDate User Message}}`;\n  const result = await apiCall(operation, query).then(\n    res => { return res; },\n    err => { return err; }\n  );\n\n  return result;\n}\n\nexport async function getUnpushedOrders(status) {\n  const operation = 'unpushed';\n  const query = `query ${operation} {${operation} {Market, OrderTotalAmount, PushStatusId, Error}}`;\n  const variables = { status }\n  const result = await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => { return err; }\n  );\n\n  return result;\n}\n\nexport async function userAction(tab, operation, ids) {\n  if (!operation || !ids) return;\n  const query = tab === 'unpushed' ? `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {OrderNumber}}` : tab === 'unpulled' ? `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {Id, OrderNumber, OrderDate, OrderTotal, CurrencyCode, Message, At, IgnoredAt, Exception}}` : tab === 'ignored' ? `mutation ${operation}($ids: [IgnoredObject]!) {${operation}(ids: $ids) {OrderNumber}}` : '';\n  const variables = { ids };\n  return await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => console.err(err)\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Staged from './staged';\nimport { getUnpushedOrders } from '../../../hooks/get-order';\n\nconst StagedOrders = () => {\n  const [unpushed, setUnpushed] = useState(null);\n  const [unpushedError, setUnpushedError] = useState(null);\n  const [unpushedIsLoaded, setUnpushedIsLoaded] = useState(false);\n  const [failedPushes, setFailedPushes] = useState(null);\n  const [failedPushesError, setFailedPushesError] = useState(null);\n  const [failedPushesIsLoaded, setFailedPushesIsLoaded] = useState(false);\n  const [ignored, setIgnored] = useState(null);\n  const [ignoredError, setIgnoredError] = useState(null);\n  const [ignoredIsLoaded, setIgnoredIsLoaded] = useState(false);\n  const [apiError, setApiError] = useState(null);\n\n  // Get the unpushed orders from the DB.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      getUnpushedOrders('unpushed').then(\n        res => {          \n          const results = res?.data?.unpushed;\n          const errors = res?.errors;\n\n          if (results) {\n            const error = results[0]?.Error;\n            \n            if (error) {\n              console.error({error});\n              setApiError(error);\n            } else {\n              let unpushedArray = [], failedPushArray = [], ignoredOrdersArray = [], toReturn = [];\n              let unpushedObject = {}, failedPushObject = {}, ignoredOrdersObject = {};\n              \n              if (results) {\n                results.forEach(order => {\n                  if (null === order.PushStatusId) unpushedArray.push(order);\n                  else if (order.PushStatusId === 2) failedPushArray.push(order);\n                  else if (order.PushStatusId === 3) ignoredOrdersArray.push(order);\n                });\n              }\n              \n              // Set the unpushed orders.\n              if (unpushedArray) {\n                unpushedArray.forEach(order => {\n                  if (!unpushedObject[order.Market]) unpushedObject[order.Market] = { orderCount: 1, totalAmount: order.OrderTotalAmount };\n                  else {\n                    const count = unpushedObject[order.Market].orderCount;\n                    const total = unpushedObject[order.Market].totalAmount;\n                    unpushedObject[order.Market] = { orderCount: count + 1, totalAmount: total + order.OrderTotalAmount };\n                  }\n                });\n                Object.keys(unpushedObject).forEach(key => toReturn.push({market: key, orderCount: unpushedObject[key].orderCount, totalAmount: unpushedObject[key].totalAmount}));\n                setUnpushed(toReturn);\n                setUnpushedError(null);\n                toReturn = [];\n                setUnpushedIsLoaded(true);\n              }\n              \n              // Set the failed-push orders.\n              if (failedPushArray) {\n                failedPushArray.forEach(order => {\n                  if (!failedPushObject[order.Market]) failedPushObject[order.Market] = { orderCount: 1, totalAmount: order.OrderTotalAmount };\n                  else {\n                    let count = failedPushObject[order.Market].orderCount;\n                    let total = failedPushObject[order.Market].totalAmount;\n                    failedPushObject[order.Market] = { orderCount: count + 1, totalAmount: total + order.OrderTotalAmount };\n                  }\n                });\n                \n                Object.keys(failedPushObject).forEach(key => toReturn.push({market: key, orderCount: failedPushObject[key].orderCount, totalAmount: failedPushObject[key].totalAmount}));\n                setFailedPushes(toReturn);\n                setFailedPushesError(null);\n                toReturn = [];\n                setFailedPushesIsLoaded(true);\n              }\n              \n              // Set the ingored orders.\n              if (ignoredOrdersArray) {\n                ignoredOrdersArray.forEach(order => {\n                  if (!ignoredOrdersObject[order.Market]) ignoredOrdersObject[order.Market] = { orderCount: 1, totalAmount: order.OrderTotalAmount };\n                  else {\n                    let count = ignoredOrdersObject[order.Market].orderCount;\n                    let total = ignoredOrdersObject[order.Market].totalAmount;\n                    ignoredOrdersObject[order.Market] = { orderCount: count + 1, totalAmount: total + order.OrderTotalAmount };\n                  }\n                });\n                \n                Object.keys(ignoredOrdersObject).forEach(key => toReturn.push({market: key, orderCount: ignoredOrdersObject[key].orderCount, totalAmount: ignoredOrdersObject[key].totalAmount}));\n                setIgnored(toReturn);\n                setIgnoredError(null);\n                toReturn = [];\n                setIgnoredIsLoaded(true);\n              }\n            }\n          } else if (res.name) {\n            setApiError(res.message);\n          } else if (errors) {\n            if (Array.isArray(res.errors)) {\n              res.errors.forEach(error => setApiError(`${error.message}\\n`));\n            } else console.error(res.error);\n          }\n        },\n        err => { \n          setApiError(err);\n          setUnpushedIsLoaded(false);\n          setFailedPushesIsLoaded(false);\n          setIgnoredIsLoaded(false);\n        }\n      );\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return apiError ? \n    (\n      <div className=\"signin-error\">{apiError}</div> \n    )\n    :\n    (  \n      <>\n        <h3 className='section-title'>Staged Orders Summary</h3>\n        <div className='dash-staged'>\n          <Staged data={unpushed} error={unpushedError} isLoaded={unpushedIsLoaded} subheader='Unpushed' />\n          <Staged data={failedPushes} error={failedPushesError} isLoaded={failedPushesIsLoaded} subheader='Failed Pushes' />\n          <Staged data={ignored} error={ignoredError} isLoaded={ignoredIsLoaded} subheader='Ignored Pushes' />\n        </div>\n      </>\n    )\n};\n\nexport default StagedOrders;\n","import apiCall from './api-call';\n\nexport async function checkDbConnection() {\n  const operation = 'checkDbConnection';\n  const query = `query ${operation} {${operation} {Connected, Message}}`;\n  return await apiCall(operation, query).then(\n    res => { return res; },\n    err => { return err; }\n  );\n};\n\nexport async function getAllActiveItems(daysBack, markets) {    \n  if ('number' !== typeof daysBack) daysBack = parseInt(daysBack);\n  const operation = 'getAllActiveItems';\n  const query = `query ${operation}($daysBack: Int!, $markets: [String]!) {${operation}(daysBack: $daysBack, markets: $markets) {ItemCode, Country}}`;\n  const variables = { daysBack, markets };\n  \n  return await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => { return err; }\n  );\n};\n\nexport async function getAllErpItems(itemCodes, markets, environment) {    \n  const operation = 'getAllErpItems';\n  const query = `query ${operation}($itemCodes: [ItemObject]!, $markets: [String]!, $environment: String) {${operation}(itemCodes: $itemCodes, markets: $markets, environment: $environment) {ItemCode Country Error}}`;\n  const variables = { itemCodes, markets, environment };\n  return await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => { return err; }\n  );\n}\n\nexport async function getAllFailedProcesses() {\n  const operation = 'getAllProcessingErrors';\n  const query = `query ${operation} {${operation} {Id, Name, ProcessJobId, Category, ExternalSystem, DataDirection}}`;\n  const jobs = {};\n\n  return await apiCall(operation, query).then(\n    res => {\n      const results = res?.data?.getAllProcessingErrors;\n      const errors = res?.errors;\n      \n      if (results) {\n        const allErrors = res.data?.getAllProcessingErrors;\n\n        if (allErrors) {\n          allErrors.forEach(error => {\n            if (!jobs[error.ProcessJobId]) {\n              jobs[error.ProcessJobId] = { \n                Name: error.Name, \n                Count: 1, \n                Direction: error.DataDirection, \n                ExternalSystem: error.ExternalSystem, \n                Categories: [error.Category]\n              };\n            } else {\n              let count = jobs[error.ProcessJobId].Count;\n              jobs[error.ProcessJobId].Count = count + 1;\n              \n              if (!jobs[error.ProcessJobId].Categories.includes(error.Category)) jobs[error.ProcessJobId].Categories.push(error.Category);\n            }\n          });\n        }\n\n        return jobs;\n      } else if (errors) {\n        const errors = res?.errors;\n\n        if (Array.isArray(errors)) {\n          errors.forEach((error, idx) => {\n            jobs.errors = { [idx]: error.message };\n          })\n        } else {\n          jobs.errors = errors.message;\n        }\n\n        return jobs;\n      }\n    },\n    err => { \n      return err; }\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../../hooks/sort-data';\nimport formatHeaders from '../../../hooks/format-headers';\n\nconst FailedJobs = props => {\n  // Get the table's headers from the data's keys.\n  const headers = props.data && JSON.stringify(props.data) !== '{}' ? formatHeaders(Object.keys(Object.values(props.data)[0])) : [];\n  // The following two constants handle the sorting algorithm.\n  const { items, requestSort, sortConfig } = useSort(props.data && JSON.stringify(props.data) !== '{}' ? Object.values(props.data) : [], 'jobs-summary');\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  \n  return props.error ? \n  (\n    <div className=\"signin-error\">{props.error}</div>\n  )\n  : !props.isLoaded ?\n  (\n    <div className=\"loading\">Loading . . . </div>\n  )\n  :\n  (\n    <>\n      <div className=\"dash-failed-processes desktop\">\n        <table className=\"unprocessed-jobs-table\">\n          <thead>\n            <tr className=\"header-row\">\n\n              {headers ? \n              (\n                headers.map((header, key) => (\n                  <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header}\n                  </th>\n                ))\n              )\n              :\n              (\n                null\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {items.length > 0 ?\n            (\n              items.map((item, key) => (\n                <tr key={key}>\n                  <td>\n                    <Link\n                      to={{\n                        pathname: '/failed-processes',\n                        state: { job: item.Name },\n                      }}\n                    >\n                      {item.Name}\n                    </Link>\n                  </td>\n                  <td>{item.Count}</td>\n                  <td>{item.Direction}</td>\n                  <td>{item.ExternalSystem}</td>\n                  <td>{item.Categories}</td>\n                </tr>\n              )) \n            )\n            :\n            (\n              <tr><td>None</td></tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      { /* Display the table vertically for mobile. */ }\n      <div className=\"dash-failed-processes mobile\">\n        {items.length > 0 ? \n        (\n          items.map((item, i) => (\n            <table key={i}>\n              <thead>\n                {headers ?\n                (\n                  headers.map((header, j) => (\n                    <tr key={j}>\n                      <th >{header}</th>\n                        {header !== 'Name' ? \n                      (\n                        <td>\n                          {item[header.split(' ').join('')]}\n                        </td>\n                      )\n                      :\n                      (\n                        <td className='jobs-link'>\n                          <Link\n                            to={{\n                              pathname: '/failed-processes',\n                              state: { \n                                job: item.Name,\n                              },\n                            }}\n                          >\n                            {item.Name}\n                          </Link>\n                        </td>\n                      )}\n                    </tr>\n                  ))\n                )\n                :\n                (\n                  null\n                )}\n              </thead>\n            </table>\n          ))\n        )\n        :\n        (\n          null\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default FailedJobs;\n","import React, { useState, useEffect } from 'react';\nimport { getAllFailedProcesses } from '../../../hooks/get-dashboard';\nimport FailedJobs from './failed-jobs';\n\nconst FailedProcesses = () => {\n  const [failedProcesses, setFailedProcesses] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Get the data from the db.\n  useEffect(() => {\n    getAllFailedProcesses().then(\n      res => {\n        if (res?.errors) {\n          const errors = Object.values(res.errors);\n          errors.forEach(error => setError(`${error}\\n`));\n        } else {\n          setFailedProcesses(res);\n          setIsLoaded(true);\n        }\n      },\n      err => {\n        setError(`Error: ${err.message}`);\n        setIsLoaded(false);\n      }\n    );\n  }, []);\n  \n  return error ? \n  (\n    <div className=\"signin-error\">{error?.message}</div>\n  )\n  :\n  (\n    <>\n      <h3 className='section-title'>Summary of Failed Processes</h3>\n      <FailedJobs data={failedProcesses} isLoaded={isLoaded} error={error} />\n    </>\n  )\n};\n\nexport default FailedProcesses;\n","import React from 'react';\nimport useSort from '../../../hooks/sort-data';\n\nconst Missing = ({ data, error, market, count }) => {\n  const reformattedData = data && Array.isArray(data) ? data.map(data => ({ itemCode: data})) : '';\n  const { items, requestSort, sortConfig } = useSort(reformattedData, 'missing-items');\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  \n  return error ? \n  (\n    <div>{error}</div>\n  ) : data ?\n  (\n    <div className=\"dash-staged-tableset\">\n      <div className=\"missing-items-subheader\">\n        <p>Market: {market}</p>\n        <p>Count: {count}</p>\n      </div>\n      <table className=\"missing-items-table\">\n        <thead>\n          <tr className=\"header-row\">\n            <th\n              onClick={() => requestSort('itemCode')}\n              className={getClassNamesFor('itemCode')}\n            >Item Code</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.length > 0 ? \n          (\n            items.map((item, key) => (\n              <tr key={key}>\n                <td>{item.itemCode}</td>\n              </tr>\n            ))\n          )\n          : \n          (\n            <tr><td>None</td></tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  ) : '';\n};\n\nexport default Missing;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { getAllActiveItems, getAllErpItems } from '../../../hooks/get-dashboard';\nimport Missing from './missing';\n\nconst BcMissingItems = () => {\n  const [daysBack, setDaysBack] = useState(0);\n  const [missing, setMissing] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState('');\n  const [render, setRender] = useState(false);\n  const markets = useRef(['US', 'PH', 'CA']);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const daysBackInt = !isNaN(parseInt(daysBack)) ? parseInt(daysBack) : '';\n\n    if (daysBackInt && daysBack > 0) {\n      setRender(true);\n      setError(null);\n      document.getElementById('get-missing-bc-items').setAttribute('hidden', true);\n    } else setError('You must enter a positive whole number.');\n  };\n\n  // Retrieve the items missing from BC.\n  useEffect(() => {    \n    let mounted = true;\n\n    if (mounted && render) {\n      // Get all items from the CRM.\n      getAllActiveItems(daysBack, markets.current).then( // args => days back, country.\n        res => {\n          const allItems = res?.data?.getAllActiveItems;\n          const allItemsCount = allItems && Array.isArray(allItems) ? allItems.length : 0;\n          \n          if (allItems && allItems.length > 0) {\n            const environment = null; // => 'Production'\n\n            getAllErpItems(allItems, markets.current, environment).then(\n              res => {                \n                const erpItems = res?.data?.getAllErpItems;\n                const erpItemsCount = erpItems ? erpItems.length : 0;\n                let error;\n                if (erpItemsCount === 1) error = erpItems[0]?.Error;\n                if (error) {\n                  setError(error);\n                  setIsLoaded(true);\n                } else {\n                  let allItemsByMarket = {}, erpItemsByMarket = {}, theMissing = {};\n\n                  markets.current.forEach(market => {\n                    allItemsByMarket[market] = [];\n                    erpItemsByMarket[market] = [];\n                    theMissing[market] = [];\n                  });\n  \n                  allItems.forEach(item => allItemsByMarket[item.Country].push(item.ItemCode.toUpperCase()));\n    \n                  if (erpItemsCount && erpItemsCount !== allItemsCount) {                  \n                    erpItems.forEach(item => erpItemsByMarket[item.Country].push(item.ItemCode.toUpperCase()));\n                    markets.current.forEach(market => theMissing[market] = allItemsByMarket[market].filter(item => !erpItemsByMarket[market].includes(item)));\n                  }\n    \n                  if (theMissing) {\n                    setMissing(theMissing);\n                    setIsLoaded(true);\n                  }\n                }\n\n              },\n              err => {\n                console.error(err);\n                setError(err);\n              }\n            );\n          }\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    }\n\n    return () => mounted = false;\n  }, [daysBack, render]);\n    \n  return (\n    <div className=\"missing-items-container\">\n      <h3 className='section-title'>CRM Items Missing in the ERP</h3>\n      {isLoaded && missing ?\n      (\n        <>\n          <p className='days-back'>Days Back: {daysBack}</p>\n          <div className=\"missing-items-cards\">\n            {markets.current.map((market, key) => (\n              <div key={key} className=\"missing-items-card\">\n                <Missing market={market} count={!error && missing && missing[market].length > 0 ? missing[market].length: 0} data={missing[market]} error={error} />\n              </div>\n            ))}\n          </div>\n        </>\n      ) \n      : render && !isLoaded ? \n      (\n        <div className=\"loading\">Loading . . .</div> \n      ) \n      : isLoaded && !missing ?\n      (\n        null\n      )\n      :\n      (\n        <>\n          <form className=\"get-missing-bc-items\" id=\"get-missing-bc-items\" onSubmit={(e) => handleSubmit(e)}>\n            {/* <p>To see a list of items missing in Business Central, indicate the number of days back you'd like to pull item numbers from Exigo and click \"Submit.\"</p> */}\n            <input type='text' id=\"days-back\" placeholder=\"Number of Days Back\" onChange={(e) => setDaysBack(e.target.value)} />\n            <button className=\"inactive-button\" type=\"submit\">Submit</button>\n          </form>\n          {error ? <p className=\"error\">{error}</p> : null}\n        </>\n      )}\n    </div>\n)};\n\nexport default BcMissingItems;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\n// import PushedOrders from './pushed/pushed-orders';\nimport StagedOrders from './staged/staged-orders';\nimport FailedProcessesSummary from './failed-processes/failed-processes';\nimport BcMissingItems from './missing/bc-missing-items';\n\nconst Home = () => {\n  const [user, setUser] = useState({});\n  const [loggedIn, setloggedIn] = useState(localStorage.getItem('loggedIn') && localStorage.getItem('loggedIn') !== 'null' ? parseInt(localStorage.getItem('loggedIn')) : 0);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const params = useLocation();\n  const userFromState = params?.state?.user;\n    \n  // Set the userFromState and loggedIn and loggedInUser variables.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setloggedIn(localStorage.getItem('loggedIn') && localStorage.getItem('loggedIn') !== 'null' ? parseInt(localStorage.getItem('loggedIn')) : 0);\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n      if (userFromState?.action !== user?.action) setUser(userFromState);\n    }\n    return () => mounted = false;\n  }, [user?.action, userFromState]);\n  \n  return loggedIn ?\n  (\n    loggedInUser && (loggedInUser?.restrictions?.pages === 'None' || !loggedInUser?.restrictions?.pages.includes('Dashboard')) ?\n    (\n      <div className='dashboard-container'>\n        <h3 className='welcome-user'>{`${loggedInUser.name ? `Welcome, ${loggedInUser.name}` : ''}`}</h3>\n        {/* <PushedOrders /> */}\n        <StagedOrders />\n        <FailedProcessesSummary />\n        <BcMissingItems />\n      </div>\n    )\n    :\n    (\n      <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser.role}\" does not allow you to access this page.</div>\n    )\n  )\n  : \n  (\n    // <div className=\"signin-error\">{user?.name ? `${user.name}, you're not logged in; please try signing in again.` : 'You must sign in to access this resource.'}</div>\n    <Redirect to={\n      {\n        pathname: '/login',\n        state: {\n          action: 'Sign In',\n          message: 'Please sign in.'\n        },\n      }\n    }\n    />\n  )\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Checkbox = ({ value, type, name, handleClick, isChecked }) => {\n  return (\n    <input\n      value={value}\n      name={name}\n      type={type}\n      onChange={handleClick}\n      checked={isChecked}\n      className='checkbox'\n    />\n  );\n};\n\nexport default Checkbox;\n","const actions = {\n  unpulled: [\n    {\n      pathname: '/failed-orders',\n      postPath: 'failedPulls',\n      action: 'Repull',\n      actionId: 'unpulled',\n      onClickArg: 'repullCrmOrders',\n      title: 'Repull'\n    },\n    {\n      pathname: '/failed-orders',\n      postPath: 'CrmOrders',\n      action: 'Ignore',\n      actionId: 'unpulled',\n      onClickArg: 'ignoreCrmOrders',\n      title: 'Ignore'\n    }\n  ],\n  unpushed: [\n    {\n      pathname: '/failed-orders',\n      postPath: 'failedPushes',\n      action: 'Repush',\n      actionId: 'unpushed',\n      onClickArg: 'repushFailedStagedOrders',\n      title: 'Repush'\n    },\n    {\n      pathname: '/failed-orders',\n      postPath: 'StagingOrders',\n      action: 'Ignore',\n      actionId: 'unpushed',\n      onClickArg: 'ignoreFailedStagedOrders',\n      title: 'Ignore'\n    },\n    {\n      pathname: '/failed-orders',\n      postPath: 'StagingOrders',\n      action: 'Delete',\n      actionId: 'unpushed',\n      onClickArg: 'deleteFailedStagedOrder',\n      title: 'Delete'\n    }\n  ],\n  ignored: [\n    {\n      pathname: '/failed-orders',\n      postPath: '',\n      action: 'Unignore',\n      actionId: 'ignored',\n      onClickArg: 'unignoreOrder',\n      title: 'Unignore'\n    }\n  ]\n};\n\nexport default actions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport actions from '../actions';\n\n  // Create the action buttons.\n  const getActions = (tab, restrictions, isChecked, takeAction) => {\n    const links = (\n      restrictions === 'All' ? \n      (\n        null\n      )\n      :\n      (\n        actions[tab].map((action, key) => (\n          !restrictions.includes(action.title) ?\n          (\n            <Link\n              to={{\n                pathname: action.pathname,\n                state: {\n                  order: isChecked,\n                  postPath: action.postPath,\n                  action: action.action,\n                  id: action.actionId\n                },\n              }}\n              key={key}\n              onClick={() => takeAction(action.onClickArg)}\n            >\n              {action.title}\n            </Link>\n          )\n          :\n          (\n            null\n          )\n        ))\n      )\n    );\n\n    return links;\n  };\n\n  export default getActions;\n","import React, { useState, useEffect } from 'react';\nimport formatHeaders from '../hooks/format-headers';\nimport formatCurrency from '../hooks/format-currency';\n\nconst OrderDetails = props => {\n  const [item, setItem] = useState({});\n  const [pastedValue, setPastedValue] = useState(null);\n  const category = props.caller ? Object.keys(props.caller)[0] : null;\n  const caller = props.caller ? Object.values(props.caller)[0] : null;\n  const editableFields = {\n    settings: {\n      maps: [\n        'SourceWarehouse',\n        'SourceShipMethod',\n        'DestinationWarehouse'\n      ],\n      params: [\n        'EnabledDate',\n        'Value',\n        'Category',\n        'SubCategory',\n        'Notes'\n      ]\n    },\n    users: {\n      user: [\n        'Name',\n        'Role'\n      ]\n    }\n  };\n\n  const closeModal = () => {\n    const main = Object.values(document.getElementsByTagName('main'))[0];\n    const attribute = main.getAttribute('style');\n    if (attribute) main.removeAttribute('style'); // Remove the style attribute that fixes the main's height upon closing the modal.\n    props.closeModal();\n  };\n  \n  const handlePaste = (event, id) => {\n    event.preventDefault();\n    const paste = (event.clipboardData || window.clipboardData).getData('text');\n    setPastedValue([id, paste]);\n  };\n\n  const handleClick = (e, key, item) => {\n    const role = document.getElementById(`user-role-${key}`);\n    const newRole = e.target.textContent;\n\n    if (role && newRole) role.textContent = newRole;\n\n    props.handleRoleSelect(e, props.details.idx, key, item, 'modal');\n  };\n\n  // Populate the item state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setItem(props.details);\n    }\n    return () => mounted = false;\n  }, [props.details]);\n  \n  // Resize the main tag to fit the modal.\n  useEffect(() => {\n    const modal = document.getElementsByClassName('order-details-modal');\n    \n    if (modal && modal.length > 0) {\n      const main = Object.values(document.getElementsByTagName('main'))[0];\n      const modalHeight = Object.values(modal)[0]?.clientHeight;\n      const mainHeight = main.clientHeight;\n\n      if (modalHeight > mainHeight) {\n        main.setAttribute('style', `height: ${modalHeight + 10}px`);\n      } else {\n        const attribute = main.getAttribute('style');\n        if (attribute) main.removeAttribute('style');\n      }\n    }\n  }, [item]);\n    \n  return item && JSON.stringify(item) !== '{}' ? \n  (\n    <div className='order-details-modal'>\n      <div className='x-close-container'>\n        <span className=\"x-close\" onClick={() => closeModal()}>x</span>\n      </div>\n      <div className='order-details-card'>\n        {Object.entries(item).map((detail, key) => (\n          detail[0] !== 'idx' ? \n          (\n            <div key={key} className='order-details-detail'>\n              {caller && category ? \n              (\n                editableFields[category][caller].includes(detail[0]) ?\n                (\n                  <div className='order-details-detail-container'>\n                    {detail[0] === 'EnabledDate' ? \n                    (\n                      <>\n                        <p className={props.getClassNamesFor(detail[0])}>Enabled</p>\n                        <p\n                        className=\"editable\"\n                        suppressContentEditableWarning=\"true\"\n                        data-default-value=\"&#10003;\"\n                        id={`checkmark-${key}`}\n                        onBlur={(e) => props.handleBlur(caller === 'maps' ? item.Id : item.Name, key, detail[0], e, caller === 'params' ? item.idx : null)}\n                        onClick={(e) => props.handleClick(e.target, key, detail[0], item.Name, item.EnabledDate, item, item.idx)}\n                        onPaste={(e) => {handlePaste(e, `${detail[1] ? detail[1] : 'None'}-${key}`)}}\n                      >\n                        {detail[1] && detail[1] !== 'disable' ? <span data-default-value=\"&#10003;\">&#10003;</span> : <span data-default-value=\"&#10003;\">No</span>}\n                      </p>\n                    </>\n                    )\n                    : detail[0] === 'Role' ?\n                    (\n                      <>\n                        <p className={props.getClassNamesFor(detail[0])}>{formatHeaders(detail[0])}</p>\n                        <div className='editable select-container' id={`select-role-${key}`} name='role'>\n                          <p \n                            className='role-option default' \n                            id={`user-role-${key}`}\n                            data-default-value={detail[1]}\n                            onClick={() => props.toggleSelect(key)}\n                          >\n                            {detail[1]}\n                          </p>\n                          {props.userRoles.map((value, idx) => (\n                            <p \n                              className='role-option' \n                              id={`${item.Role}-${idx}`}\n                              key={idx} \n                              data-value={value.Id} \n                              onClick={(e) => handleClick(e, key, item)}\n                            >\n                              {value.Role}\n                            </p>\n                          ))}\n                        </div>\n                      </>\n                    )\n                    :\n                    (\n                      <>\n                        <p className={props.getClassNamesFor(detail[0])}>{formatHeaders(detail[0])}</p>\n                        <p\n                          className=\"editable\"\n                          suppressContentEditableWarning=\"true\"\n                          data-default-value={detail[1]}\n                          id={`${detail[0] ? detail[0] : 'None'}-${key}`}\n                          onBlur={(e) => props.handleBlur(caller === 'maps' || caller === 'user' ? item.Id : item.Name, caller === 'user' ? item.idx : key, detail[0], e, caller === 'params' || caller === 'user' ? item.idx : null)}\n                          onClick={(e) => props.handleClick(e.target, key, detail[0])}\n                          onPaste={(e) => {handlePaste(e, `${detail[1] ? detail[1] : 'None'}-${key}`)}}\n                        >\n                          {pastedValue && pastedValue[1] !== detail[1] && pastedValue[0] === `${detail[1] ? detail[1] : 'None'}-${key}` ? pastedValue[1] : detail[1] ? detail[1] : 'None'}\n                        </p>\n                      </>\n                    )}\n                  </div>\n                )\n                : detail[0] === 'ActivatedAt' || detail[0] === 'DeactivatedAt' || detail[0] === 'ModifiedAt' || detail[0] === 'At' || detail[0] === 'DateRegistered' || detail[0] === 'LastLogin' || detail[0] === 'OrderDate' || detail[0] === 'IgnoredAt' || detail[0] === 'StagingImportDate' || detail[0] === 'IgnoredDate' ?\n                (\n                  <div className='order-details-detail-container'>\n                    <p>{formatHeaders(detail[0])}</p>\n                    <p>{detail[1] ? new Date(parseInt(detail[1])).toISOString().split('T')[0] : 'N/A'}</p>\n                  </div>\n                )\n                :\n                (\n                  <div className='order-details-detail-container'>\n                    <p>{formatHeaders(detail[0])}</p>\n                    <p>{(detail[0] === 'LoggedIn' || detail[0] === 'Active') && detail[1] ? 'Yes' : (detail[0]  === 'LoggedIn' || detail[0] === 'Active') && !detail[1] ? 'No' : detail[1] ? detail[1] : 'None'}</p>\n                  </div>\n                )\n              )\n              : detail[0] === 'ActivatedAt' || detail[0] === 'DeactivatedAt' || detail[0] === 'ModifiedAt' || detail[0] === 'At' || detail[0] === 'DateRegistered' || detail[0] === 'LastLogin' || detail[0] === 'OrderDate' || detail[0] === 'IgnoredAt' || detail[0] === 'StagingImportDate' || detail[0] === 'IgnoredDate' ?\n              (\n                <div className='order-details-detail-container'>\n                  <p>{formatHeaders(detail[0])}</p>\n                  <p>{detail[1] ? new Date(parseInt(detail[1])).toISOString().split('T')[0] : 'None'}</p>\n                </div>\n              )\n              :\n              (\n                detail[0] !== 'CurrencyCode' ? \n                (\n                  <div className='order-details-detail-container'>\n                    <p>{formatHeaders(detail[0])}</p>\n                    <p>{detail[0].includes('OrderTotal') ? formatCurrency(detail[1], item['CurrencyCode']) : detail[1] ? detail[1] : 'None'}</p>\n                  </div>\n                )\n                :\n                (\n                  null\n                )\n              )}\n            </div>\n          )\n          :\n          (\n            null\n          )\n        ))}\n      </div>\n    </div>\n  )\n  :\n  (\n    null\n  );\n}\n\nexport default OrderDetails;\n","import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport formatHeaders from '../../hooks/format-headers';\nimport { userAction } from '../../hooks/get-order';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\n\nconst UnPulled = props => {\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState([]);\n  const [error, setError] = useState(null);\n  const [unpulled, setUnpulled] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [toggleShorterError, setToggleShorterError] = useState(false);\n  // const [shortenDates, setShortenDates] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0);\n  // Call the sorting algorithm and set the class as ascending or descending.\n  const { items, requestSort, sortConfig } = useSort(unpulled, 'unpulled');\n  \n  // Determine whether the class is ascending or descending.\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  // Format the headers.\n  const headers = unpulled && unpulled.length > 0 ? formatHeaders(Object.keys(unpulled[0]), ['Id', 'CurrencyCode', 'IgnoredAt']) : '';\n\n  // Handle the user's selected action.\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      if (path) {\n        userAction('unpulled', path, isChecked).then(\n          res => {\n            if (res) {\n              setResponse(res.data[path]);\n              setStatus(res.status);\n              setError(null);\n              showMessage.current = true;\n            }\n          },\n          err => {\n            console.error({err});\n            setError(err.message);\n            showMessage.current = false;\n          }\n        );\n        setIsChecked([]);\n        setAllChecked(false);\n        props.recall('failedPulls');\n      }\n    } else alert('Please tick an order.');\n\n    // Deactivate action buttons if a user's profile has restrictions that match.\n    if (props?.restrictedActions === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }    \n  };\n  \n  // Handle the toggling of the select-all checkbox.\n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(unpulled.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n  };\n\n  // Handle the toggling of a single item's checkbox.\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n\n  // Set the verb to display in the message for the action links.\n  const message = (action) => {\n    let pastTenseVerb = null;\n    if (action) {\n      if (action === 'Repull') pastTenseVerb = 'repulled';\n      if (action === 'RepullAllowMismatch')\n        pastTenseVerb = 'repulled with mismatch';\n      if (action === 'Ignore') pastTenseVerb = 'ignored';\n      // if (action === 'Retry') pastTenseVerb = 'repulled';\n      // if (action === 'Pull') pastTenseVerb = 'pulled';\n      // if (action === 'Push') pastTenseVerb = 'pushed';\n    }\n    return pastTenseVerb;\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    // setIsChecked([]);\n    clickCount.current = 0;\n  };\n\n  // Handle the click to show a modal with the full error message.\n  const toggleErrorMessage = id => {\n    if (!toggleShorterError) return;\n    const element = document.getElementById(id);\n    if (element) element.classList.toggle('show-error');\n  };\n\n  // Display long or short versions of the date based on browser width.\n  // const shortOrderDates = document.getElementsByClassName('unpulled order-dates true');\n  // const longOrderDates = document.getElementsByClassName('unpulled order-dates false');\n  // const shortAttemptedDates = document.getElementsByClassName('attempted-dates true');\n  // const longAttemptedDates = document.getElementsByClassName('attempted-dates false');\n\n  // if (items.length > 0) {\n  //   if (shortenDates && shortOrderDates.length > 0 && shortAttemptedDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortAttemptedDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //   } else if (!shortenDates && longOrderDates.length > 0 && longAttemptedDates.length > 0 ) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = items[i].OrderDate ? `${orderDate.split('T')[0]} at ${orderDate.split('T')[1].substring(0, 5)}` : 'None';\n  //     };\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longAttemptedDates[i];\n  //       const at = new Date(parseInt(items[i].At)).toISOString();\n  //       if (cell) cell.textContent = items[i].At ? `${at.split('T')[0]} at ${at.split('T')[1].substring(0, 5)}` : 'None';\n  //     };\n  //   }\n  // }\n\n  // Set the unpulled state variable with props.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) setUnpulled(props.data.failedPulls);\n    return () => mounted = false;\n  }, [props]);\n\n  // Manage the value of the allChecked state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (unpulled && unpulled.length !== 0 && isChecked.length === unpulled.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, unpulled]);\n\n  // Toggle the activeLink state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';  \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n  \n  // Hide the message of the action's result after a new tab has been chosen.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n    return () => mounted = false;\n  });\n\n  // Hide checkboxes if a user is not allowed any actions.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props?.restrictedActions) {\n        if (props.restrictedActions === 'All') { // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n    \n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n    \n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        } \n      }\n    }\n\n    return () => mounted = false;\n  }, [props?.restrictedActions, items]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n  \n  // Determine the width of the browser window and set toggles accordingly.\n  useLayoutEffect(() => {\n    let mounted = true;\n    const browserWidth = window.innerWidth;\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    } \n    window.onresize = handleResize;\n\n    if (mounted) {\n      if (browserWidth < 768) {\n        setToggleShorterError(true);\n        // setShortenDates(true);\n      } else {\n        setToggleShorterError(false);\n        // setShortenDates(false);\n      }\n    }\n    return () => mounted = false;\n  }, [width]);\n  \n  return props.getQuery === 'failedPulls' ?\n  ( \n    props.error ? \n    ( \n      <div className=\"signin-error\">{props.error.message}</div>\n    ) : !props.isLoaded ? \n    ( \n      <div className=\"loading\">Loading . . .</div>\n    ) : (\n      <>\n        <div className=\"order-info\">\n          {items.length > 0 ? \n          (\n            <div className='stats'>\n              <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n              <p className=\"order-info-number-display\">Count: {items.length}</p>\n            </div>\n          )\n          :\n          (\n            null\n          )}\n          {activeLink ? \n          (\n            <div className=\"action-links\">\n              <form className=\"link\">\n                {props && props.restrictedActions ? getActions('unpulled', props.restrictedActions, isChecked, takeAction) : null}\n              </form>\n            </div>\n          ) : status && status !== 200 && response ? \n          (\n            <div>Error: {error}</div>\n          ) : (\n            ''\n          )}\n          {props.callerId === 'unpulled' ? (\n            !error ? (\n              props.order ? (\n                showMessage.current && props.action && !activeLink && props.restrictedActions !== 'All' && (props.action === 'Repull' || props.action === 'Ignore' || props.action === 'Delete') ? (\n                  typeof props.order === 'number' || props.order.length === 1 ? (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>Order {props.order} has been {message(props.action)}.</p>\n                    </div>\n                    ) : (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>The following orders have been {message(props.action)}:&nbsp;</p>\n                      <div className='orders-in-array'>\n                        {props.order.map((id, key) => (\n                          props.order.length === 1 ? \n                          ( \n                            <p key={key}>{id}</p>\n                          )\n                          : key === props.order.length - 1 ?\n                          (\n                            <p key={key}>{id}.</p>\n                          )\n                          :\n                          (\n                            <p key={key}>{id},<span>&nbsp;</span></p>\n                          )                          \n                        ))}\n                      </div>\n                    </div>\n                    )\n                  ) : (\n                  ''\n                  ) \n              ) : (\n                ''\n              )\n            ) : (\n              props.order ? (\n                typeof props.order === 'number' || props.order.length === 1 ? (\n                <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                  The following error occurred when order {props.order} was {message(props.action)}: {error}.\n                </div>\n                ) : (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                  <p>There was a \"{error}\" error when the following orders were {message(props.action)}:</p>\n                  <div className='orders-in-array'>\n                  {props.order.map((id, key) => (\n                          props.order.length === 1 ? \n                          ( \n                            <p key={key}>{id}</p>\n                          )\n                          : key === props.order.length - 1 ?\n                          (\n                            <p key={key}>{id}.</p>\n                          )\n                          :\n                          (\n                            <p key={key}>{id},<span>&nbsp;</span></p>\n                          )                          \n                        ))}\n                  </div>\n                </div>\n                )\n              ) : (\n                ''\n              )\n            )\n          ) : (\n            ''\n          )}\n        </div>\n        <table className=\"unpulled-table-large\" id=\"tab\">\n          <thead>\n            <tr className='header-row'>\n              {items.length !== 0 ? (\n                <th className='checkbox-th'>\n                <Checkbox\n                    type='checkbox'\n                    name='selectAll'\n                    handleClick={handleSelectAll}\n                    isChecked={allChecked}\n                  />\n                </th>\n              ) : (\n                <th className='hidden-checkbox'></th>\n              )}\n              {headers ? \n              (\n                <>\n                  {headers.map((header, key) => (\n                    vpWidth < 1280 ?\n                    (\n                      header !== 'At' && header !== 'Exception' ?\n                      (\n                        <th\n                          key={key}\n                          onClick={() => requestSort(header.split(' ').join(''))}\n                          className={`${getClassNamesFor(header.split(' ').join(''))}`}\n                        >\n                          {header === 'Message' ? 'Error' : header.replace('Order', '')}\n                        </th>\n                      )\n                      :\n                      (\n                        null\n                      )\n                    )\n                    :\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={`${getClassNamesFor(header.split(' ').join(''))}`}\n                      >\n                          {header === 'Message' ? 'Error' : header.replace('Order', '')}\n                      </th>\n                    )\n                  ))}\n                </>\n              )\n              : \n                null\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {items.length !== 0 ? \n            (\n              items.map((item, key) => (\n                <tr key={key}>\n                  <td className='select-one'>\n                    <Checkbox\n                      type='checkbox'\n                      name={item.OrderNumber}\n                      value={item.OrderNumber}\n                      handleClick={handleSelect}\n                      isChecked={isChecked.includes(item.OrderNumber)}\n                    />\n                  </td>\n                  <td className=\"order-number order-link\">\n                    {vpWidth < 1280 ?\n                    (\n                      <Link\n                        to='#'\n                        onClick={() => takeAction('showDetails', item, key)}\n                      >\n                        {item.OrderNumber}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.OrderNumber\n                    )}\n                  </td>\n\n                  <td className={`unpulled order-dates mobile`}>\n                    {item.OrderDate ? \n                    (\n                      new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]\n                    ) : (\n                      'None'\n                    )}\n                  </td>\n                  {/* To-do: CSS this in at a certain screen width. */}\n                  <td className={`unpulled order-dates desktop`}>\n                    {item.OrderDate ? \n                    (\n                      new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]\n                    ) : (\n                      'None'\n                    )}\n                  </td>\n\n                  <td>{formatCurrency(item.OrderTotal, item.CurrencyCode)}</td>\n\n                  {/* To-do: CSS this in at a certain screen width. */}\n                  <td className={`attempted-dates desktop`}>\n                    {item.At ? \n                    (\n                      new Date(parseInt(item.At)).toISOString().split('T')[0]\n                    ) : (\n                      'None'\n                    )}\n                  </td>\n\n                  <td \n                    name={item.OrderNumber} \n                    className={`error-message ${toggleShorterError}`} \n                    onClick={() => toggleErrorMessage(item.OrderNumber)}\n                  >\n                    <p>{!toggleShorterError ? item.Message : `${item.Message.slice(0, 7)}...`}</p>\n                  </td>\n                  <td \n                    name={item.OrderNumber} \n                    id={item.OrderNumber} \n                    className='error-message-unpulled'\n                  >\n                    <div className='x-close-container'>\n                      <span className=\"x-close\" onClick={() => toggleErrorMessage(item.OrderNumber)}>x</span>\n                    </div>\n                    <p>{item.Message}</p>\n                  </td>\n                  <td className='exception desktop'>{item.Exception ? item.Exception : 'None'}</td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td className='hidden-checkbox'></td>\n                <td>None</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> : null}\n      </>\n    )\n  ) : (\n    ''\n  );\n};\n\nexport default UnPulled;\n","import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport formatHeaders from '../../hooks/format-headers';\nimport { userAction } from '../../hooks/get-order';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\n\nconst UnPushed = props => {\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [unpushed, setUnpushed] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [chars, setChars] = useState(999);\n  const [width, setWidth] = useState(window.innerWidth);\n  // const [shortenDates, setShortenDates] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0);\n\n  // Call the sorting hook.\n  const { items, requestSort, sortConfig } = useSort(unpushed, 'unpushed');\n  \n  // Determine class is ascending or descending.\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  // Format the headers.\n  const headers = unpushed && unpushed.length > 0 ? formatHeaders(Object.keys(unpushed[0]), 'CurrencyCode') : '';\n\n  // Handle the user's selected action.\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      if (path) {\n        userAction('unpushed', path, isChecked)\n        .then(\n          res => {\n            if (res) {\n              setResponse(res.data[path]);\n              setStatus(res.status);\n              setError(null);\n              showMessage.current = true;\n            }\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              setError(err.message);\n              showMessage.current = false;\n            }\n          }\n        );\n        setIsChecked([]);\n        setAllChecked(false);\n        props.recall('failedPushes');\n      }\n    } else alert('Please tick an order.');\n    \n    // Deactivate action buttons if a user's profile has restrictions that match.\n    if (props?.restrictedActions === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }  \n  };\n  \n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(unpushed.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n    sessionStorage.clear();\n  };\n\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n    sessionStorage.clear();\n  };\n\n  const toggleError = id => {\n    const errorElement = document.getElementById(id);\n    if (errorElement) errorElement.classList.toggle('show-error');\n  };\n\n  const clickSniffer = event => {\n    let id;\n    const errorElement = document.getElementById('show-error');\n    if (errorElement && !event.target.attributes.name) {\n      id = errorElement.attributes.name.nodeValue;\n      errorElement.setAttribute('id', id);\n    } \n    return () => {\n      // Unbind the event listener on clean up.\n      document.removeEventListener(\"mousedown\", clickSniffer);\n    };\n  }\n\n  // Display a message to the user indicating which action has been taken and on what ID number.\n  const message = (action) => {\n    let pastTenseVerb = null;\n    if (action) {\n      if (action === 'Repush') pastTenseVerb = 'repushed';\n      if (action === 'Ignore') pastTenseVerb = 'ignored';\n      if (action === 'Delete') pastTenseVerb = 'deleted';\n    }\n    return pastTenseVerb;\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    // setIsChecked([]);\n    clickCount.current = 0;\n  };\n  \n  // Display long or short versions of the date based on browser width.\n  // const shortOrderDates = document.getElementsByClassName('unpushed order-dates true');\n  // const longOrderDates = document.getElementsByClassName('unpushed order-dates false');\n\n  // if (items.length > 0) {\n  //   if (shortenDates && shortOrderDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //   } else if (!shortenDates && longOrderDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longOrderDates[i];\n  //       const stagingImportDate = new Date(parseInt(items[i].StagingImportDate)).toISOString();\n  //       if (cell) cell.textContent = `${stagingImportDate.split('T')[0]} at ${stagingImportDate.split('T')[1].substring(0, 5)}`;\n  //     };\n  //   }\n  // }\n  \n  useEffect(() => {\n    let mounted = true;\n    if (mounted) setUnpushed(props.data.failedPushes);\n    return () => mounted = false;\n  }, [props.data]);\n\n  // Toggle allChecked.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (unpushed && unpushed.length !== 0 && isChecked.length === unpushed.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, unpushed]);\n\n  // Show or hide optional actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';  \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n\n  // Bind the event listener.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) document.addEventListener(\"mousedown\", clickSniffer);\n    return () => mounted = false;\n  });\n\n  // Hide the message of the action's result after a new tab has been chosen.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n    return () => mounted = false;\n  }, [props.click]);\n\n  // Hide checkboxes if a user is not allowed any actions.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props?.restrictedActions) {\n        if (props.restrictedActions === 'All') { // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n    \n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n    \n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        } \n      }\n    }\n\n    return () => mounted = false;\n  }, [props?.restrictedActions, items]);  \n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n  \n  // Determine the width of the browser window and set toggles accordingly.\n  useLayoutEffect(() => {\n    let mounted = true;\n    const handleResize = () => setWidth(window.innerWidth);\n    if (mounted) {\n      // if (width < 1280) setShortenDates(true);\n      setChars(width < 768 ? 7 : width < 1023 ? 24 : width < 1280 ? 48 : 999);  \n      window.onresize = handleResize;\n    }\n\n    return () => mounted = false;    \n  }, [width, chars, items]);\n  \n  return props.getQuery === 'failedPushes' ?\n  (\n    props.error ? \n    (\n      <div className=\"signin-error\">{props.error.message}</div>\n    ) : !props.isLoaded ? \n    ( \n      <div className=\"loading\">Loading . . .</div>\n    ) : (\n      <>\n        <div className='order-info'>\n          {items.length > 0 ? \n          (\n            <div className='stats'>\n              <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n              <p className=\"order-info-number-display\">Count: {items.length}</p>\n            </div>\n          )\n          :\n          (\n            null\n          )}\n          {activeLink ? (\n            <div className='action-links'>\n              <form className='link'>\n                {props && props.restrictedActions ? getActions('unpushed', props.restrictedActions, isChecked, takeAction) : null}\n              </form>\n            </div>\n          ) : status && status !== 200 && response ? (\n            <div>Error: {error}</div>\n          ) : (\n            ''\n          )}\n          {props.callerId === 'unpushed' ? \n          (\n            !error ? \n            (\n              props.order ? (\n                showMessage.current && props.action && !activeLink && (props.action === 'Repush' || props.action === 'Ignore' || props.action === 'Delete') ? (\n                  typeof props.order === 'number' || props.order.length === 1 ? (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>Order {props.order} has been {message(props.action)}.</p>\n                    </div>\n                  ) : (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>The following orders have been {message(props.action)}:&nbsp;</p>\n                      <div className='orders-in-array'>\n                        {props.order.map((id, key) => (\n                          props.order.length === 1 ? \n                          ( \n                            <p key={key}>{id}</p>\n                          )\n                          : key === props.order.length - 1 ?\n                          (\n                            <p key={key}>{id}.</p>\n                          )\n                          :\n                          (\n                            <p key={key}>{id},<span>&nbsp;</span></p>\n                          )                          \n                        ))}\n                      </div>\n                    </div>\n                  )\n                ) : (\n                  ''\n                )\n              ) : (\n                ''\n              )\n            ) \n            : \n            (\n              props.order ? (\n                typeof props.order === 'number' || props.order.length === 1 ? \n                (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>The following error occurred when order {props.order} was {message(props.action)}: {error}.</p>\n                  </div>\n                ) \n                : \n                (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>There was a \"{error}\" error when the following orders were {message(props.action)}:</p>\n                    <div className='orders-in-array'>\n                      {props.order.map((id, key) => (\n                        props.order.length === 1 ? \n                        ( \n                          <p key={key}>{id}</p>\n                        )\n                        : key === props.order.length - 1 ?\n                        (\n                          <p key={key}>{id}.</p>\n                        )\n                        :\n                        (\n                          <p key={key}>{id},<span>&nbsp;</span></p>\n                        )                          \n                      ))}\n                    </div>\n                  </div>\n                )\n              ) : (\n                null\n              )\n            )\n          ) : (\n            null\n          )}\n        </div>\n          \n        <table className=\"unpushed-table\">\n          <thead>\n            <tr className='header-row'>\n              {items.length !== 0 ? (\n                <th className='checkbox-th'>\n                  <Checkbox\n                    type='checkbox'\n                    name='selectAll'\n                    handleClick={handleSelectAll}\n                    isChecked={allChecked}\n                  />\n                </th>\n              ) : (\n                <th className='hidden-checkbox'></th>\n              )}\n              {headers ? \n              (\n                headers.map((header, key) => (\n                  vpWidth < 1280 ?\n                  (\n                    header !== 'Market' && header !== 'Error Code' && header !== 'Staging Import Date' && header !== 'Customer Number' && header !== 'Order Type Description' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header === 'Order Number' ? header.replace('Number', '') : header === 'Customer Number' ? header.replace('Number', '') : header === 'Warehouse' ? 'WHouse' : header.replace('Order', '').replace('Amount', '').replace('Description', '').replace('Message', '')}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                  :\n                  (\n                    header !== 'Error Code' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header === 'Order Number' ? header.replace('Number', '') : header === 'Customer Number' ? header.replace('Number', '') : header.replace('Order', '').replace('Amount', '').replace('Description', '').replace('Message', '').replace('Staging', '')}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                ))\n              )\n              : \n                null\n              }\n            </tr>\n          </thead>\n          <tbody>\n          {props && items.length > 0 ? (\n            items.map((item, key) => (\n                <tr key={key}>\n                  <td className='select-one'>\n                    <Checkbox\n                      type='checkbox'\n                      name={item.OrderNumber}\n                      value={item.OrderNumber}\n                      handleClick={handleSelect}\n                      isChecked={isChecked.includes(item.OrderNumber)}\n                    />\n                  </td>\n                  <td className='order-number order-link'>\n                    {vpWidth < 1280 ?\n                    (\n                      <Link\n                        to='#'\n                        onClick={() => takeAction('showDetails', item, key)}\n                      >\n                        {item.OrderNumber ? item.OrderNumber : 'None'}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.OrderNumber ? item.OrderNumber : 'None'\n                    )}\n                  </td>\n                  <td className=\"reduceable-td desktop\">{item.Market}</td>\n                  <td className=\"warehouse mobile\">{item.Warehouse.split('-')[0]}-<br />{item.Warehouse.split('-')[1]}</td>\n                  <td className=\"warehouse desktop\">{item.Warehouse ? item.Warehouse : 'None'}</td>\n                  <td>{formatCurrency(item.OrderTotalAmount, item.CurrencyCode)}</td>\n                  <td className=\"order-type desktop\">{item.OrderTypeDescription ? item.OrderTypeDescription : 'None'}</td>\n                  <td className=\"reduceable-td desktop\">{item.CustomerNumber}</td>\n                  <td className=\"order-date\">{new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]}</td>\n                  <td className={`unpushed order-dates desktop`}>\n                    {new Date(parseInt(item.StagingImportDate)).toISOString().split('T')[0]}\n                  </td>\n                  {/* <td className=\"error-code desktop\">{item.ErrorCode ? item.ErrorCode : 'None'}</td> */}\n\n                  <td className=\"unpushed-error-message\">\n                    <span \n                      className={`error-message-button ${item.ErrorMessage.length < chars ? true : false}`} \n                      title={item.ErrorMessage.length > chars ? \"Click to view the error.\" : ''} \n                      onClick={item.ErrorMessage.length > chars ? () => toggleError(item.OrderNumber) : null} \n                      name={item.OrderNumber}\n                    >\n                      {item.ErrorMessage.includes('\\r\\n') ? `${item.ErrorMessage.split('\\r\\n').join(' ').slice(0, chars)}` : `${item.ErrorMessage.slice(0, chars)}`}{item.ErrorMessage.length > chars ? '...' : ''}\n                    </span>\n                  </td>\n                  <td \n                    name={item.OrderNumber} \n                    id={item.OrderNumber} \n                    className='error-message-unpulled'\n                  >\n                    <div className='x-close-container'>\n                      <span className=\"x-close\" onClick={() => toggleError(item.OrderNumber)}>x</span>\n                    </div>\n                    <p>{item.ErrorMessage}</p>\n                  </td>\n\n                </tr>\n            ))\n          ) : (\n              <tr>\n                <td className='hidden-checkbox'></td>\n                <td>None</td>\n              </tr>\n          )}\n          </tbody>\n        </table>\n\n        {/* <table>\n          <thead>\n            <tr className='header-row error-message-unpushed'>\n              <th\n                onClick={() => requestSort('errorMessage')}\n                className={getClassNamesFor('errorMessage')}\n              >\n                Message\n              </th>\n            </tr>\n          </thead>\n          {items.length !== 0 ? (\n          <tbody >\n            {items.map((item, key) => (\n              <tr key={key}>\n                <td name={item.OrderNumber} id={item.OrderNumber} className='error-message-unpushed'>\n                  <span onClick={toggleError} className=\"x-close\">X</span>\n                  {item.ErrorMessage.includes('\\r\\n') ? `${item.ErrorMessage.split('\\r\\n').join(' ')}` : item.ErrorMessage}\n                </td>\n              </tr>\n                )\n                )}\n          </tbody>\n          ) : (\n            <tbody hidden><tr><td></td></tr></tbody>\n          )}\n        </table> */}\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> : null}\n      </>\n    )\n  ) : (\n    ''\n  );\n};\n\nexport default UnPushed;\n","import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport { userAction } from '../../hooks/get-order';\nimport formatHeaders from '../../hooks/format-headers';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\n\nconst Ignored = props => {  \n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState([]);\n  const [error, setError] = useState(null);\n  const [ignored, setIgnored] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [noLink, setNoLink] = useState(false);\n  const [chars, setChars] = useState(999);\n  const [delayed, setDelayed] = useState(true);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0);\n\n  // Call the sorting hook.\n  const { items, requestSort, sortConfig } = useSort(ignored, 'ignored');\n\n  // Determine whether the class is ascending or descending.\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), 'CurrencyCode') : '';\n\n  // Handle user actions.\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n    \n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      const ids = [];\n      const filteredOrders = ignored.filter(order => isChecked.includes(order.OrderNumber));\n      filteredOrders.forEach(order => ids.push({[order.Type]: order.OrderNumber}));\n\n      userAction('ignored', path, ids).then(\n        res => {\n          if (res) {\n            setResponse(res?.data[path]);\n            setStatus(res?.status);\n            setError(null);\n            showMessage.current = true;\n          }\n        },\n        err => {\n          console.error({err});\n          setError(err.message);\n          showMessage.current = false;\n        }\n        );\n        setIsChecked([]);\n        setAllChecked(false);\n        props.recall('ignoredOrders');\n    } else alert('Please tick an order.');\n\n    // Deactivate action buttons if a user's profile has restrictions that match.\n    if (props?.restrictedActions === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }    \n  };\n  \n  // Handle the toggling of the select-all checkbox.\n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(ignored.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n  };\n\n  // Handle the toggling of individual checkboxes.\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n\n  const showError = event => {\n    const id = event.target.attributes.name.nodeValue;\n    const errorElement = document.getElementById(id);\n    if (errorElement) errorElement.setAttribute('id', 'show-error');\n  };\n\n  const message = (action) => {\n    let pastTenseVerb;\n    if (action && action === 'Unignore') pastTenseVerb = 'unignored';\n    return pastTenseVerb;\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    // setIsChecked([]);\n    clickCount.current = 0;\n  };\n  \n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.data) setIgnored(props.data.ignoredOrders);\n    }\n    return () => mounted = false;\n  }, [props.data]);\n\n  // Toggle allChecked.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (ignored && ignored.length !== 0 && isChecked.length === ignored.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, ignored]);\n\n  // Show or hide optional actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';  \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n\n  // Delay the loading message by a second to avoid flashes of the screen when the loading is quick but not enough to trick the eye.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setTimeout(() => {\n        setDelayed(false);\n      }, 300);\n    }\n    return () => mounted = false;\n  });\n\n  // Hide the message of the action's result after a new tab has been chosen.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n    return () => mounted = false;\n  });\n\n  // Hide checkboxes if a user is not allowed any actions.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props?.restrictedActions) {\n        if (props.restrictedActions === 'All') { // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n    \n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n    \n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        } \n      }\n    }\n\n    return () => mounted = false;\n  }, [props?.restrictedActions, items]);  \n  \n  // Update the vpWidth and vpHeight variables.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n\n  // Determine the width of the browser window and set toggles accordingly.\n  useLayoutEffect(() => {\n    let mounted = true;\n    // const browserWidth = window.innerWidth;\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    };\n\n    setChars(width < 768 ? 12 : width < 1023 ? 24 : width < 1280 ? 48 : 999);\n    items.forEach(item => {\n      if (item.ErrorMessage) setNoLink(item.ErrorMessage.length < chars ? true : false);\n    });\n\n    window.onresize = handleResize;\n\n    if (mounted) {\n    //   if (browserWidth < 768) {\n    //     setToggleShorterError(true);\n    //     setShortenDates(true);\n    //   } else {\n    //     setToggleShorterError(false);\n    //     setShortenDates(false);\n    //   }\n    }\n    return () => mounted = false;\n  }, [width, items, chars]);\n  \n  return props.error ? \n  (\n    <div className=\"signin-error\">{props.error.message}</div>\n  ) : !props.isLoaded ?\n  (\n    delayed ? \n    (\n      null\n    ) : (\n      <div className=\"loading\">Loading . . .</div>\n    )\n  )\n  :\n  (\n    <>\n      <div className='order-info'>\n        {items.length > 0 ? \n        (\n          <div className=\"stats\">\n            <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n            <p className=\"order-info-number-display\">Count: {items.length}</p>\n          </div>\n        )\n        :\n        (\n          null\n        )}\n        {activeLink ? (\n          <div className='action-links'>\n            <form className='link'>\n              {props && props.restrictedActions ? getActions('ignored', props.restrictedActions, isChecked, takeAction) : null}\n            </form>\n          </div>\n        ) : status && status !== 200 && response ? (\n          <div>Error: {error}</div>\n        ) : (\n          null\n        )}\n        {props.callerId === 'ignored' ? (\n          !error ? (\n            props.order ? (\n              showMessage.current && props.action && !activeLink && (props.action === 'Unignore') ? (\n                typeof props.order === 'number' || props.order.length === 1 ? (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>Order {props.order} has been {message(props.action)}.</p>\n                  </div>\n                ) : (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>The following orders have been {message(props.action)}:&nbsp;</p>\n                    <div className='orders-in-array'>\n                      {props.order.map((id, key) => (\n                        props.order.length === 1 ? \n                        ( \n                          <p key={key}>{id}</p>\n                        )\n                        : key === props.order.length - 1 ?\n                        (\n                          <p key={key}>{id}.</p>\n                        )\n                        :\n                        (\n                          <p key={key}>{id},<span>&nbsp;</span></p>\n                        )                          \n                      ))}\n                    </div>\n                  </div>\n                )\n              ) : (\n                null\n              )\n            ) : (\n              null\n            )\n          ) : (\n            props.order ? (\n              typeof props.order === 'number' || props.order.length === 1 ? (\n                <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                  <p>The following error occurred when order {props.order} was {message(props.action)}: {error}.</p>\n                </div>\n              ) : (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>There was a \"{error}\" error when the following orders were {message(props.action)}:</p>\n                  <div className='orders-in-array'>\n                    {props.order.map((id, key) => (\n                      props.order.length === 1 ? \n                      ( \n                        <p key={key}>{id}</p>\n                      )\n                      : key === props.order.length - 1 ?\n                      (\n                        <p key={key}>{id}.</p>\n                      )\n                      :\n                      (\n                        <p key={key}>{id},<span>&nbsp;</span></p>\n                      )                          \n                    ))}\n                  </div>\n                </div>\n              )\n            ) : (\n              null\n            )\n          )\n        ) : (\n          null\n        )}\n      </div>\n        \n      <table className=\"unpushed-table-large\" id=\"tab\">\n        <thead>\n          <tr className='header-row'>\n            {items.length !== 0 ? (\n              <th className='checkbox-th'>\n                <Checkbox\n                  type='checkbox'\n                  name='selectAll'\n                  handleClick={handleSelectAll}\n                  isChecked={allChecked}\n                />\n              </th>\n            ) : (\n              <th className='hidden-checkbox'></th>\n            )}\n            {headers ? \n            (\n              headers.map((header, key) => (\n                vpWidth < 1280 ?\n                (\n                  header !== 'Order Date' && header !== 'User' && header !== 'Message' ?\n                  (\n                    <th\n                      key={key}\n                      onClick={() => requestSort(header.split(' ').join(''))}\n                      className={getClassNamesFor(header.split(' ').join(''))}\n                    >\n                      {header === 'Ignored Date' ? 'Ignored' : header.replace('Order', '')}\n                    </th>\n                  )\n                  :\n                  (\n                    null\n                  )\n                )\n                :\n                (\n                    <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header === 'Ignored Date' ? 'Ignored' : header === 'User' ? 'By User' : header.replace('Order', '')}\n                  </th>\n                )\n              ))\n            )\n            : \n              null\n            }\n          </tr>\n        </thead>\n        <tbody>\n        {items.length !== 0 ? (\n          items.map((item, key) => (\n              <tr key={key}>\n                <td className='select-one'>\n                  <Checkbox\n                    type='checkbox'\n                    name={item.OrderNumber}\n                    value={item.OrderNumber}\n                    handleClick={handleSelect}\n                    isChecked={isChecked.includes(item.OrderNumber)}\n                  />\n                </td>\n                <td>{item.Type}</td>\n                <td className=\"order-number order-link\">\n                  {vpWidth < 1280 ?\n                  (\n                    <Link\n                      to='#'\n                      onClick={() => takeAction('showDetails', item, key)}\n                    >\n                      {item.OrderNumber ? item.OrderNumber : 'None'}\n                    </Link>\n                  )\n                  :\n                  (\n                    item.OrderNumber ? item.OrderNumber : 'None'\n                  )}\n                </td>\n                <td className=\"order-date desktop\">{new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]}</td>\n                <td>{formatCurrency(item.OrderTotal, item.CurrencyCode)}</td>\n                <td>{new Date(parseInt(item.IgnoredDate)).toISOString().split('T')[0]}</td>\n                <td className=\"ignored-by desktop\">{item.User}</td>\n                <td className=\"unpushed-error-message desktop\">\n                  <span className={`error-message ${noLink}`} title={item.Message.length > chars ? \"Click to view the error.\" : null} onClick={item.Message.length > chars ? showError : null} name={item.OrderNumber}>\n                    {item.Message.includes('\\r\\n') ? `${item.Message.split('\\r\\n').join(' ').slice(0, chars)}` : `${item.Message.slice(0, chars)}`}\n                    {item.Message.length > chars ? ' (...)' : null}\n                  </span>\n                </td>\n              </tr>\n          ))\n        ) : (\n            <tr>\n              <td className='hidden-checkbox'></td>\n              <td>None</td>\n            </tr>\n        )}\n        </tbody>\n      </table>\n      {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> : null}\n    </>\n  )\n};\n\nexport default Ignored;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { getOrders } from '../../hooks/get-order';\nimport Unpulled from './unpulled';\nimport Unpushed from './unpushed';\nimport Ignored from './ignored';\n\nconst FailedOrders = () => {\n  // Get state when passed from a link or redirect component.\n  const params = useLocation();\n  let state = null;\n  if (params) state = params.state;\n  if (state) var { order, postPath, action, id } = state; // This is for user-initiated actions, not the get-all-failed called.\n  \n  const [getQuery, setGetQuery] = useState('failedPulls');\n  const [click, setClick] = useState(false);\n  const [currentPage, setCurrentPage] = useState('');\n  const [unpushed, setUnpushed] = useState([]);\n  const [unpulled, setUnpulled] = useState([]);\n  const [ignored, setIgnored] = useState([]);\n  const [error, setError] = useState(null);\n  const [unpulledIsLoaded, setUnpulledIsLoaded] = useState(false);\n  const [unpushedIsLoaded, setUnpushedIsLoaded] = useState(false);\n  const [ignoredIsLoaded, setIgnoredIsLoaded] = useState(false);\n  const [query, setQuery] = useState(getQuery);\n  const [loggedIn, setloggedIn] = useState(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const restrictedActions = useRef(loggedInUser?.restrictions?.actions);\n\n  const recallApi = newQuery => {\n    if (newQuery === query) setQuery('');\n    if (newQuery !== query) setQuery(newQuery);\n  };\n\n  // Handle the clicking of a tab.\n  const handleClick = event => {\n    event.preventDefault();\n    const chosenPage = event.target.value;\n    let activeButton, inactiveButton;\n\n    setClick(true);\n\n    // setDate([\n    //   new Date().getDate(),\n    //   new Date().getMonth(),\n    //   new Date().getFullYear(),\n    //   new Date().getHours(),\n    //   new Date().getMinutes(),\n    //   new Date().getSeconds(),\n    // ]);    \n    // formatDate(date);\n    \n    setCurrentPage(chosenPage);\n\n    if (chosenPage) {\n      if (chosenPage === getQuery) setGetQuery(null);\n      else setGetQuery(chosenPage);\n  \n      activeButton = document.getElementById(chosenPage);\n      activeButton.setAttribute('class', 'active-button');\n\n      if (chosenPage === 'failedPulls') {\n        inactiveButton = document.getElementById('failedPushes');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('ignoredOrders');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      } else if (chosenPage === 'failedPushes') {\n        inactiveButton = document.getElementById('failedPulls');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('ignoredOrders');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      } else if (chosenPage === 'ignoredOrders') {\n        inactiveButton = document.getElementById('failedPulls');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('failedPushes');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      }\n    }\n  };\n\n  // Set the active and inactive tabs.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted && loggedIn) {\n      // setFormattedDate(formatDate(date));\n\n      // Set the active tab.\n      if (!click) {\n        // if (state) {\n        //   console.log({action});\n        //   if (action === 'Repush') setGetQuery('failedPushes'); // Failed pushes.\n        //   else if (action === 'Repull' || action === 'RepullAllowMismatch') setGetQuery('failedPulls'); // Failed pulls.\n        // }\n        if (getQuery) {\n          document.getElementById(getQuery).setAttribute('class', 'active-button');\n          document.getElementById(getQuery === 'failedPulls' ? 'failedPushes' : 'failedPulls').setAttribute('class', 'inactive-button');\n        }\n      } else {\n        if (!getQuery) setGetQuery(currentPage);\n        if (getQuery) {\n          document.getElementById(getQuery).setAttribute('class', 'active-button');\n          document.getElementById(getQuery === 'failedPulls' ? 'failedPushes' : 'failedPulls').setAttribute('class', 'inactive-button');\n        }\n      }\n\n      if (sessionStorage.getItem('action')) setClick(false);\n    }\n    return () => mounted = false;\n  }, [action, click, currentPage, getQuery, loggedIn, state]);\n  \n  // Get data from the db.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      getOrders(getQuery).then(\n        res => {\n          if (res) {\n            if (res.data) {\n              if (getQuery === 'failedPushes') {\n                setUnpushed(res.data);\n                setUnpushedIsLoaded(true);\n                setUnpulledIsLoaded(false);\n                setIgnoredIsLoaded(false);\n                setError(null);\n              } else if (getQuery === 'failedPulls') {\n                setUnpulled(res.data);\n                setUnpulledIsLoaded(true);\n                setUnpushedIsLoaded(false);\n                setIgnoredIsLoaded(false);\n                setError(null);\n              } else if (getQuery === 'ignoredOrders') {\n                setIgnored(res.data);\n                setIgnoredIsLoaded(true);\n                setUnpulledIsLoaded(false);\n                setUnpushedIsLoaded(false);\n                setError(null);\n              }\n            } else if (res.name) {\n              setError({name: res.name, message: res.message});\n            }\n          }\n        },\n        err => {\n          console.error({err});\n          if (mounted) {\n            setError(err);\n            setUnpulledIsLoaded(true);\n            setUnpushedIsLoaded(true);\n            setIgnoredIsLoaded(true);\n          }\n        }\n      );\n      return () => mounted = false;\n    }\n  }, [getQuery, query]);\n\n  // Set the query path.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (id === 'order-details' && getQuery !== 'failedPushes') setQuery('failedPushes');\n      else setQuery('failedPulls');\n    }\n    return () => mounted = false;\n  }, [id, getQuery]);\n\n  // Set the loggedIn and loggedInUser variables.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setloggedIn(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return !loggedIn ? \n  ( // Redirect the user to the sign-in page when not logged in.\n    // <div className=\"signin-error\">You must sign in to access this resource.</div>\n    <Redirect to={\n      {\n        pathname: '/login',\n        state: {\n          // id,\n          action: 'Sign In',\n          message: 'Please sign in.'\n        },\n      }\n    }\n    />\n  )\n  : error ?\n  ( // Render the error when there's an error.\n    <div className=\"signin-error\">{error?.message}</div>\n  )\n  :\n  (\n    loggedInUser && (loggedInUser.restrictions.pages === 'None' || !loggedInUser.restrictions.pages.includes('Failed Orders')) ?\n    ( // Render the page.\n      getQuery ? (\n        <>\n          <div className='order-actions'>\n            <form>\n              <button id='failedPulls' value='failedPulls' onClick={(e) => handleClick(e)}>\n                Failed to Pull\n              </button>\n            </form>\n            <form>\n              <button id='failedPushes' value='failedPushes' onClick={(e) => handleClick(e)}>\n                Failed to Push\n              </button>\n            </form>\n            <form>\n              <button className=\"inactive-button\" id=\"ignoredOrders\" value=\"ignoredOrders\" onClick={(e) => handleClick(e)}>\n                Ignored Orders\n              </button>\n            </form>\n            {/* <p>\n              as of {formattedDate.day} {formattedDate.month} {formattedDate.year} at{' '}\n              {formattedDate.hour}:{formattedDate.minutes}:{formattedDate.seconds}{' '}\n              {formattedDate.amOrPm}\n            </p> */}\n          </div>\n          {getQuery === 'failedPulls' ? \n          (\n            <Unpulled\n              data={unpulled}\n              error={error}\n              isLoaded={unpulledIsLoaded}\n              getQuery={getQuery}\n              postPath={postPath}\n              recall={recallApi}\n              order={order}\n              action={action}\n              callerId={id}\n              click={click}\n              restrictedActions={restrictedActions.current}\n            />\n          ) : getQuery === 'failedPushes' ?\n          (\n            <Unpushed\n              data={unpushed}\n              error={error}\n              isLoaded={unpushedIsLoaded}\n              getQuery={getQuery}\n              postPath={postPath}\n              recall={recallApi}\n              order={order}\n              action={action}\n              callerId={id}\n              click={click}\n              restrictedActions={restrictedActions.current}\n            />\n          ) : getQuery === 'ignoredOrders' ?\n          (\n            <Ignored\n              data={ignored}\n              error={error}\n              isLoaded={ignoredIsLoaded}\n              getQuery={getQuery}\n              postPath={postPath}\n              recall={recallApi}\n              order={order}\n              action={action}\n              callerId={id}\n              click={click}\n              restrictedActions={restrictedActions.current}\n            />\n          ) : (\n            ''\n          )}\n        </>\n      ) : (\n        null\n      )  \n    )\n    :\n    (\n      <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser.role}\" does not allow you to access this page.</div>\n    )\n  )\n};\n\nexport default FailedOrders;\n","import apiCall from './api-call';\n\nexport async function getSettings(path) {\n  const operation = `${path}`;\n  let query = `query ${operation} {${operation} `;\n  query += 'maps' === operation ? `{Id IsoCountryCode ErpCompanyId SourceWarehouse SourceShipMethod DestinationWarehouse IsoCurrencyCode ErpCurrencyCode ProcessingSequence ActivatedAt DeactivatedAt ModifiedAt ModifiedBy Error {name code message}}}` : `{Name Value Category SubCategory ValueTypeId ValueType Notes EnabledDate ModifiedAt ModifiedBy UserId Error {name code message}}}`;\n  \n  const result = await apiCall(operation, query).then(\n    res => { return res; },\n    err => { console.error(err); }\n  );\n\n  return result;\n};\n\nexport async function updateSettings(path, name, column, newValue) {\n  if (!newValue) newValue = null;\n  const operation = `${path}Update`;\n  let query = `mutation ${path}Update($id: ID!, $column: String!, $newValue: String) {${path}Update(id: $id, column: $column, newValue: $newValue)`;\n  if (path === 'params') query += `{Name${column !== 'Name' ? ' ' + column : '' } ValueTypeId EnabledDate Error {message}}}`;\n  else if (path === 'maps') query += `{Id ${column} Error {message}}}`;\n  const variables = { id: name, column: column, newValue };\n  const result = await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => { console.error(err); }\n  );\n\n  return result;\n};\n\nexport async function getParamByName(name) {\n  const operation = 'getParamByName';\n  const query = `query ${operation}($name: String!) {${operation}(name: $name) {Value EnabledDate Error {message}}}`;\n  const variables = { name };\n  const result = await apiCall(operation, query, variables).then(\n    res => { return res?.data; },\n    err => { console.error(err); }\n  );\n\n  return result;\n};\n\nexport async function getValueTypeId(dataType) {\n  const operation = 'getValueTypeId';\n  const query = `query ${operation}($dataType: String!) {${operation}(dataType: $dataType) {Id}}`;\n  const variables = { dataType };\n  const result = await apiCall(operation, query, variables).then(\n    res => { return res?.data?.getValueTypeId?.Id; },\n    err => console.error(err)\n  );\n\n  return result;\n};\n","import apiCall from './api-call';\n\nexport default async function getType(table, column) {  \n  if (!column) return;\n\n  const operation = 'getType';\n  const query = `query ${operation}($table: String!, $column: String!) {${operation}(table: $table, column: $column) {ColumnName DataType MaxLength}}`;\n  const variables = { table, column };\n  const typeMap = {\n    bool: 'boolean',\n    int: 'number',\n    tinyint: 'number',\n    long: 'bigint',\n    byte: 'number',\n    float: 'number',\n    double: 'number',\n    decimal: 'number',\n    DateTime: 'object',\n    char: 'string',\n    varchar: 'string',\n    object: 'object',\n    string: 'string',\n    JSON: 'object',\n    XML: 'string'\n  };\n\n  return await apiCall(operation, query, variables).then(\n    res => { // res.data.getType => { ColumnName, DataType, MaxLength }\n      if (res.data) {\n        const columnConfig = res.data?.getType;\n        const type = typeMap[columnConfig.DataType];\n        columnConfig.DataType = type;\n        return columnConfig; \n      }\n    },\n    err => { console.error({err}) }\n  );\n}\n","import apiCall from './api-call';\n\nexport default async function logChange(table, column, userId, prevValue, newValue, dataType) {  \n  if (!column || !userId) return;\n  if (typeof dataType === 'number' ) dataType = dataType.toString();\n  \n  const operation = 'logChange';\n  const query = `query ${operation}($table: String!, $column: String!, $userId: Int!, $prevValue: String, $newValue: String, $dataType: String!) {${operation}(table: $table, column: $column, userId: $userId, prevValue: $prevValue, newValue: $newValue, dataType: $dataType) {Id, TableName, ColumnName, PrevValue, NewValue, DataType, DateTime, Error}}`;\n  const variables = { table, column, userId: parseInt(userId), prevValue, newValue, dataType };\n  \n  return await apiCall(operation, query, variables).then(\n    res => { return res },\n    err => { console.error(err); }\n  );\n}\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport getType from '../../hooks/get-type';\nimport selectElementContents from '../../hooks/select-all';\nimport logChange from '../../hooks/log-change';\nimport { updateSettings } from '../../hooks/get-settings';\nimport formatHeaders from '../../hooks/format-headers';\nimport OrderDetails from '../../components/order-details';\n\nconst Map = props => {  \n  const [orderDetails, setOrderDetails] = useState({});\n  const [newValue, setNewValue] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const clickCount = useRef(0);\n  const clickLocation = useRef('');\n  const updated = useRef(false);\n\n  const { items, requestSort, sortConfig } = useSort(props.mapData ? props.mapData : '', 'map');\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'SourceWarehouse' === name || 'SourceShipMethod' === name || 'DestinationWarehouse' === name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n  const error = items && items.length === 1 && items[0].Error ? items[0].Error : '';\n  \n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), 'Error') : '';\n\n  // Handle a user clicking in editable fields.\n  const handleClick = (event, row, column) => {    \n    let currentValue = event?.textContent;\n    let defaultValue = event.dataset.defaultValue ? event.dataset.defaultValue : 'None';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (clickLocation.current !== event.id) clickCount.current = 0;\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    clickCount.current++;\n    clickLocation.current = event.id;\n\n    if (element) {\n      if (defaultValue && defaultValue !== currentValue) { // Replace errors in entries with the previous text.\n        element.textContent = defaultValue;\n        element.removeAttribute('style');\n      } else {\n        element.setAttribute('contentEditable', 'true'); // Make the element editable.\n      }\n    }\n  }\n\n  // Handle user edits.\n  const handleBlur = (id, row, column, event) => {\n    const prevVal = event.target.dataset.defaultValue ? event.target.dataset.defaultValue : 'None';\n    const newVal = event?.target?.textContent;\n    const table = 'Maps';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (prevVal === newVal) {\n      element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(\n        res => {\n          if (res) dataType.current = res;\n                    \n          // Check the input against type and length.\n          if (JSON.stringify(dataType.current) !== '{}') {\n            if (newVal || newVal === '') {\n              const columnName = dataType.current.ColumnName;\n\n              if (columnName === column) {\n                const type = dataType.current.DataType;\n                let typeNewValue = columnName === 'ValueType' ? parseInt(newVal) : newVal;\n                typeNewValue = Number.isNaN(typeNewValue) ? typeNewValue : typeof typeNewValue;\n\n                if (type === typeNewValue) {\n                  if (dataType.current.MaxLength > newVal.length || !dataType.current.MaxLength) {\n                    if (prevVal !== newVal) {\n                      if (!/<\\/?[a-z][\\s\\S]*>/i.test(newVal)) { // Check that no html is being introduced.\n                        element.textContent = newVal ? newVal : 'None';\n                        items[row][column] = newVal ? newVal : 'None';\n                        setNewValue({ id: parseInt(id), row, column, prevVal, newVal });\n                      } else {\n                        element.setAttribute('style', 'color: red');\n                        element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                        element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                      }\n                    } \n                  }\n                } else {\n                  element.setAttribute('style', 'color: red');\n                  element.textContent = `The new value's datatype (${typeof newVal}) doesn't match the databases's data type (${type}).`;\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                }\n              }\n            } else {\n              element.textContent = prevVal;\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n  };\n\n  // Handles the action chosen by the user, if applicable.\n  const action = (path, item) => {\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    \n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    clickCount.current = 0;\n  };\n\n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById(`${newValue.column}-${newValue.row}`);\n      \n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        // Update the settings's value.\n        updateSettings('maps', parseInt(newValue.id), newValue.column, newValue.newVal).then(\n          res => {\n            if (res.data) {\n              let value = res.data?.mapsUpdate[newValue.column];\n              value = null === value ? '' : value;\n              const error = res.data?.mapsUpdate?.Error;\n              const userId = JSON.parse(localStorage.getItem('user')).id;\n  \n              if (typeof value === 'number') value = JSON.stringify(value);\n              if (value === newValue.newVal) {\n                if (element) {\n                  const modifiedAtElement = document.getElementById(`ModifiedAt-${newValue.row}`);\n                  const modifiedByElement = document.getElementById(`ModifiedBy-${newValue.row}`);\n                  \n                  element.removeAttribute('contentEditable');\n                  modifiedAtElement.textContent = new Date().toISOString().split('T')[0];\n                  modifiedByElement.textContent = props.user.name;\n                  element.setAttribute('data-default-value', newValue.newVal ? newValue.newVal : 'None');\n\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                  element.classList.toggle('edited');\n\n                  setTimeout(() => {\n                    element.classList.toggle('edited');\n                    updated.current = true;\n                  }, 2000);\n                }\n                                \n                // Log the change to the database.\n                logChange('AppParams', newValue.column, userId, newValue.prevVal, newValue.newVal, dataType.current.DataType).then(\n                  res => {\n                    if (res.data) {\n                      const changeDateTime = res.data?.logChange?.DateTime;\n                      changeDate.current = changeDateTime;\n                    } else if (res.errors) {\n                      console.error(res.errors);\n                    }\n                  },\n                  err => { console.error({err}); }\n                );\n              } else if (error && null !== error.message) {\n                element.textContent = error.message + ' Please correct your input.';\n                element.setAttribute('style', 'color:red');\n              }\n            }\n          },\n          err => { console.error({err}) }\n        );\n      }\n    }\n\n    return () => mounted = false;\n  }, [items, newValue, props]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  });\n  \n  return props.error ? \n  ( \n    <div className=\"signin-error\">{props.error.message}</div>\n  ) \n  : !props.isLoaded ? \n  ( \n    <div className=\"loading\">Loading . . .</div> \n  ) \n  : error ? \n  (\n    <div>\n      <p>{error.name}: {error.message}</p>\n    </div>\n  ) \n  : props.role === 'Admin' ?\n  (\n    <>\n      <div className=\"order-info no-actions\">\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} handleBlur={handleBlur} handleClick={handleClick} getClassNamesFor={getClassNamesFor} caller={{ settings: 'maps' }} /> : null}\n      </div>\n      <div className=\"map-table-large\">\n        <table className=\"map-table\">\n          <thead>\n            <tr className='header-row'>\n              {headers ? \n              (\n                headers.map((header, key) => (\n                  vpWidth < 1280 ?\n                  (\n                    header !== 'Company' && header !== 'Erp Company Id' && header !== 'Source Warehouse' && header !== 'Source Ship Method' && header !== 'Destination Warehouse' && header !== 'Iso Currency Code' && header !== 'Erp Currency Code' && header !== 'Processing Sequence' && header !== 'Activated At' && header !== 'Deactivated At' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header === 'Iso Country Code' ? 'Country' : header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                  :\n                  (\n                    header !== 'Activated At' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header === 'Iso Country Code' ? 'Country' : header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header === 'Source Warehouse' ? 'Src WH' : header === 'Source Ship Method' ? 'Src Ship' : header === 'Destination Warehouse' ? 'Dest WH' : header === 'Iso Currency Code' ? 'ISO $' : header === 'Erp Currency Code' ? 'ERP $' : header === 'Processing Sequence' ? 'Seq' : header === 'Activated At' ? 'Activated' : header === 'Deactivated At' ? 'Deactivated' : header}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                ))\n              )\n              : null\n            }\n            </tr>\n          </thead>\n          <tbody>\n          {items.map((item, key) => (\n              <tr key={key}>\n                <td className=\"map-id\">\n                  {vpWidth < 1280 ?\n                  (\n                    <Link to='#' onClick={() => action('showDetails', item)} >\n                      {item.Id ? item.Id : 'None'}\n                    </Link>\n                  )\n                  :\n                  (\n                    item.Id ? item.Id : 'None'\n                  )}\n                </td>\n                <td>{item.IsoCountryCode}</td>\n                <td className=\"desktop\">{item.ErpCompanyId}</td>\n                <td\n                  className=\"editable desktop\"\n                  suppressContentEditableWarning=\"true\"\n                  data-default-value={item.SourceWarehouse}\n                  // id={`${item.SourceWarehouse}-${key}`}\n                  id={`SourceWarehouse-${key}`}\n                  onBlur={(e) => handleBlur(item.Id, key, 'SourceWarehouse', e)}\n                  onClick={(e) => handleClick(e.target, key, 'SourceWarehouse')}\n                >\n                  {item.SourceWarehouse ? item.SourceWarehouse : 'None'}\n                </td>\n                <td\n                  className=\"editable desktop\"\n                  suppressContentEditableWarning=\"true\"\n                  data-default-value={item.SourceShipMethod ? item.SourceShipMethod : 'None'}\n                  // id={`${item.SourceShipMethod ? item.SourceShipMethod : 'None'}-${key}`}\n                  id={`SourceShipMethod-${key}`}\n                  onBlur={(e) => handleBlur(item.Id, key, 'SourceShipMethod', e)}\n                  onClick={(e) => handleClick(e.target, key, 'SourceShipMethod')}                \n                >\n                  {item.SourceShipMethod ? item.SourceShipMethod : 'None'}\n                </td>\n                <td\n                  className=\"editable desktop\"\n                  suppressContentEditableWarning=\"true\"\n                  data-default-value={item.DestinationWarehouse}\n                  // id={`${item.DestinationWarehouse}-${key}`}\n                  id={`DestinationWarehouse-${key}`}\n                  onBlur={(e) => handleBlur(item.Id, key, 'DestinationWarehouse', e)}\n                  onClick={(e) => handleClick(e.target, key, 'DestinationWarehouse')}                                \n                >\n                  {item.DestinationWarehouse ? item.DestinationWarehouse : 'None'}\n                </td>\n                <td className='desktop'>{item.IsoCurrencyCode}</td>\n                <td className='desktop'>{item.ErpCurrencyCode}</td>\n                <td className='desktop'>{item.ProcessingSequence ? item.ProcessingSequence : 'None'}</td>\n                {/* <td className='desktop'>\n                  {item.ActivatedAt ? new Date(parseInt(item.ActivatedAt)).toISOString().split('T')[0] : 'None'}\n                </td> */}\n                <td className='desktop'>\n                  {item.DeactivatedAt ? new Date(parseInt(item.DeactivatedAt)).toISOString().split('T')[0] : 'None'}\n                </td>\n                <td className='date' id={`ModifiedAt-${key}`}>{item.ModifiedAt ? new Date(parseInt(item.ModifiedAt)).toISOString().split('T')[0] : 'N/A'}</td>\n                <td className='by-user' id={`ModifiedBy-${key}`}>{item.ModifiedBy ? item.ModifiedBy : 'N/A'}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  )\n  :\n  (\n    <div className=\"role-denied\">Your profile's assigned role of \"{props.role}\" does not allow you to access this page.</div>\n\n  )\n};\n\nexport default Map;\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"SVG namespace\",\n    width: 118.506,\n    height: 57.666,\n    viewBox: \"0 0 118.506 57.666\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group1766\",\n    \"data-name\": \"Group 1766\",\n    transform: \"translate(-527.898 -2981.876)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_1765\",\n    \"data-name\": \"Group 1765\",\n    transform: \"translate(527.898 2981.876)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_1764\",\n    \"data-name\": \"Group 1764\",\n    transform: \"translate(0 0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_6\",\n    \"data-name\": \"Path 6\",\n    d: \"M929.4,3218.125c0-10.658,8.565-17.263,18.57-17.263,10.07,0,18.572,6.538,18.572,17.263s-8.174,17.525-18.571,17.525S929.4,3228.915,929.4,3218.125Zm24.268-3.582c-4.294-6.878-8.515-10.561-12.9-7.826-4.438,2.768-2.964,8.089,1.363,15.028s8.659,10.783,13.04,8.047c4.441-2.769,2.9-8.208-1.5-15.248Z\",\n    transform: \"translate(-895.51 -3182.38)\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_7\",\n    \"data-name\": \"Path 7\",\n    d: \"M1440.332,2994.785l6.179-1.071v52.232h-11.437v-44.8A6.471,6.471,0,0,1,1440.332,2994.785Z\",\n    transform: \"translate(-1358.508 -2992.715)\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_8\",\n    \"data-name\": \"Path 8\",\n    d: \"M1656.661,3030.175h2.264a4.6,4.6,0,0,1,4.594,4.595h0a4.6,4.6,0,0,1-4.593,4.6h-2.265a4.6,4.6,0,0,1-4.594-4.6h0A4.6,4.6,0,0,1,1656.661,3030.175Zm.76,14.7,5.89-1.071v35.526h-11.147v-28.1a6.473,6.473,0,0,1,5.256-6.357Z\",\n    transform: \"translate(-1557.187 -3026.099)\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_1763\",\n    \"data-name\": \"Group 1763\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_9\",\n    \"data-name\": \"Path 9\",\n    d: \"M544.492,3012.413a3.253,3.253,0,0,1-2.615-3.206V2995.86a13.984,13.984,0,0,0-13.979-13.983h0v16.474a13.985,13.985,0,0,0,11.331,13.73,3.252,3.252,0,0,1,2.614,3.206v19.866h13.984v-9.01A13.986,13.986,0,0,0,544.492,3012.413Z\",\n    transform: \"translate(-527.898 -2981.876)\",\n    fill: \"currentColor\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_2615\",\n    \"data-name\": \"Path 2615\",\n    d: \"M769.737,2997.781a13.085,13.085,0,0,0-9.193-4.355h-.412l0,.136v16.332c0,.1,0,.19.007.285v7.528c0,.038,0,.075,0,.112s0,.049,0,.074a4.1,4.1,0,0,1-2.826,3.9,21.3,21.3,0,0,0,6.673-2.264,23.074,23.074,0,0,0,4.713-3.269A13.085,13.085,0,0,0,769.737,2997.781Z\",\n    transform: \"translate(-737.948 -2992.451)\",\n    fill: \"currentColor\"\n  })))), /*#__PURE__*/React.createElement(\"text\", {\n    id: \"\",\n    \"data-name\": \"\\\\xAE\",\n    transform: \"translate(637.404 3037.542)\",\n    fill: \"currentColor\",\n    fontSize: 10,\n    fontFamily: \"BasisGrotesque-Bold, Basis Grotesque\",\n    fontWeight: 700,\n    letterSpacing: \"-0.05em\"\n  }, /*#__PURE__*/React.createElement(\"tspan\", {\n    x: 0,\n    y: 0\n  }, \"\\xAE\")))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.7722f672.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport getType from '../../hooks/get-type';\nimport selectElementContents from '../../hooks/select-all';\nimport logChange from '../../hooks/log-change';\nimport { updateSettings, getParamByName } from '../../hooks/get-settings';\nimport formatHeaders from '../../hooks/format-headers';\nimport OrderDetails from '../../components/order-details';\n\nconst Params = props => {  \n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [newValue, setNewValue] = useState({});\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const clickCount = useRef(0);\n  const clickLocation = useRef('');\n  const updated = useRef(false);\n  let { items, requestSort, sortConfig } = useSort(props.paramsData ? props.paramsData : '', 'params');\n  const error = items && Array.isArray(items) && items.length === 1 && items[0].message ? items[0] : '';\n\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n\n    let className = 'Name' !== name && 'ValueType' !== name && 'ModifiedAt' !== name && 'ModifiedBy' !== name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n\n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['ValueTypeId', 'EnabledDate', 'CreatedAt', 'CreatedBy', 'UserId', 'Error']) : '';\n\n  const handleClick = (event, row, column, id, enabledDate = null, item, idx) => {    \n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue, element;\n\n    if ('✓' === defaultValue) element = document.getElementById(`checkmark-${row}`);\n    else element = document.getElementById(`${column}-${row}`);\n    \n    if (clickLocation.current !== event.id) clickCount.current = 0;\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    clickCount.current++;\n    clickLocation.current = event.id;\n\n    if ('Name' !== column) { // Editing the Name column is not allowed, it being the PK in the db table.\n      if (defaultValue !== currentValue) { // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n        element.textContent = defaultValue;\n        element.removeAttribute('style');\n      } else {\n        if ('EnabledDate' !== column) element.setAttribute('contentEditable', 'true');\n        else element.textContent = 'No';\n      }\n    }\n    \n    if ('EnabledDate' === column) { // Update the EnabledDate in the db with today's date/time (in YYYY-MM-DD HH:MM:SS).\n      currentValue = 'No' === currentValue ? new Date().toISOString() : 'disable';\n      defaultValue = 'disable' || 'No' === currentValue ? `checkmark-${row}` : defaultValue;\n      setNewValue({ id, row, column, prevVal: defaultValue, newVal: currentValue, enabledDate, idx });\n\n      if (vpWidth < 1280) {\n        item['EnabledDate'] = currentValue;\n        setOrderDetails(item);\n      }\n    }\n  }\n\n  // Handle user edits.\n  const handleBlur = (id, row, column, event, idx) => {    \n    const prevValue = event.target.dataset.defaultValue ? event.target.dataset.defaultValue : 'None';\n    const newVal = event.target.textContent ? event.target.textContent : 'None';\n    const table = 'AppParams';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (prevValue === newVal) {\n      element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(\n        res => {\n          dataType.current = res;\n\n          // Check the input against type and length.\n          if (JSON.stringify(dataType.current) !== '{}') {\n            if (newVal) {\n              const columnName = dataType.current.ColumnName;\n              if (columnName === column) {\n                const type = dataType.current.DataType;\n                let typeNewValue = columnName === 'ValueType' ? parseInt(newVal) : newVal;\n                typeNewValue = Number.isNaN(typeNewValue) ? typeNewValue : typeof typeNewValue;\n\n                if (type === typeNewValue) {\n                  if (dataType.current.MaxLength > newVal.length || !dataType.current.MaxLength) {\n                    if (prevValue !== newVal) {\n                      if (!/<\\/?[a-z][\\s\\S]*>/i.test(newVal)) { // Check that no html is being introduced.\n                        if (vpWidth > 1280) {                   \n                          items[row][column] = newVal ? newVal : 'None'; // For desktop.\n                        } else {\n                          if (idx) items[idx][column] = newVal ? newVal : 'None'; // For edits in the modal.\n                        }      \n                        element.textContent = newVal;\n                        setNewValue({ id, row, column, prevValue, newVal, idx });\n                      } else {\n                        element.setAttribute('style', 'color: red');\n                        element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                        element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                      }\n                    } \n                  }\n                } else {\n                  element.setAttribute('style', 'color: red');\n                  element.textContent = `The new value's datatype (${typeof newVal}) doesn't match the databases's data type (${type}).`;\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                }\n              }\n            } else {\n              element.textContent = prevValue;\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n  };\n\n  // Handles the action chosen by the user, if applicable.\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    \n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    clickCount.current = 0;\n    // setIsChecked([]);\n  };  \n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n\n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById(`${newValue.column}-${newValue.row}`);\n            \n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        // Get the parameter's previous value.\n        getParamByName(newValue.id).then(\n          res => {\n            const prevEnabledDate = res?.getParamByName?.EnabledDate;\n            const paramByNameError = res?.getParamByName?.Error;\n  \n            // Update the parameter's value in the AppParams table.\n            updateSettings('params', newValue.id, newValue.column, newValue.newVal).then(\n              res => {                \n                let value = res?.data?.paramsUpdate[newValue.column];\n                const valueType = res?.data?.paramsUpdate?.ValueTypeId;\n                const error = res?.data?.paramsUpdate?.Error;\n                const userId = JSON.parse(localStorage.getItem('user')).id;\n                const enabledDate = res?.data?.paramsUpdate?.EnabledDate;\n                \n                if (typeof value === 'number') value = JSON.stringify(value);\n                if (value === newValue.newVal || newValue.column === 'EnabledDate') {\n                  if (element) {\n                    const modifiedAtElement = document.getElementById(`ModifiedAt-${newValue.row}`);\n                    const modifiedByElement = document.getElementById(`ModifiedBy-${newValue.row}`);\n                    \n                    element.removeAttribute('contentEditable');\n                    // element.textContent = newValue.newVal ? newValue.newVal : 'None';\n                    modifiedAtElement.textContent = new Date().toISOString().split('T')[0];\n                    modifiedByElement.textContent = props.user.name;\n\n                    if (newValue.column !== 'EnabledDate') element.setAttribute('data-default-value', newValue.newVal);\n\n                    element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                    element.classList.toggle('edited');\n                    setTimeout(() => {\n                      element.classList.toggle('edited');\n                      updated.current = true;\n                    }, 2000);\n\n                  }\n                    \n                  // Log the change to the database.\n                  logChange('AppParams', newValue.column, userId, newValue.prevValue, newValue.newVal, valueType).then(\n                    res => {\n                      if (res.data) {\n                        const changeDateTime = res.data?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                      } else if (res.errors) {\n                        console.error(res.errors);\n                      }\n                    },\n                    err => { console.error({err}); }\n                  );\n                } else if (error && null !== error.message) {\n                  element.textContent = error.message + ' Please correct your input.';\n                  element.setAttribute('style', 'color:red');\n                } else { // Special logging for the date-enabled column.\n                  if (newValue.column === 'EnabledDate' & !paramByNameError) {\n                    logChange('AppParams', newValue.column, userId, prevEnabledDate ? new Date(parseInt(prevEnabledDate)).toISOString() : null, enabledDate ? new Date(parseInt(enabledDate)).toISOString() : null, 8).then(\n                      res => {\n                        const changeDateTime = res?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                      },\n                      err => { console.error({err}); }\n                    );\n                  } else {\n                    console.error({paramByNameError});\n                  }\n                }\n              },\n              err => { console.error({err}) }\n            );\n          },\n          err => { console.error(err); }\n        );\n      }\n    }\n\n    return () => mounted = false;\n  }, [items, newValue, props, orderDetails, vpWidth]);\n    \n  return props.error ? \n  ( \n    <div className=\"signin-error\">{props.error.message}</div> \n  ) \n  : !props.isLoaded ? \n  ( \n    <div className=\"loading\">Loading . . .</div> \n  ) \n  : error ?\n  (\n    <div>\n      <p>{error.name ? error.name + ': ' : null}{error.message}</p>\n    </div>\n  ) \n  : props.role === 'Admin' ?\n  (\n      <>\n        <div className=\"order-info no-actions\">\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} handleBlur={handleBlur} handleClick={handleClick} getClassNamesFor={getClassNamesFor} caller={{ settings: 'params' }} /> : null}\n        </div>\n        <table className=\"params-table\">\n          <thead>\n            <tr className='header-row'>\n              {headers ?\n                (\n                  <>\n                    <th               \n                      onClick={() => requestSort('EnabledDate')}\n                      className={`${getClassNamesFor('EnabledDate')} desktop`}\n                    >\n                      Enabled\n                    </th>\n                    {headers.map((header, key) => (\n                      vpWidth < 1280 ?\n                      (\n                        header !== 'Value' && header !== 'Category' && header !== 'Sub Category' && header !== 'Value Type' && header !== 'Notes' && header !== 'Idx' && header !== 'User Id' ?\n                        (\n                          <th\n                            key={key}\n                            onClick={() => requestSort(header.split(' ').join(''))}\n                            className={getClassNamesFor(header.split(' ').join(''))}\n                          >\n                            {header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header}\n                          </th>\n                        )\n                        :\n                        (\n                          null\n                        )\n                      )\n                      :\n                      (\n                        <th\n                          key={key}\n                          onClick={() => requestSort(header.split(' ').join(''))}\n                          className={getClassNamesFor(header.split(' ').join(''))}\n                        >\n                          {header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header === 'Value Type' ? 'Type' : header}\n                        </th>\n                      )\n                    ))}\n                  </>\n                )\n                : null\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, key) => {\n                return item.Name !== 'BcAccessToken' ? \n                (\n                  <tr key={key}>\n                    <>\n                      <td \n                        className=\"checkmark editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value=\"&#10003;\"\n                        id={`checkmark-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'EnabledDate', e)} // params: id, row, column, event\n                        onClick={(e) => handleClick(e.target, key, 'EnabledDate', item.Name, item.EnabledDate, item )} // params: event, row, column, id, enabled date\n                      >\n                        {item.EnabledDate ? <>&#10003;</> : 'No'}\n                      </td>\n                      <td className='params-id'>\n                        {vpWidth < 1280 ?\n                        (\n                          <Link to='#' onClick={() => action('showDetails', item, key)} >\n                            {vpWidth < 500 && item.Name && item.Name.length > 15 ? item.Name.substring(0, 12) + '...' : vpWidth <= 768 && item.Name && item.Name.length > 31 ? item.Name.substring(0, 28) + '...' : item.Name ? item.Name : null}\n                          </Link>\n                        )\n                        :\n                        (\n                          item.Name\n                        )}\n                      </td>\n                      {item.Value && item.Value.includes('|') ? \n                        (\n                          <td\n                            className=\"editable desktop\"\n                            suppressContentEditableWarning=\"true\" \n                            data-default-value={item.Value.split('\\n').map(val => {\n                              const setting = val.split('|');\n                              const key = setting[0];\n                              let value = setting[1], result;\n                              if (value && value.includes('~')) value = value.replace('~', ', ');                  \n                              if (value) value = value.trimEnd();\n                              if (value && value[value.length - 1] === ',') value = value.substring(0, value.length - 1);\n                              result = key && value ? `${key}: ${value}\\n` : '';\n                              return result;\n                            })}\n                            // id={`${item.Value}-${key}`}\n                            id={`Value-${key}`}\n                            onBlur={(e) => handleBlur(item.Name, key, 'Value', e)}\n                            onClick={(e) => handleClick(e.target, key, 'Value', item.Name)}\n                          >\n                            {item.Value.split('\\n').map(val => {\n                              const setting = val.split('|');\n                              const key = setting[0];\n                              let value = setting[1];\n                              let result;\n                              if (value && value.includes('~')) value = value.replace('~', ', ');                  \n                              if (value) value = value.trimEnd();\n                              if (value && value[value.length - 1] === ',') value = value.substring(0, value.length - 1);\n                              result = key && value ? `${key}: ${value}\\n` : '';\n                              return result;\n                            })}\n                          </td>\n                        ) : (\n                          <td\n                            className=\"editable desktop\"\n                            suppressContentEditableWarning=\"true\" \n                            data-default-value={item.Value}\n                            // id={`${item.Value}-${key}`}\n                            id={`Value-${key}`}\n                            onBlur={(e) => handleBlur(item.Name, key, 'Value', e)}\n                            onClick={(e) => handleClick(e.target, key, 'Value', item.Name)}\n                          >{item.Value}\n                          </td>\n                        )\n                      }\n                      <td\n                        className=\"editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.Category}\n                        // id={`${item.Category}-${key}`}\n                        id={`Category-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'Category', e)}\n                        onClick={(e) => handleClick(e.target, key, 'Category', item.Name)}\n                      >{item.Category}</td>\n                      <td\n                        className=\"editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.SubCategory}\n                        // id={`${item.SubCategory}-${key}`}\n                        id={`SubCategory-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'SubCategory', e)}\n                        onClick={(e) => handleClick(e.target, key, 'SubCategory', item.Name)}                  \n                      >{item.SubCategory}</td>\n                      <td className='desktop'>{item.ValueType}</td>\n                      <td \n                        className=\"notes editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.Notes}\n                        // id={`${item.Notes}-${key}`}\n                        id={`Notes-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'Notes', e)}\n                        onClick={(e) => handleClick(e.target, key, 'Notes', item.Name)}                  \n                      >\n                        {item.Notes ? item.Notes : 'None'}\n                      </td>\n                      <td className='date' id={`ModifiedAt-${key}`}>{item.ModifiedAt ? new Date(parseInt(item.ModifiedAt)).toISOString().split('T')[0] : 'N/A'}</td>\n                      <td className='by-user' id={`ModifiedBy-${key}`}>{item.ModifiedBy ? item.ModifiedBy : item.UserId && isNaN(parseInt(item.UserId)) ? item.UserId : 'N/A'}</td>\n                    </>\n                  </tr>\n              ) : null\n                    })}\n          </tbody>\n        </table>        \n      </>\n  ) \n  :\n  (\n    <div className=\"role-denied\">Your profile's assigned role of \"{props.role}\" does not allow you to access this page.</div>\n  )\n};\n\nexport default Params;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getSettings } from '../../hooks/get-settings';\nimport Map from './map';\nimport Params from './params';\n\nconst SettingsPage = () => {\n  const [path, setPath] = useState('maps');\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [maps, setMaps] = useState([]);\n  const [params, setParams] = useState([]);\n  const [loggedIn, setloggedIn] = useState(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const handleSubmit = event => event.preventDefault();\n\n  // Click handler: which tab to show, maps or params.\n  const handleClick = event => {    \n    let chosenButton, activeButton, inactiveButton;\n\n    if (typeof event === 'object') {\n      event.preventDefault();\n      if (event.target.value !== path) {\n        setIsLoaded(false);\n        setPath(event.target.value);\n        chosenButton = event.target.id;\n      }\n    } else {\n      if (event !== path) {\n        setIsLoaded(false);\n        setPath('');\n        setPath(event);\n        chosenButton = event;\n      }\n    }\n\n    if (chosenButton) {\n      activeButton = document.getElementById(chosenButton);\n      activeButton.setAttribute('class', 'active-button');\n      if (chosenButton === 'maps') \n        inactiveButton = document.getElementById('params');\n      else inactiveButton = document.getElementById('maps');\n      inactiveButton.setAttribute('class', 'inactive-button');\n    }\n  };\n\n  // Rerender the page after an edit.\n  const recall = (path) => {\n    setPath(null);\n    setPath(path)\n  };\n\n  // Get data from the db.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted && path) {\n      getSettings(path).then(\n        res => {\n          if (res) {            \n            if (!res.name) {\n              const errors = res?.errors;\n              \n              if (errors && errors.length > 0) {\n                path === 'maps' ? setMaps(res.errors) : setParams(res.errors);\n              } else if (!res.errors && res.data) {\n                path === 'maps' ? setMaps(res.data[path]) : setParams(res.data[path]);\n                setIsLoaded(true);\n                setError(null);\n              }\n            } else {\n              setError({code: res?.name, message: res?.message});\n              setIsLoaded(true);\n            }\n          }\n        },\n        err => {\n          if (mounted) {\n            setError(err);\n            setIsLoaded(true);\n          }\n        }\n      );\n    }\n    return () => mounted = false;\n  }, [path]);\n\n  // Set the user from local storage.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setloggedIn(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return !loggedIn ?\n  (\n    // <div className=\"signin-error\">You must sign in to access this resource.</div>\n    <Redirect to={\n        {\n          pathname: '/login',\n          state: {\n            action: 'Sign In',\n            message: 'Please sign in.'\n          },\n        }\n      }\n    />\n  )\n  : error ?\n  (\n    <div className=\"signin-error\">{error?.message}</div>\n  )\n  :\n  (\n    loggedInUser && (loggedInUser.restrictions.pages === 'None' || !loggedInUser.restrictions.pages.includes('Settings')) ?\n    (\n      <>\n        <div className='order-actions'>\n          <form onSubmit={handleSubmit}>\n            <button className=\"active-button\" id=\"maps\" value=\"maps\" onClick={handleClick}>\n              Warehouse Map\n            </button>\n            <button className=\"inactive-button\" id=\"params\" value=\"params\" onClick={handleClick}>\n              Parameters\n            </button>\n          </form>\n        </div>\n        {path === 'params' ?\n          <Params\n            paramsData={params}\n            error={error}\n            isLoaded={isLoaded}\n            path={path}\n            role={loggedInUser?.role}\n            recall={recall}\n            user={loggedInUser}\n          />\n        : path === 'maps' ?\n          <Map \n            mapData={maps} \n            error={error} \n            isLoaded={isLoaded} \n            path={path}\n            role={loggedInUser?.role}\n            recall={recall}\n            user={loggedInUser}\n          />\n        : null\n        }\n      </>\n    )\n    :\n    (\n      <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser.role}\" does not allow you to access this page.</div>\n    )\n  )\n};\n\nexport default SettingsPage;\n","import React from 'react';\nimport formatHeaders from '../hooks/format-headers';\n\nconst Tabs = props => {\n  \n  return props.tabs ? \n  (\n    <div className='tabs-container'>\n      {props.tabs.map((tab, key) => (\n          <div key={key} className=\"page-tab\">\n          <form>\n            <button className={formatHeaders(props.activeTab) === tab ? 'active-button' : 'inactive-button'} id={`failed-process-tab-${key+1}`} value={tab} onClick={props.handleClick}>\n              {tab}\n            </button>\n          </form>\n        </div>\n      ))}\n    </div>\n  )\n  :\n  (\n    null\n  )\n}\n\nexport default Tabs;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\n// import Checkbox from '../../components/checkbox';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\nimport formatHeaders from '../../hooks/format-headers';\n\nconst Unprocessed = props => {\n  const [activeTab, setActiveTab] = useState(null); \n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [jobNamesUnique, setJobNamesUnique] = useState([]);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n\n  // The following two constants handle the sorting algorithm.\n  const { items, requestSort, sortConfig } = useSort(props.jobs, 'jobs');\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  \n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['Id', 'Name']) : '';\n\n  // Handles the selection and formatting of the page's tabs.\n  const handleClick = (event, next) => {\n    let chosenButtonValue;\n\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n  };\n  \n  // Handles the action chosen by the user, if applicable.\n  const action = (path, item) => {\n    if (path === 'showDetails') {\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => setShowDetails(false);\n    \n  // Set the active tab, when it changes.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]);\n    \n  // Create the page's tabs for each unique job.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props && props.jobs) {\n        props.jobs.forEach(job => {\n          const jobsName = formatHeaders(job.Name);\n          if (!jobNamesUnique.includes(jobsName)) setJobNamesUnique([...jobNamesUnique, jobsName]);\n        });\n      }\n    }\n\n    return () => mounted = false;\n  }, [jobNamesUnique, props, activeTab]);\n\n  // Set the default active tab and each tab's count and tab's index.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (!activeTab && jobNamesUnique && jobNamesUnique.length > 0) {\n        setActiveTab(jobNamesUnique[0]);\n      }\n        \n      if (props.jobs) {\n        let counter = 0;\n\n        props.jobs.forEach(job => {\n          if (formatHeaders(job.Name) === formatHeaders(activeTab)) {\n            counter++;\n          }\n        });\n\n        setActiveTabCount(counter);\n      }\n  \n      const activeTabKeyValue = Object.entries(jobNamesUnique).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n\n    return () => mounted = false;\n  }, [activeTab, activeTabIndex, jobNamesUnique, props.jobs]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n    \n  return props.error ? \n  (\n    <div className=\"signin-error\">{props.error.message}</div>\n  ) : !props.isLoaded ? \n  ( \n    <div className=\"loading unprocessed\">Loading . . . </div>\n  ) : props ? (\n    <div className=\"unprocessed-jobs-container\">\n      <div className=\"order-actions unprocessed\">\n        <Tabs activeTab={activeTab} tabIndex={activeTabIndex} tabs={jobNamesUnique} handleClick={handleClick} caller='unprocessed' />\n      </div>\n      <div className=\"order-info no-actions\">\n        {items.length > 0 ? \n        (\n          <div className=\"stats\">\n            {jobNamesUnique.length > 1 ? <p className=\"order-info-number-display\">Tab: {`${activeTabIndex + 1} of ${jobNamesUnique.length}`}</p> : null}\n            <p className=\"order-info-number-display\">Order Count: {activeTabCount}</p>\n          </div>\n        )\n        :\n        (\n          null\n        )}\n        {activeLink ? \n        (\n          <div className=\"action-links\">\n            <form className=\"link\">\n              <Link to='#' onClick={() => action('showDetails')}>\n                Details\n              </Link>\n            </form>\n          </div>\n        ) \n        : \n        (\n          null\n        )}\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> : null}\n      </div>\n\n      <table className=\"unprocessed-jobs-table\">\n        <thead>\n          <tr className=\"header-row\">\n            {headers ? \n            (\n              headers.map((header, key) => (\n                vpWidth < 1280 ?\n                (\n                  header !== 'Line Number' && header !== 'At' & header !== 'Message' && header !== 'Exception' && header !== 'Additional Data' ?\n                  (\n                    <th\n                      key={key}\n                      onClick={() => requestSort(header.split(' ').join(''))}\n                      className={getClassNamesFor(header.split(' ').join(''))}\n                    >\n                      {header === 'Order Number' ? 'Order' : header === 'Category' ? 'Cat' : header === 'External System' ? 'Sys' : header === 'Data Direction' ? 'Data' : header === 'Message' ? 'Error' : header}\n                    </th>\n                  )\n                  : \n                  (\n                    null\n                  )\n                )\n                :\n                (\n                  <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header === 'Order Number' ? 'Order' : header === 'Line Number' ? 'Line' : header === 'External System' ? 'System' : header === 'Data Direction' ? 'Data' : header === 'Message' ? 'Error' : header === 'Additional Data' ? 'Additional': header}\n                  </th>\n                )\n              ))\n            )\n            : \n              null\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {items.length > 0 ? (\n            items.map((item, key) => {\n              return formatHeaders(item.Name) === formatHeaders(activeTab) ? \n              (\n                <tr key={key}>\n                  <td className=\"order-number order-link\">\n                    {vpWidth < 1280 ?\n                    (\n                      <Link to='#' onClick={() => action('showDetails', item)} >\n                        {item.OrderNumber ? item.OrderNumber : 'None'}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.OrderNumber ? item.OrderNumber : 'None'\n                    )}\n                  </td>\n                  <td className=\"line-number desktop\">{item.LineNumber ? item.LineNumber : 'N/A'}</td>\n                  <td className=\"order-category\">{item.Category ? item.Category : 'N/A'}</td>\n                  <td className=\"external-system\">{item.ExternalSystem}</td>\n                  <td className=\"data-direction\">{item.DataDirection}</td>\n                  <td className=\"order-date desktop\">{new Date(parseInt(item.At)).toISOString().split('T')[0]}</td>\n                  <td className=\"order-message desktop\">{item.Message ? item.Message : 'None'}</td>\n                  <td className=\"order-exception desktop\">{item.Exception ? item.Exception : 'None'}</td>\n                  <td className=\"order-additional-data desktop\">{item.AdditionalData ? item.AdditionalData : 'None'}</td>\n                </tr>\n              ) : \n              (\n                null\n              )\n              })\n          ) : (\n            <tr>\n              <td className=\"hidden-checkbox\"></td>\n              <td>None</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  ) : (\n    ''\n  )\n};\n\nexport default Unprocessed;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport apiCall from '../../hooks/api-call';\nimport Unprocessed from './unprocessed';\n\nconst FailedProcesses = () => {\n  const [failedProcesses, setFailedProcesses] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [loggedIn, setloggedIn] = useState(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const [currentTab, setCurrentTab] = useState(null);\n  \n  // Get the state values passed on the user's clicking of a redirect link.\n  const params = useLocation();\n  const job = params ? params?.state?.job : null;\n\n  // Handle the user choosing another tab on this page.\n  const handleClick = (callerId) => {\n    // setIsLoaded(false);    \n    setCurrentTab(callerId);\n  }\n\n  // Get the unprocessed jobs from the DB.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const operation = 'getAllProcessingErrors';\n      const query = `query ${operation} {${operation} {Id Name OrderNumber LineNumber Category ExternalSystem DataDirection At Message Exception AdditionalData}}`;\n      const variables = {};\n      \n      apiCall(operation, query, variables)\n      .then(\n        res => {          \n          if (res.data) {\n            setFailedProcesses(res.data.getAllProcessingErrors);\n            setError(null);\n            setIsLoaded(true);\n          } else if (res.name) {\n            setError({code: res.name, message: res.message});\n            setIsLoaded(true);\n          }\n        },\n        err => {\n          setError(err.response.data.errors);\n          setIsLoaded(false);\n        }\n      );\n    }\n    \n    return () => mounted = false;\n  }, [currentTab]);\n\n  // Set the loggedIn variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setloggedIn(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return !loggedIn ?\n  (\n    // <div className=\"signin-error\">You must sign in to access this resource.</div>\n    <Redirect to={\n        {\n          pathname: '/login',\n          state: {\n            action: 'Sign In',\n            message: 'Please sign in.'\n          },\n        }\n      }\n    />\n  )\n  : error ?\n  (\n    <div className=\"signin-error\">{error?.message}</div>\n  )\n  :\n  (\n    loggedInUser && (loggedInUser.restrictions.pages === 'None' || !loggedInUser.restrictions.pages.includes('Failed Processes')) ?\n    (\n      <Unprocessed jobs={failedProcesses} error={error} isLoaded={isLoaded} handleClick={handleClick} activeTab={currentTab ? currentTab : job ? job : null} />\n    )\n    :\n    (\n      <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser.role}\" does not allow you to access this page.</div>\n    )\n  )\n};\n\nexport default FailedProcesses;\n","import apiCall from './api-call';\n\nexport default class User {\n  id;\n  email;\n  password;\n  name;\n  role;\n  roleId;\n  dateRegistered;\n  lastLogin;\n  loggedIn;\n  failedAttempts;\n  error;\n\n  constructor(id = 0, email = null, name = null, role = 'User', roleId = 0, password = null) {\n    this.id = id;\n    this.email = email;\n    this.password = password;\n    this.roleId = roleId;\n  };\n\n  async getUserRoles() {\n    const operation = 'getUserRoles';\n    const query = `query ${operation} {${operation} {Id Role Error}}`;\n    const result = await apiCall(operation, query).then(\n      res => { return res; },\n      err => console.error({err})\n    );\n\n    return result;\n  };\n\n  async getUserRestrictions(roleId) {\n    const operation = 'getUserRestrictions';\n    const query = `query ${operation}($roleId: Int!) {${operation}(roleId: $roleId) {Id Role RestrictedPages RestrictedActions Error}}`;\n    const variables = { roleId };\n    const result = await apiCall(operation, query, variables).then(\n      res => { return res; },\n      err => console.error(err)\n    );\n\n    return result;\n  };\n\n  async getAllUsers() {\n    const operation = 'users';\n    const query = `query ${operation} {${operation} {Id Name Email Role RoleId, DateRegistered LastLogin LoggedIn FailedAttempts Active Error}}`;\n    const result = await apiCall(operation, query).then(\n      res => { return res; },\n      err => { console.error({err}) }\n    );\n\n    return result;\n  };\n\n  async getUserById() {\n    const operation = 'userById';\n    const query = `query ${operation}($id: ID!) {${operation}(id: $id) {Id Email Name Role DateRegistered LastLogin LoggedIn FailedAttempts Error}}`;\n    const variables = { id: this.id }\n\n    const result = await apiCall(operation, query, variables).then(\n      res => {\n        if (res) {\n          if (res.data) {\n            const r = res.data[operation];\n            this.id = r.Id;\n            this.name = r.Name;\n            this.email = r.Email;\n            this.role = r.Role;\n            this.dateRegistered = r.DateRegistered;\n            this.lastLogin = r.LastLogin;\n            this.loggedIn = r.LoggedIn;\n            this.failedAttempts = r.FAiledAttemps;\n            this.error = r.Error;\n            return res.data[operation];\n          }\n          else if (res.name) return res.message;\n        }\n      },\n      err => { console.error(err)}\n    );\n\n    return result;\n  };\n\n  async getUserByEmail() {\n    const operation = 'userByEmail';\n    const query = `query ${operation}($email: String!) {${operation}(email: $email) {Id, LastLogin, Active}}`;\n    const variables = { email: this.email };\n    const result = await apiCall(operation, query, variables).then(\n      res => { return res; },\n      err => { console.error({err}); }\n    );\n\n    return result;\n  };\n\n  async getAllUsersSansToken() {\n    const operation = 'usersSansToken';\n    const query = `query users {users {Id Error}}`;\n    const result = await apiCall(operation, query).then(\n      res => { return res; },\n      err => { console.error({err}); }\n    );\n    \n    return result;\n  };\n\n  async deleteUser(query, ids) {\n    const operation = query;\n    query = `mutation ${operation}($ids: [ID]!) {${operation}(ids: $ids) {Id}}`;\n    const variables = { ids: ids };\n    const results = await apiCall(operation, query, variables).then(\n      res => { return res; },\n      err => { return err; }\n    );\n\n    return results;\n  };\n\n  async updateUser(operation, id, column, value) {\n    const query = `mutation ${operation}($id: ID!, $column: String!, $newValue: String!) {${operation}(id: $id, column: $column, newValue: $newValue) {${column} Error}}`;\n    const variables = {\n      id: id,\n      column: column,\n      newValue: value\n    };\n    \n    return await apiCall(operation, query, variables).then(\n      res => { return res; },\n      err => { return err; }\n    );\n  }\n\n  async signIn() {\n    const operation = 'signin';\n    const query = `mutation ${operation}($id: ID!, $password: String!) {${operation}(id: $id, password: $password) {Id Name Role RoleId LastLogin Error}}`;\n    const variables = { id: this.id, password: this.password };    \n    const result = await apiCall(operation, query, variables).then(\n      res => { return res; },\n      err => { console.error({err}) }\n    );\n    return result;\n  };\n\n  async signUp() {\n    const operation = 'signup';\n    const query = `mutation ${operation}($email: String!, $usersName: String!, $password: String!, $role: Int!) {${operation}(email: $email, usersName: $usersName, password: $password, role: $role) {Id Message Error}}`;\n    const variables = { email: this.email, usersName: this.name, password: this.password, role: this.role };\n    const result = await apiCall(operation, query, variables).then(\n      res => { return res; },\n      err => { console.error({err}); }\n    );\n\n    return result;\n  };\n\n  async signOut() {\n    const operation = 'signout';\n    const mutation = `mutation ${operation} {${operation} {Id, Name, Error}}`;\n    const result = await apiCall(operation, mutation).then(\n      res => { return res },\n      err => { console.error({err}); }\n    );\n\n    return result;\n  };\n\n  async changePassword(firstSignin) {\n    const operation = 'changePassword';\n    const mutation = `mutation ${operation}($id: ID!, $password: String!, $firstSignin: Boolean!) {${operation}(id: $id, password: $password, firstSignin: $firstSignin) {Id Name Role RoleId LastLogin Error}}`;\n    const variables = { id: this.id, password: this.password, firstSignin };\n    const result = await apiCall(operation, mutation, variables).then(\n      res => { return res },\n      err => { console.error({err}); }\n    );\n    \n    return result;\n  };\n}","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport formatHeaders from '../../hooks/format-headers';\nimport useSort from '../../hooks/sort-data';\nimport Checkbox from '../../components/checkbox';\nimport User from '../../hooks/get-user';\nimport selectElementContents from '../../hooks/select-all';\nimport getType from '../../hooks/get-type';\nimport logChange from '../../hooks/log-change';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\n\nconst Users = (props) => {\n  const [tabs, setTabs] = useState([]);\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRoles, setUserRoles] = useState([]);\n  const [activeTab, setActiveTab] = useState('All Roles');\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedInUser, setLoggedInUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [newValue, setNewValue] = useState({});\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [roleName, setRoleName] = useState(null);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const messageRef = useRef('');\n  const clickLocation = useRef('');\n  const clickCount = useRef(0);\n  const prevElement = useRef('');\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const updated = useRef(false);\n  const user = new User();\n  let tableHeaders = props.users.length > 0 ? Object.keys(props.users[0]) : [], formattedHeaders = [];\n  let { items, requestSort, sortConfig } = useSort(users, 'users');\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'Name' === name || 'Role' === name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n\n  // Format the table headers.\n  if (tableHeaders.length > 0) {\n    // Remove RoleId from the headers before formatting.\n    tableHeaders = tableHeaders.filter(header => header !== 'RoleId');\n    formattedHeaders = formatHeaders(tableHeaders, 'Error');\n  }\n\n  // // Handles the selection and formatting of the page's tabs.\n  const handleTabClick = (event, next) => {\n    let chosenButtonValue;\n\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n    setIsChecked([]);\n  };\n  \n  // Handles the toggling of the select-all checkbox.\n  const handleSelectAll = event => {\n    const tab = event.target.value;\n    const activeItems = items.filter(item => item.RoleId === activeTab || 0 === activeTab);\n    \n    if (tab === activeTab) setAllChecked(!allChecked);\n    setIsChecked(activeItems.map(item => item.Id));\n    setAllChecked(!allChecked);\n    if (allChecked) setIsChecked([]);\n  };\n\n  // Handles the toggling of individual checkboxes.\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n  \n  // Handles the action initiated by the user.\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      const ids = [];\n      const filteredRows = users.filter(row => isChecked.includes(row.Id));\n      filteredRows.forEach(row => ids.push(row.Id));\n\n      // This feature deletes the user.\n      if (ids.length > 0) {\n        user.deleteUser(path, ids).then(\n          res => {\n            if (res.data) {// IDs of deleted users are being returned but not currently used.\n              setError('');\n              setShowMessage(true);\n\n              // Log the user out if all users are deleted or if the signed-in user is deleted.\n              if (res.data.deleteUser.length === users.length) { // All users were deleted.\n                user.signOut().then(\n                  () => {\n                    localStorage.setItem('user', null);\n                    props.liftData(0, 'user', false);\n                  },\n                  err => { console.error(err); }\n                )\n              } else { // Not all users were deleted: if the user deleted herself, sign her out.\n                const match = ids.filter(id => id === loggedInUser.id);\n                \n                if (match.length === 1) {\n                  user.signOut().then(\n                    () => { \n                      localStorage.setItem('user', null);\n                      props.liftData(0, 'user', false);  \n                     },\n                    err => { console.error(err); }\n                  )\n                }\n              }\n\n            } else if (res.name) {\n              console.error('Error: ', res.message);\n              setError(res.message);\n              setShowMessage(true);\n            }\n\n            props.recall(path);\n          },\n          err => {\n            console.error({err});\n            setError(err.message);\n          }\n        );\n      }\n\n      setIsChecked([]);\n      setAllChecked(false);\n    } else alert('Please tick a user.');\n    \n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n\n  // Generates the message to show the user after an action has been initiated.\n  const message = (action) => {\n    let pastTenseVerb;\n    if (action && action === 'Delete User') {\n      pastTenseVerb = 'deleted';\n    }\n    if (action && action === 'Add User') {\n      pastTenseVerb = 'added';\n    }\n    return pastTenseVerb;\n  };\n\n  // Helps manage the editing of editable fields.\n  const handleClick = (event, row, column) => {\n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue;\n    const element = document.getElementById(`${column}-${row}`);\n    \n    if (clickLocation.current !== event.id) {\n      clickCount.current = 0;\n      if (element) { // Restore the element's previous value if unclicked.\n        const id = prevElement ? prevElement?.current?.id : '';\n        const value = id ? prevElement?.current?.value : '';\n        const tempElement = id ? document.getElementById(id) : '';\n        if (tempElement && value) document.getElementById(id).innerHTML = value;\n        prevElement.current = '';\n      }\n    }\n    \n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    if (defaultValue !== currentValue) { // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n      element.textContent = defaultValue;\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('contentEditable', 'true');\n      updated.current = false;\n    }\n\n    clickCount.current++;\n    clickLocation.current = event.id;\n  };\n\n  // Handles user edits.\n  const handleBlur = (userId, row, column, event, idx) => {\n    let prevValue = 'Role' !== column ? event?.target?.dataset?.defaultValue : prevElement.current;\n    const newValue = 'Role' !== column ? event?.target?.textContent : event?.target?.textContent;\n    const table = 'Users';\n    const element = 'Role' !== column ? document.getElementById(`${column}-${row}`) : null;\n\n    if (prevValue === newValue) {\n      if (element) element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(\n        res => {\n          dataType.current = res;\n\n          // Check the input against type and length.\n          if (JSON.stringify(dataType.current) !== '{}') {\n            if (newValue) {\n              const columnName = dataType.current.ColumnName;\n              if (columnName === column) {\n                const type = dataType.current.DataType;\n                let typeNewValue = 'Role' === column ? typeof tabs.indexOf(newValue) : typeof newValue;\n                                        \n                if (type === typeNewValue) {\n                  if (dataType.current.MaxLength > newValue.length || !dataType.current.MaxLength || -1 === dataType.current.MaxLength) {\n                    if (prevValue !== newValue) {\n                      if (!/<\\/?[a-z][\\s\\S]*>/i.test(newValue)) { // Check that no html is being introduced.\n                        items[row][column] = newValue ? newValue : 'None'; \n                        setNewValue({ id: userId, row, column, prevValue, newValue: newValue, idx });\n\n                        if (element) {\n                          element.textContent = newValue ? newValue : 'None';\n                        }\n                      } else {\n                        element.setAttribute('style', 'color: red');\n                        element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                        element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                      }\n                    } \n                  }\n                } else {\n                  element.setAttribute('style', 'color: red');\n                  element.textContent = `The new value's datatype (${typeof newValue}) doesn't match the databases's data type (${type}).`;\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                }\n              }\n            } else {\n              element.textContent = prevValue;\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    setIsChecked([]);\n    clickCount.current = 0;\n  };\n\n  // Toggle the roles' dropdown menu.\n  const toggleSelect = (key) => {\n    const options = document.getElementById(`select-role-${key}`).children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.toggle('show-option');\n          } else {\n            option.classList.toggle('fade-default')\n          }\n        }\n      });\n    }\n\n    setRoleName(null);\n  };\n  \n  // Capture the user's role.\n  const handleRoleSelect = (event, idx, key, item, caller) => {\n    const roleName = event.target.textContent;\n    const options = document.getElementById(`select-role-${key}`).children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.remove('show-option');\n          } else {\n            option.classList.remove('fade-default')\n          }\n        }\n      });\n    }\n\n    setRoleName({key, roleName});\n    prevElement.current = item.Role;\n    handleBlur(item.Id, caller === 'modal' ? idx : key, 'Role', event, idx);\n  };\n  \n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = newValue.column !== 'Role' ? document.getElementById(`${newValue.column}-${newValue.row}`) : document.getElementById(`user-role-${newValue.row}`);\n      let userRole;\n      \n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        const operation = 'userUpdate';\n        const user = new User();\n\n        if ('Role' === newValue.column) {\n          userRoles.forEach(role => {\n            if (role.Role === newValue.newValue) userRole = role.Id;\n          });\n        }\n        \n        user.updateUser(operation, newValue.id, newValue.column, userRole ? userRole : newValue.newValue).then(\n          res => {\n            if (res.data) {\n              let value = res.data[operation] ? res.data[operation][newValue.column] : '';\n              const valueType = 10; // 10 === 'string' in the AppParamsValueType table.\n              const error = res.data[operation]?.Error;\n    \n              if (typeof value === 'number') value = JSON.stringify(value);\n              if (value) {\n                if ('Role' === newValue.column) {\n                  userRoles.forEach(role => {\n                    if (role.Id === value) value = role.Role;\n                  });\n                }\n                \n                if (value === newValue.newValue) {\n                  if (element) {\n                    if (loggedInUser.id === newValue.id) { // The current user is being modified and needs to be updated in storage.\n                      if (newValue.column === 'Role') loggedInUser.role = newValue.newValue;\n                      else if (newValue.column === 'Name') loggedInUser.name = newValue.newValue;\n\n                      setLoggedInUser(loggedInUser);\n                      localStorage.setItem('user', JSON.stringify(loggedInUser));\n                    }\n                    \n                    element.removeAttribute('contentEditable');\n                    element.setAttribute('data-default-value', newValue.newValue);\n                    element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                    element.classList.toggle('edited');\n                    \n                    setTimeout(() => {\n                      element.classList.toggle('edited');\n                      updated.current = true;\n                    }, 2000);\n                  }\n\n                  // Log the change to the database.\n                  logChange('Users', newValue.column, newValue.id, newValue.prevValue, newValue.newValue, valueType).then(\n                    res => {\n                      if (res.data) {\n                        const changeDateTime = res.data?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                        setNewValue({}); \n                      } else if (res.errors) {\n                        console.error(res.errors);\n                      }\n                    },\n                    err => { console.error({err}); }\n                  );\n                }\n              } else if (error) {\n                element.textContent = error + ' Please correct your input.';\n                element.setAttribute('style', 'color:red');\n              }\n            } else if (res.name) {\n              setError(res.name);\n            }\n          },\n          err => { console.error({err}) }\n        );\n      }\n    }\n    \n    return () => mounted = false;\n  }, [loggedInUser, newValue, userRoles]);\n\n  // Get the tabs for the page.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (items.length > 0) {\n        // const tabsObject = {'All Roles': 0};\n        const tabsArray = ['All Roles'];\n        let tempTabs = [...items];\n                \n        // Sort the array by role ID, so that the tabs will always be in the same order.\n        tempTabs.sort((a, b) => {\n          const one = parseInt(a.RoleId);\n          const two = parseInt(b.RoleId);\n        \n          return one > two ? 1 : -1;\n        });\n  \n        // Reduce the array of tempTabs to unique ones only.\n        tempTabs.forEach(item => {\n          // tabsObject[item.Role] = item.RoleId;\n          if (!tabsArray.includes(item.Role)) tabsArray.push(item.Role);\n        });\n  \n        // setTabs(Object.entries(tabsObject));\n        setTabs(tabsArray);\n\n      };\n    }\n    return () => mounted = false;\n  }, [items]);\n  \n  // Populate and update users from props.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) if (props.users) setUsers(props.users);\n    return () => mounted = false;\n  }, [props.users]);\n  \n  // Toggle allChecked.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (users && users.length !== 0 && isChecked.length === users.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, users]);\n  \n  // Set the active tab, when it changes.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]);\n  \n  // Set the active-tab count.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (Array.isArray(props.users)) {\n        let counter = 0;\n        props.users.forEach(user => {\n          if (user.Role === activeTab || activeTab === 'All Roles') counter++;\n        });\n        setActiveTabCount(counter);\n      }\n    }\n    return () => mounted = false;\n  }, [props.users, activeTab]);\n  \n  // Show or hide optional actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';        \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n  \n  // Set loggedInUser from local storage.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setLoggedInUser(JSON.parse(localStorage.getItem('user')));\n    }\n    return () => mounted = false;\n  }, []);\n\n  // Set the activeTabIndex variable.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const activeTabKeyValue = Object.entries(tabs).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n\n    return () => mounted = false;\n  }, [activeTab, tabs]);\n\n  // Set showMessage after a user has been added.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.action === 'Add User') setShowMessage(true)\n    }\n    return () => mounted = false;\n  }, [props.action]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n  \n  // Get the user's available roles for sign-up.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const user = new User(); // Must create a new user inside the useEffect, otherwise the code runs ad nauseum.\n      user.getUserRoles().then(\n        res => {\n          if (res.data) {\n            const userRoles = res.data?.getUserRoles;\n            setUserRoles(userRoles);\n          } else if (res.name) {\n            setError(res.message);\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return props.error ? \n  ( // Render the sign-in error.\n    <div className=\"signin-error\">{props.error.message}</div>\n  ) \n  : !props.isLoaded ? \n  (  // Render the loading message.\n    <div className=\"loading unprocessed\">Loading . . . </div>\n  ) \n  : loggedInUser?.role === 'Admin' ?\n  ( // If the user has the correct permissions, load the page.\n    items ?\n    (\n      <div className='user-container'>\n        <div className=\"order-actions user\">\n          <Tabs activeTab={activeTab} tabIndex={activeTabIndex} tabs={tabs} handleClick={handleTabClick} caller={'user'} />\n        </div>\n        <div className=\"order-info\">\n          <div className='stats'>\n            {tabs.length > 1 ? <p className=\"order-info-number-display\">Tab: {`${activeTabIndex + 1} of ${tabs.length}`}</p> : null}\n            <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n            <p className=\"order-info-number-display\">Count: {activeTabCount}</p>\n          </div>\n            <div className='action-links'>\n              <form className='link'>\n                <Link\n                  to={{\n                    pathname: '/login',\n                    state: {\n                      user: {\n                        id: '',\n                        action: 'Add User',\n                        role: activeTab !== 'All Roles' ? activeTab : ''\n                      }\n                    },\n                  }}\n                  >\n                  Add\n                </Link>\n                {activeLink ? (\n                  <Link\n                    to={{\n                      pathname: '/users',\n                      state: {\n                        id: isChecked,\n                        action: 'Delete User',\n                      },\n                    }}\n                    onClick={() => action('deleteUser')}\n                  >\n                    Delete\n                  </Link>\n                ) : (\n                  ''\n                )}\n              </form>\n            </div>\n            {!activeLink && error ? (\n              <div>Error: {error}</div>\n            ) : (\n              ''\n            )}\n            {(props.action === 'Delete User' || props.action === 'Add User') && showMessage ? \n            (\n              !error ? \n              (\n                props.message && !activeLink ?\n                (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>{props.message}</p>\n                  </div>\n                ) : props.id && !activeLink ? \n                (\n                  !Array.isArray(props.id) ? \n                  (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>User #{props.id} has been {message(props.action)}.</p>\n                    </div>\n                  ) \n                  : \n                  (\n                    props.id.length === 1 ? \n                    (\n                      <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                        <p>User #{props.id[0]} has been {message(props.action)}.</p>\n                      </div>\n                    ) \n                    : \n                    (\n                      <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                        <p>The following users have been {message(props.action)}:&nbsp;</p>\n                        <div className='orders-in-array'>\n                          {props.id.map((id, key) => (\n                            props.id.length === 1 ?\n                            (\n                              <p key={key}>{id}</p>\n                            )\n                            : key === props.id.length - 1 ?\n                            (\n                              <p key={key}>{id}.</p>\n                            )\n                            :\n                            (\n                              <p key={key}>{id},<span>&nbsp;</span></p>\n                            )\n                            ))}\n                        </div>\n                      </div>\n                    )\n                  )\n                ) : ( \n                  '' \n                )\n              ) \n              : // There was an error in the action.\n              ( \n              props.id ? \n              (\n                !Array.isArray(props.id) ? \n                (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>The following error occurred when user #{props.id} was {message(props.action)}: {error}.</p>\n                  </div>\n                ) : (\n                  props.id.length > 1 ?\n                  (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>There was a \"{error}\" error when the following IDs were {message(props.action)}:</p>\n                      <div className='orders-in-array'>\n                        {props.id.map((id, key) => (\n                          <p key={key}>{id}</p>))}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>The following error occurred when user #{props.id[0]} was {message(props.action)}: {error}.</p>\n                    </div>\n                  )\n                )\n              ) : (\n                ''\n              )\n            )\n          ) : (\n            ''\n          )}\n          {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} handleBlur={handleBlur} handleClick={handleClick} toggleSelect={toggleSelect} handleRoleSelect={handleRoleSelect} getClassNamesFor={getClassNamesFor} caller={{ users: 'user' }} userRoles={userRoles} /> : null}\n        </div>\n        <table>\n          <thead>\n            <tr className=\"header-row\">\n              {items.length !== 0 ? (\n                <th className='checkbox-th'>\n                  <Checkbox\n                    type='checkbox'\n                    name='selectAll'\n                    handleClick={handleSelectAll}\n                    isChecked={allChecked}\n                    value={activeTab ? activeTab : ''}\n                  />\n                </th>\n              ) : (\n                <th className='hidden-checkbox'></th>\n              )}\n              {formattedHeaders.map((header, key) => (\n                vpWidth < 1280 ?\n                (\n                  header !== 'Email' && header !== 'Date Registered' && header !== 'Last Login' && header !== 'Logged In' && header !== 'Failed Attempts' ?\n                  (\n                    <th\n                      key={key}\n                      onClick={() => requestSort(header.split(' ').join(''))}\n                      className={getClassNamesFor(header.split(' ').join(''))}\n                    >\n                      {header}\n                    </th>\n                  )\n                  :\n                  (\n                    null\n                  )\n                )\n                :\n                (\n                  <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header === 'Failed Attempts' ? 'Failed' : header === 'Date Registered' ? 'Registered' : header}\n                  </th>\n                )\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, key) => {\n              return item.Role === activeTab || activeTab === 'All Roles' ? \n              (\n                <tr key={key}>\n                  <td className='select-one'>\n                    <Checkbox\n                      type='checkbox'\n                      name={item.Id}\n                      value={item.Id ? item.Id : ''}\n                      handleClick={handleSelect}\n                      isChecked={isChecked.includes(item.Id)}\n                    />\n                  </td>\n                  <td className='user-link'>\n                    {vpWidth < 1280 ? (\n                      <Link to='#' onClick={() => action('showDetails', item, key)} >\n                        {item.Id}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.Id\n                    )}\n                  </td>\n                  <td\n                    className=\"editable\"\n                    suppressContentEditableWarning=\"true\"\n                    data-default-value={item.Name}\n                    id={`Name-${key}`}\n                    onBlur={(e) => handleBlur(item.Id, key, 'Name', e)}\n                    onClick={(e) => handleClick(e.target, key, 'Name')}\n                  >\n                    {item.Name}\n                  </td>\n                  <td className='desktop'>{item.Email}</td>\n                  <td className='editable select-container' id={`select-role-${key}`} name='role'>\n                    <p \n                      className='role-option default' \n                      id={`user-role-${key}`}\n                      data-default-value={item.Role}\n                      onClick={() => toggleSelect(key)}\n                    >\n                      {roleName && parseInt(roleName.key) === key ? roleName.roleName : item.Role}\n                    </p>\n                    {userRoles.map((value, idx) => (\n                      <p \n                        className='role-option' \n                        id={`Role-${idx}`}\n                        key={idx} \n                        data-value={value.Id} \n                        onClick={(e) => handleRoleSelect(e, idx, key, item)}\n                      >\n                        {value.Role}\n                      </p>\n                    ))}\n                  </td>\n                  <td className='desktop'>\n                    {item.DateRegistered ? new Date(parseInt(item.DateRegistered)).toISOString().split('T')[0] : 'N/A'}\n                  </td>\n                  <td className='desktop'>\n                    {item.LastLogin ? new Date(parseInt(item.LastLogin)).toISOString().split('T')[0] : 'N/A'}\n                  </td>\n                  <td className='desktop'>{item.LoggedIn ? 'Yes' : 'No'}</td>\n                  <td className='desktop'>{item.FailedAttempts ? item.FailedAttempts : 0}</td>\n                  <td>{item.Active ? 'Yes' : 'No'}</td>\n                </tr>\n              ) : (\n                null\n              )\n              })}\n          </tbody>\n        </table>\n      </div>\n    ) \n    : \n    ( \n      <p>No users have been registered for this service.</p>\n    )\n  ) \n  : \n  (\n    <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser?.role}\" does not allow you to access this page.</div>\n  )\n}\n\nexport default Users;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport User from './user';\nimport UserClass from '../../hooks/get-user';\n\nconst Users = (props) => {\n  const [users, setUsers] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const [error, setError] = useState('');\n  const [rerender, setRerender] = useState(false);\n  const currentTab = useRef(null);\n  const params = useLocation();  \n  const state = params?.state;\n\n  // Set the current tab.\n  const handleClick = (callerId) => {\n    setRerender(!rerender);\n    currentTab.current = callerId;\n  }\n\n  // Refresh the users page.\n  const recall = () => {\n   setIsLoaded(false);\n   setRerender(!rerender);\n  }\n\n  // Get users from the db.\n  useEffect(() => {\n    let mounted = true;\n    const user = new UserClass();\n    \n    if (mounted) {\n      user.getAllUsers().then(\n        res => {          \n          if (res.data) {\n            if (res.data.users) setUsers(Array.isArray(res.data.users) ? res.data.users : [res.data.users]);\n            setIsLoaded(true);\n            setError(null);\n          } else if (res.name) {\n            setError({code: res.name, message: res.message});\n            setIsLoaded(true);\n          }\n        },\n        err => {\n          console.error({err});\n          setError(err);\n          setIsLoaded(false);\n        }\n      );\n    }\n    \n    return () => mounted = false;\n  }, [rerender]);\n  \n  // Set the user from local storage.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return !loggedInUser ? \n  ( // The user is not logged in, so return her to the log-in page.\n    <Redirect to=\n      {\n        {\n          pathname: '/login',\n          state: {\n            // id,\n            action: 'Sign In',\n            message: 'Please sign in.'\n          },\n        }\n      }\n    />\n  ) \n  :\n  (\n    loggedInUser.restrictions.pages === 'None' || !loggedInUser.restrictions.pages.includes('Users') ?\n    (\n      !props.clearId ?\n      (\n        props.role !== 'User' ?\n          <User users={users} isLoaded={isLoaded} error={error} handleClick={handleClick} activeTab={currentTab.current} recall={recall} role={props.role} action={state?.action} id={state?.id} message={state?.message} liftData={props.liftData} liftUser={props.liftUser} />\n        : <div className=\"role-denied\">Your profile's assigned role of \"{props.role}\" does not allow you to access this page.</div>\n      )\n      : \n      (\n        null\n      )\n    )\n    :\n    (\n      <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser.role}\" does not allow you to access this page.</div>\n    )\n  )\n};\n\nexport default Users;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport User from '../../hooks/get-user';\n\nconst Signin = ({ profile, message, liftData, liftUser, clearError, signedIn, signUp }) => {\n  const [username, setUsername] = useState(profile && profile.email ? profile.email : '');\n  const [password, setPassword] = useState(profile && profile.password ? profile.password : '');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [id, setId] = useState('');\n  const [name, setName] = useState([]);\n  const [role, setRole] = useState(profile?.role);\n  const [roleName, setRoleName] = useState(null);\n  const [roles, setRoles] = useState([]);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loggedIn, setLoggedIn] = useState(0);\n  const [renderSignUp, setRenderSignUp] = useState(signUp);\n  const [changePassword, setChangePassword] = useState(false);\n  const userAction = useRef(profile?.action);\n  const userInfo = useRef(null);\n  const user = new User();\n\n  // Handle the clicking of the sign-in button.\n  const handleSignIn = event => {\n    event.preventDefault();\n    document.getElementById('sign-in-button').innerText = 'Signing in . . . ';\n    // document.getElementById('sign-in-button').classList.add('reset-color');\n    userAction.current = 'Sign In';\n    user.email = username;\n    setError(null);\n        \n    if (!changePassword) {\n      // See if the user already exists in the db.\n      user.getUserByEmail().then(\n        res => {\n          if (res.data) {\n            const id = res.data?.userByEmail?.Id;\n            \n            if (id) { // We have a user.\n              const activeUser = res.data?.userByEmail?.Active;\n              const firstSignin = res.data?.userByEmail?.LastLogin;\n              user.id = id;\n              user.password = password;\n              \n              if (!activeUser) { // The user has been deactivated and should not be given access to the site.\n                setError('This user profile has been deactivated.');\n              } else { // The user is active.\n                if (!firstSignin) { // Make the user change her password.\n                  user.changePassword(true).then(  // arg => firstSignin\n                    res => {\n                      if (res) {\n                        const id = res?.data?.changePassword?.Id;\n                        const error = res?.data?.changePassword?.Error;\n                        if (id && !error) {\n                          setChangePassword(true);\n                          document.getElementById('new-password-first-field').focus();\n                          document.getElementById('sign-in-button').textContent('Update');\n                          setError('');\n                          setId(id);\n                          setPassword('');\n                          setConfirmPassword('');\n                        } else if (error) setError(error);\n                      } else if (res.name) { // There was an error.\n                        setError(res.message);\n                      }\n                    },\n                    err => { console.error(err); }\n                  );\n                } else { // Make the API call to validate the user and generate/sign her token.\n                  user.signIn().then(\n                    res => {\n                      if (res.data) {\n                        const userData = res.data?.signin;\n                        const error = userData?.Error;\n                        setId(id);\n                        setError(error ? error : '');\n\n                        if (error) { // Print the error and reset the sign-in button's text.\n                          document.getElementById('sign-in-button').innerText = 'Sign In';\n                        } else {\n                          if (userData) { // Get user restrictions from the db and add them to the user object in local storage.\n                            user.getUserRestrictions(userData.RoleId).then(\n                              res => {\n                                if (res) {\n                                  const roleProfile = res?.data?.getUserRestrictions;\n                                  const error = roleProfile?.Error;\n                                \n                                  if (!error) { // Build the user object to be stored in the browser.\n                                    const userObject = {\n                                      id: userData.Id,\n                                      name: userData.Name,\n                                      role: userData.Role,\n                                      roleId: userData.RoleId,\n                                      restrictions: {\n                                        pages: roleProfile.RestrictedPages,\n                                        actions: roleProfile.RestrictedActions\n                                      }\n                                    };\n        \n                                    localStorage.setItem('user', JSON.stringify(userObject));\n                                    userInfo.current = userObject;\n                                    liftData(!error ? true : false, 'signin', false, 39);\n                                    liftUser(userObject);\n                                    setLoggedIn(!error ? 1 : 0);\n                                    setRenderSignUp(false);\n                \n                                  } else setError(error);\n                                }\n                              },\n                              err => {\n                                setError(err);\n                                console.error(err);\n                              }\n                            );\n                          } else {\n                            if (res.errors) {\n                              const errorsArray = [];\n\n                              res.errors.forEach(err => {\n                                const errorMessage = err.message;\n                                errorsArray.push(errorMessage);\n                              });\n\n                              if (errorsArray.length > 0) setError(errorsArray);\n                            }\n                          }\n                        }\n                      } else if (res.name) {\n                        setError(res.message);\n                      }\n                    },\n                    err => { console.error({err}) }\n                  );\n                }\n              }\n            } else { // The user needs to be registered (or they entered an incorrect email address).\n              // If there are no users at all in the database, render the signup page.\n              user.getAllUsersSansToken().then(\n                res => {\n                  if (res.data) {\n                    const id = res.data?.users[0].Id;\n                    const error = res.data?.users[0].Error;\n                    if (!id && !error) {\n                      setRenderSignUp(true);\n                      userAction.current = 'Add User';\n                    } else if (id && !error) {\n                      setError('There is no user associated with this email address.\\n\\nPlease ensure you\\'ve entered the correct email address or ask the site\\'s administrator for access.');                      \n                      liftData(false, 'signin', true, 61); // Args => boolean, caller, error (boolean).\n                      document.getElementById('sign-in-button').innerText = 'Sign in';\n                      document.getElementById('sign-in-button').classList.remove('reset-color');\n                    }\n                  } else if (res.name) {\n                    setError(res.message);\n                  }\n                },\n                err => {\n                  console.error({err});\n                }\n              );\n            }\n          } else {\n            if (!res.response) {\n              setError('Network error. Check that the API is up and running');\n              document.getElementById('sign-in-button').innerText = 'Sign In';\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    } else { // Update the user's password.\n      if (confirmPassword !== password) { // Ensure that the user has entered her password correctly.\n        setError('The passwords do not match; please re-enter them.');\n        setPassword('');\n        setConfirmPassword('');\n      } else { // The passwords match, so send it to the db and sign the user in.\n        setError(null);\n        user.id = id;\n        user.password = confirmPassword;\n        user.changePassword(false).then(  // The return on this call to changePassword is the same as for signin.\n          res => {\n            if (res.data) {\n              const userData = res.data?.changePassword;\n              const id = userData?.Id;\n              const error = userData?.Error;\n\n              // If id, the user's password has been updated and the user has been logged in, so redirect to the dashboard.\n              if (id && !error) {\n                setId(id);\n\n                // Get user restrictions from the db and add them to the user object in local storage.\n                user.getUserRestrictions(userData.RoleId).then(\n                  res => {\n                    if (res) {\n                      const roleProfile = res?.data?.getUserRestrictions;\n                      const error = roleProfile?.Error;\n\n                      if (!error) { // Build the user object to be stored in the browser.\n                        const userObject = {\n                          id: userData.Id,\n                          name: userData.Name,\n                          role: userData.Role,\n                          roleId: userData.RoleId,\n                          restrictions: {\n                            pages: roleProfile.RestrictedPages,\n                            actions: roleProfile.RestrictedActions\n                          }\n                        };\n\n                        localStorage.setItem('user', JSON.stringify(userObject));\n                        userInfo.current = userObject;\n                        liftData(!error ? true : false, 'signin', false);\n                        liftUser(userData);\n                        setLoggedIn(1);\n                        setError(null);\n                        setChangePassword(false);\n                      } else {\n                        setError(error);\n                        setLoggedIn(0);\n                      }\n                    }\n                  },\n                  err => {\n                    console.error(err);\n                    setError(err);\n                  }\n                );\n              }\n            }\n          },\n          err => { \n            console.error(err);\n            setError(err);\n          }\n        );\n      }\n    }\n  };\n\n  // Handle the clicking of the sign-up button.\n  const handleSignUp = (event) => {\n    event.preventDefault();\n    document.getElementById('register-button').textContent = 'Registering . . .';\n    user.email = username;\n    user.password = password;\n    user.name = name;\n    user.role = role ? role : '';\n    user.role = !isNaN(parseInt(user.role)) ? parseInt(user.role) : user.role;\n    setError(null);\n\n    if (role) {\n      user.signUp().then(\n        res => {\n          if (res.data) {\n            if (res.data?.signup?.Error) {\n              setError(res.data?.signup?.Error);\n              setLoggedIn(0);\n              document.getElementById('register-button').textContent = 'Register';\n            } else if (res.data.signup?.Id) {\n              setSuccessMessage(res.data?.signup?.Message);\n              setError(null);\n              setId(res.data?.signup?.Id);\n              userAction.current = 'Sign In';\n            }\n          } else if (res.name) {\n            setError(res.message);\n          } \n          \n          if (res.errors) res.errors.forEach(error => console.error({error})); // For debugging.\n        },\n        err => { console.error({err}) }\n      );\n    } else setError('Please select a role for this user.');\n  }\n\n  // Toggle the roles' dropdown menu on click.\n  const toggleSelect = () => {\n    const options = document.getElementById('select-role').children;\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) option.classList.toggle('show-option');\n          else option.classList.toggle('fade-default');\n        }\n      });\n    }\n\n    setRoleName(null);\n    setRole(null);\n  };\n\n  // Open the roles' dropdown menu on focus.\n  const openDropdown = () => {\n    const options = document.getElementById('select-role').children;\n    \n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) {\n            option.classList.add('show-option');\n          } else {\n            option.classList.add('fade-default')\n          }\n        }\n      });\n    }\n  };\n\n  // Toggle the class that highlights the role.\n  const toggleClass = (event) => {\n    const options = document.getElementById('select-role').children;\n    const id = event.target.id;\n\n    setRoleName(null);\n    setRole(null);\n\n    if (options) {\n      for (let option of options) {\n        if (!option.id.includes('default')) {\n          if (option.id !== id) {\n            document.getElementById(option.id).classList.remove('highlight-option');\n          } else {\n            document.getElementById(id).classList.add('highlight-option');\n          }\n        }\n      }\n    }\n  };\n\n  // Capture the user's role.\n  const handleSelect = (event) => {\n    const roleId = event.target.dataset.value;\n    const roleName = event.target.textContent;\n    const options = document.getElementById('select-role').children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) {\n            option.classList.remove('show-option');\n          } else {\n            option.classList.remove('fade-default')\n            option.classList.add('role-selected');\n          }\n        }\n      });\n    }\n\n    setRole(roleId);\n    setRoleName(roleName);\n  };\n\n  // Render the sign-up form.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (userAction.current === 'Add User' && profile.action === 'Add User') setRenderSignUp(true);\n      else setRenderSignUp(false);\n    }\n    return () => mounted = false;\n  }, [profile.action]);\n  \n  // Change the page's nav title.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (userAction.current === 'Add User' && profile.action === 'Add User') {\n        liftData(true, 'signup', false, 130);\n        setRenderSignUp(true);\n      } else if (profile.action === 'Sign Out' && userAction.current === 'Sign Out') {\n        const user = new User();\n        user.signOut().then(\n          res => {\n            if (res) {\n              if (res.data) {\n                setLoggedIn(0);\n                userAction.current = 'Sign In';\n                liftData(false, 'signin', false, 140);\n                setError(null);\n                setRenderSignUp(false);\n                liftUser(null);\n                localStorage.setItem('user', null)\n              } else if (res.name) {\n                // console.error(res.message);\n              }  \n            }\n          },\n          err => { console.error({err}) }\n        );  \n      }\n    }\n    return () => mounted = false;\n  }, [liftData, liftUser, profile.action]);\n\n  // Get the user's available roles for sign-up.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const user = new User(); // Must create a new user inside the useEffect, otherwise the code runs ad nauseum.\n      user.getUserRoles().then(\n        res => {          \n          if (res.data) {\n            const userRoles = res.data?.getUserRoles;\n            setRoles(userRoles);\n          } else if (res.name) {\n            setError(res.message);\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n    return () => mounted = false;\n  }, []);\n    \n  return !renderSignUp && !changePassword ?\n  ( // Sign in.\n    <> \n      <div className='signin-container'>\n        <p>{message}</p>\n        <form onSubmit={(e) => handleSignIn(e)}>\n          <input name='username' value={username} placeholder='Email' onChange={(e) => setUsername(e.target.value)} required />\n          <input name='password' value={password} placeholder='Password' onChange={(e) => setPassword(e.target.value)} required type='password'/>\n          <button id='sign-in-button' name='submit' type='submit'>Sign In</button>\n        </form>\n      </div>\n      {error ?\n        <div className='sign-in-error'>{error}</div>\n      : parseInt(loggedIn) && userInfo.current ?\n        <Redirect to={{\n          pathname: '/dashboard',\n          state: {\n            user: {\n              id: userInfo.current?.Id,\n              name: userInfo.current?.Name,\n              role: userInfo.current?.Role,\n              action: 'Dashboard'\n            }\n          }\n        }}\n        />\n      : ''}\n    </>\n  ) \n  : !renderSignUp && changePassword ? \n  ( // Change password.\n    <> \n      <div className='signin-container'>\n        <p>Enter a new password and confirm it in the second field.</p>\n        <form onSubmit={(e) => handleSignIn(e)}>\n          <input id='new-password-first-field' name='password' value={password} placeholder='Enter your new password.' onChange={(e) => setPassword(e.target.value)} type='password' required />\n          <input name='password' value={confirmPassword} placeholder='Re-enter your new password.' onChange={(e) => setConfirmPassword(e.target.value)} required type='password' />\n          <button id='sign-in-button' name='submit' type='submit'>Update</button>\n        </form>\n      </div>\n      {error ?\n        <div>{error}</div>\n      : parseInt(loggedIn) && userInfo.current ?\n        <Redirect to={{\n          pathname: '/dashboard',\n          state: {\n            user: {\n              id: userInfo.current?.Id,\n              name: userInfo.current?.Name,\n              role: userInfo.current?.Role\n            }\n          }\n        }}\n        />\n      : ''}\n    </>\n  ) \n  : \n  ( // Sign up.\n    <div className='signup-container'>\n      {!id ? \n      (\n        <>\n          <form onSubmit={handleSignUp}>\n            <input name='your-name' value={name} placeholder='Name' onChange={(e) => setName(e.target.value)} required />\n            <input name='email' value={username} placeholder='Email' onChange={(e) => setUsername(e.target.value)} required />\n            <div className='select-container add-user' id='select-role' name='role' onChange={() => handleSelect()}>\n              <p \n                className='role-option default' \n                id='default' value='default' \n                onClick={() => toggleSelect()}\n                onFocus={() => openDropdown()}\n                tabIndex='0'\n              >\n                {roleName ? roleName : 'Role'}\n              </p>\n              {roles.map((value, key) => (\n                <p \n                  className='role-option' \n                  id={`option-${key}`} \n                  key={key} \n                  data-value={value.Id} \n                  onClick={(e) => handleSelect(e)} \n                  onFocus={(e) => toggleClass(e, key)} \n                  onKeyPress={(e) => handleSelect(e)}\n                  tabIndex='0'\n                >\n                  {value.Role}\n                </p>\n              ))}\n            </div>\n            <input name='password' value={password} placeholder='Password' type='password' onChange={(e) => setPassword(e.target.value)} required />\n            <button id='register-button' name='submit' type='submit'>Register</button>\n          </form>\n          {error ? \n          (\n            <div>{error}</div>\n          ) : (\n            ''\n          )}\n        </>\n      ) : (\n        <Redirect to={\n          {\n            pathname: '/users',\n            state: {\n              id,\n              action: 'Add User',\n              message: successMessage\n            },\n          }\n        }\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Signin;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Signin from './signin';\n\n\nconst Login = (props) => {\n  let loggedIn = props?.loggedIn;  \n  const params = useLocation();\n  const state = params?.state;\n  const user = state?.user;\n\n  if (loggedIn) loggedIn = parseInt(loggedIn);\n  \n  return ( \n    <div className='login-container'>\n      <Signin profile={user ? user : { action: 'Sign In' }} message={state?.message} liftData={props ? props.liftData : ''} liftUser={props.liftUser} clearError={props ? props.error : ''} signedIn={loggedIn} signUp={props.signUp} />\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\nconst MobileLinksModal = props => {\n  const links = [];\n  \n  // Remove the active page's component from the links.\n  if (props && props.links) {\n    props.links.forEach(link => {\n      const activePageFromLinks = link?.props?.children?.props?.children[1]?.props?.children;\n\n      if (activePageFromLinks) {\n        if (props.activePage) {\n          if (props.activePage !== activePageFromLinks) {\n            links.push(link);\n          }\n        }\n      }\n    });\n  }\n\n  return(\n    <div className=\"navbar-links-mobile\">{links}</div>\n  )\n};\n\nexport default MobileLinksModal;\n","// @material-ui/icons\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport SmsFailedIcon from '@mui/icons-material/SmsFailed';\nimport RunningWithErrorsIcon from '@mui/icons-material/RunningWithErrors';\nimport SettingsApplicationsIcon from '@mui/icons-material/SettingsApplications';\nimport PeopleIcon from '@mui/icons-material/People';\nimport LoginIcon from '@mui/icons-material/Login';\n// import LogoutIcon from '@mui/icons-material/Logout';\n// import DetailsIcon from '@mui/icons-material/Details';\n// import LanguageIcon from '@mui/icons-material/Language';\n\n// core components/pages for Admin layout\nimport Home from './pages/home/home.js';\nimport FailedOrders from './pages/failed-orders/failed-orders.js';\nimport FailedProcesses from './pages/failed-processes/failed-processes.js';\n// import OrderView from './pages/order-view/order-view.js';\nimport Settings from './pages/settings/settings.js';\nimport Users from './pages/users/users.js';\nimport Login from './pages/login/login.js';\n\n// core components/views for RTL layout\n// import RTLPage from 'views/RTLPage/RTLPage.js';\n\nconst dashboardRoutes = [\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    rtlName: 'Панель управления',\n    icon: DashboardIcon,\n    component: Home,\n    layout: 'user',\n  },\n  {\n    path: '/failed-orders',\n    name: 'Failed Orders',\n    rtlName: 'Неуспешные заказы',\n    icon: SmsFailedIcon,\n    component: FailedOrders,\n    layout: 'user',\n  },\n  {\n    path: '/failed-processes',\n    name: 'Failed Processes',\n    rtlName: 'Неуспешные процессы',\n    icon: RunningWithErrorsIcon,\n    component: FailedProcesses,\n    layout: 'user',\n  },\n  // {\n  //   path: '/order-view',\n  //   name: 'Order View',\n  //   rtlName: 'Заказ в подробностях',\n  //   icon: DetailsIcon,\n  //   component: OrderView,\n  //   layout: '/admin',\n  // },\n  {\n    path: '/settings',\n    name: 'Settings',\n    rtlName: 'Таблица',\n    icon: SettingsApplicationsIcon,\n    component: Settings,\n    layout: 'admin',\n  },\n  {\n    path: '/users',\n    name: 'Users',\n    rtlName: 'Пользователи',\n    icon: PeopleIcon,\n    component: Users,\n    layout: 'admin',\n  },\n  {\n    path: '/login',\n    name: 'Sign In',\n    rtlName: 'Войти',\n    icon: LoginIcon,\n    component: Login,\n    layout: 'user',\n  },\n  // {\n  //   path: '/rtl-page',\n  //   name: 'RTL Support',\n  //   rtlName: 'На Русском',\n  //   icon: LanguageIcon,\n  //   component: RTLPage,\n  //   layout: '/rtl',\n  // },\n];\n\nexport default dashboardRoutes;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ListItem } from '@mui/material';\n\nconst useLinks = (routes, inputId, linkId, handleClick) => {\n  const links = (\n    routes.map((route, key) => {\n      return route.path === '/order-view' ? // Not currently an active feature.\n        (\n          <NavLink\n            to={{\n              pathname: route.path,\n              state: {\n                order: inputId ? inputId : linkId,\n              },\n            }}\n            key={key}\n            className='nav-link'\n            activeStyle={{ border: '1px solid cornflowerblue', borderRadius: '20px', margin: '0', color: 'orange' }}\n          >\n            <ListItem style={{ padding: '0 1rem 0 1.5rem', margin: '0' }}>\n              <route.icon style={{ fontSize: '2rem', padding: '0', margin: '0' }} />\n              <h5 value={route.name} className='list-item-text'>{route.name}</h5>\n            </ListItem>\n          </NavLink>\n        ) : (\n          <NavLink\n            to={{\n              pathname: route.path,\n              state: {\n                user: {\n                  action: route.name,\n                },\n              }\n            }}\n            key={key}\n            className={`nav-link ${route.layout}`}\n            activeStyle={{ border: '1px solid cornflowerblue', borderRadius: '20px', margin: '0', color: 'orange' }}\n          >\n            <ListItem style={{ padding: '0 1rem 0 1.5rem', margin: '0' }}>\n              <route.icon style={{ fontSize: '2rem', padding: '0', margin: '0', paddingRight: '5px' }} />\n              <h5 id={route.name} className='list-item-text' onClick={handleClick}>{route.name}</h5>\n            </ListItem>\n          </NavLink>\n        );\n    })\n  );\n\n  return links;\n}\n\nexport default useLinks;","import React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Home from '../pages/home/home';\nimport FailedOrders from '../pages/failed-orders/failed-orders';\n// import OrderView from '../pages/order-view/order-view';\nimport Settings from '../pages/settings/settings';\nimport FailedProcesses from '../pages/failed-processes/failed-processes';\nimport Users from '../pages/users/users';\nimport Login from '../pages/login/login';\nimport MobileLinksModal from './mobile-links-modal';\nimport initialRoutes from '../routes';\nimport useLinks from '../hooks/get-links';\n// import nCompassLogo from '../nCompass_logo_fullsize_square.png'; // For logo.otherExtension\nimport {ReactComponent as Logo} from '../logo.svg';  // For logo.svg.\nimport MenuIcon from '@mui/icons-material/Menu';\nimport LinearScaleIcon from '@mui/icons-material/LinearScale';\n\nconst NavBar = () => {\n  // const [linkId, setLinkId] = useState(null);\n  // const [inputId, setInputId] = useState(null);\n  // const [inputDisplay, setInputDisplay] = useState(null);\n  const [signUp, setSignUp] = useState(false);\n  const [error, setError] = useState(null);\n  const [routes, setRoutes] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(localStorage.getItem('loggedIn') ? JSON.parse(localStorage.getItem('loggedIn')) : null);\n  const [activePage, setActivePage] = useState(null);\n  const [renderMobileLinksModal, setRenderMobileLinksModal] = useState(false);\n  const [reRender, setReRender] = useState(false);\n  const loggedInUser = useRef(null);\n  const links = useLinks(routes, null, null, handleClick);\n\n  // (Hoisted function.) If the user logs out, this function causes the user's token to expire.\n  function handleClick(event) {\n    const id = event.target.id;\n    \n    // setInputDisplay(null); // For the search-order field, which isn't being used.\n    setRenderMobileLinksModal(false);\n    document.getElementsByTagName('body')[0].classList.remove('no-scroll');\n\n    if (id === 'Sign Out') {\n      setLoggedIn(0);\n      setSignUp(false);\n    }\n\n    if (id === 'Sign In') setError('');\n    if (id === 'Users') setError(null);\n\n    if (id === 'Failed Processes') {\n      setReRender(false);\n      setReRender(true);\n    } else {\n      setReRender(false);\n    }\n  };\n\n  // Handle the user's clicking of the hamburger menu.\n  const handleMenuClick = () => {\n    const activePage = document.getElementsByClassName('active')[0].innerText;\n\n    if (activePage) {\n      // Disable/enable vertical scrolling on click of the hamburger menu and its closed counterpart.\n      document.getElementsByTagName('body')[0].classList.toggle('no-scroll');\n      // Set the active page.\n      setActivePage(activePage);\n\n      // Render the component that will show a modal of menu items.\n      setRenderMobileLinksModal(!renderMobileLinksModal);\n    }\n  }\n\n  // For redacted search-by-order field: Sets the inputId equal to the user's input in the input field and sets linkId to null.\n  // const handleSubmit = event => {\n  //   event.preventDefault();\n  //   if (typeof inputDisplay === 'number') {\n  //       setInputId(inputDisplay);\n  //       setLinkId(null);\n  //       setRedirect(true);\n  //   } else setInputDisplay('Need a number.');\n  // };\n\n  // For redacted search-by-order field.\n  // const handleChange = event => {\n  //   let id = parseInt(event.target.value);\n  //   typeof id === 'number' ? setInputDisplay(id) : setInputDisplay('Enter a number.');\n  // };\n\n  // // Retrieves the ID from params.state. \n  // const getIdOnClick = num => {\n  //   let id;\n  //   if (num) id = parseInt(num);\n  //   if (id) {\n  //     if (inputDisplay) {\n  //       if (inputDisplay !== id) {\n  //         setLinkId(id);\n  //         setInputDisplay(id);\n  //         setInputId(null);\n  //       } else {\n  //         // console.log('id === inputDisplay');\n  //       }\n  //     } else {\n  //       if(id !== inputId) {\n  //         setLinkId(id);\n  //         setInputDisplay(id);\n  //         setInputId(null);\n  //       } else {\n  //         setInputDisplay(inputId);\n  //       }\n  //     }\n  //   }\n  // };\n\n  const liftUser = user => {\n    loggedInUser.current = user;\n    if (!user) setLoggedIn(0);\n  };\n\n  // Relays an action taken via submit on a page down river.\n  const liftData = (boolean, caller, error = false, line = 0) => {\n    if (caller === 'signin') {\n      if (!error) {\n        setLoggedIn(boolean ? 1 : 0);\n        setSignUp(false);\n      } else setError(null);\n    } else if (caller === 'signup') {\n      setSignUp(boolean);\n    } else if (caller === 'user') {\n      setLoggedIn(boolean);\n    } else {\n      setSignUp(false);\n      setLoggedIn(0);\n    }\n  }\n\n  // Update the routes to reflect whether a user is signed in or out.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const updatedRoutes = initialRoutes.map(route => {        \n        if (route.path === '/login') {\n          const temp = Object.assign({}, route);\n          temp.name = parseInt(loggedIn) ? 'Sign Out' : 'Sign In';\n          return temp;\n        }\n        return route;\n      });\n      \n      setRoutes(updatedRoutes);\n      localStorage.setItem('loggedIn', loggedIn);\n    }\n    return () => mounted = false;\n  }, [loggedIn, signUp, reRender]);\n  \n  return (\n    <Router>\n      <nav className='navbar'>\n        <div className='logo-links mobile'>\n          <div className=\"logo-container\">\n            <a href={process.env.REACT_APP_HOME ? process.env.REACT_APP_HOME : 'https://hulk.yoli.net:3002/'}><Logo /></a>\n            {/* <a href={process.env.REACT_APP_HOME}><img className=\"logo\" src={nCompassLogo} alt=\"logo\" /></a> */}\n            <h1>Orders</h1>\n          </div>\n          <div className=\"links-container\">\n            <div className={\"navbar-links\"}>\n              {links}\n            </div>\n              {loggedIn ? // Hamburger menu icon.\n              (\n                !renderMobileLinksModal \n                ? <div className=\"hamburger-menu-icon\" onClick={handleMenuClick}><MenuIcon /></div>\n                : <div className=\"hamburger-menu-icon\" onClick={handleMenuClick}><LinearScaleIcon /></div>\n              )\n              : null\n              }\n          </div>\n        </div>\n        <div className='logo-links tablet'>\n          <div className='links-container'>\n            <div className={\"navbar-links\"}>\n              {links}\n            </div>\n          </div>\n          <div className='logo-container'>\n            <a href={process.env.REACT_APP_HOME ? process.env.REACT_APP_HOME : 'https://hulk.yoli.net:3002/'}><Logo /></a>\n            {/* <a href={process.env.REACT_APP_HOME}><img className=\"logo\" src={nCompassLogo} alt=\"logo\" /></a> */}\n            <h1>Orders</h1>\n          </div>\n          {loggedIn ? // Hamburger menu icon.\n          (\n            !renderMobileLinksModal \n            ? <div className=\"hamburger-menu-icon\" onClick={handleMenuClick}><MenuIcon /></div>\n            : <div className=\"hamburger-menu-icon\" onClick={handleMenuClick}><LinearScaleIcon /></div>\n          )\n          : null\n          }\n        </div>\n        <div className='logo-links desktop'>\n          <div className=\"logo-container\">\n            <a href={process.env.REACT_APP_HOME ? process.env.REACT_APP_HOME : 'https://hulk.yoli.net:3002/'}><Logo /></a>\n            {/* <a href={process.env.REACT_APP_HOME}><img className=\"logo\" src={nCompassLogo} alt=\"logo\" /></a> */}\n            <h1>Orders</h1>\n          </div>\n          <div className=\"links-container\">\n            <div className={\"navbar-links\"}>\n              {links}\n            </div>\n          </div>\n        </div>\n        {/* <div className='order-search'>\n          <input\n            className='search-field'\n            value={inputDisplay ? inputDisplay : ''}\n            placeholder=\"Order Search by ID\"\n            onChange={handleChange}\n            onKeyPress={event => event.key === 'Enter' ? handleSubmit(event) : {}}\n            onClick={handleClick}\n          />\n        </div> */}\n      </nav>\n      <main className='main'>\n        <Switch>\n          {/* <Route exact path='/' >\n            <Home />\n          </Route> */}\n          <Redirect exact from='/' to={!loggedIn ? '/login' : '/dashboard'} />\n          <Route exact path='/dashboard'>\n            <Home />\n          </Route>\n          <Route exact path='/failed-orders'>\n            <FailedOrders />\n          </Route>\n          <Route exact path='/failed-processes'>\n            <FailedProcesses />\n          </Route>\n          {/* <Route exact path='/order-view'>\n            <OrderView getId={getIdOnClick}/>\n          </Route> */}\n          <Route exact path='/settings'>\n            <Settings />\n          </Route>\n          <Route exact path='/users'>\n            <Users \n              liftData={liftData}\n              liftUser={liftUser}\n              // clearId={clearId} \n            />\n          </Route>\n          <Route exact path='/login'>\n            <Login liftData={liftData} liftUser={liftUser} loggedIn={loggedIn} signUp={signUp} error={error} />\n          </Route>\n        </Switch>\n        {/* {redirect === true ? (\n          <Redirect \n            to={{\n              pathname: '/order-view',\n              state: {\n                order: inputId ? inputId : linkId,\n              },\n            }}\n          />\n        ) : (\n          '' \n        )} */}\n      </main>\n      {renderMobileLinksModal ? <MobileLinksModal links={links} activePage={activePage} /> : null}\n    </Router>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst Footer = props => (\n  <footer className='footer'>\n    <p>&copy; nCompass | <a href=\"mailto:chad@ncompass.org\">Email Us</a></p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport NavBar from './components/navigation';\nimport Footer from './components/footer';\n\nconst App = () => {\n  return (\n      <>\n        <NavBar />\n        <Footer />\n      </>\n    )\n}\n\nexport default App;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n","function selectElementContents(el) {\n  if (!el) return;\n  let body = document.body, range, sel;\n  if (document.createRange && window.getSelection) {\n    range = document.createRange(); \n    sel = window.getSelection();\n    sel.removeAllRanges();\n    try {\n        range.selectNodeContents(el);\n        sel.addRange(range);\n    } catch (e) {\n        range.selectNode(el);\n        sel.addRange(range);\n    }\n  } else if (body.createTextRange) {\n    range = body.createTextRange();\n    range.moveToElementText(el);\n    range.select();\n  }\n}\n\nmodule.exports = selectElementContents;\n"],"sourceRoot":""}