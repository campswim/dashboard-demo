{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-orders/failed-orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { getOrders } from '../../hooks/get-order';\nimport Unpulled from './unpulled';\nimport Unpushed from './unpushed';\nimport Ignored from './ignored';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FailedOrders = () => {\n  _s();\n\n  var _loggedInUser$restric;\n\n  // Get state when passed from a link or redirect component.\n  const params = useLocation();\n  let state = null;\n  if (params) state = params.state;\n  if (state) var {\n    order,\n    postPath,\n    action,\n    id\n  } = state; // This is for user-initiated actions, not the get-all-failed called.\n\n  const [getQuery, setGetQuery] = useState('failedPulls');\n  const [click, setClick] = useState(false);\n  const [currentPage, setCurrentPage] = useState('');\n  const [unpushed, setUnpushed] = useState([]);\n  const [unpulled, setUnpulled] = useState([]);\n  const [ignored, setIgnored] = useState([]);\n  const [error, setError] = useState(null);\n  const [unpulledIsLoaded, setUnpulledIsLoaded] = useState(false);\n  const [unpushedIsLoaded, setUnpushedIsLoaded] = useState(false);\n  const [ignoredIsLoaded, setIgnoredIsLoaded] = useState(false);\n  const [query, setQuery] = useState(getQuery);\n  const [loggedIn, setloggedIn] = useState(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const restrictedActions = useRef(loggedInUser === null || loggedInUser === void 0 ? void 0 : (_loggedInUser$restric = loggedInUser.restrictions) === null || _loggedInUser$restric === void 0 ? void 0 : _loggedInUser$restric.actions);\n\n  const recallApi = newQuery => {\n    if (newQuery === query) setQuery('');\n    if (newQuery !== query) setQuery(newQuery);\n  }; // Handle the clicking of a tab.\n\n\n  const handleClick = event => {\n    event.preventDefault();\n    const chosenPage = event.target.value;\n    let activeButton, inactiveButton;\n    setClick(true); // setDate([\n    //   new Date().getDate(),\n    //   new Date().getMonth(),\n    //   new Date().getFullYear(),\n    //   new Date().getHours(),\n    //   new Date().getMinutes(),\n    //   new Date().getSeconds(),\n    // ]);    \n    // formatDate(date);\n\n    setCurrentPage(chosenPage);\n\n    if (chosenPage) {\n      if (chosenPage === getQuery) setGetQuery(null);else setGetQuery(chosenPage);\n      activeButton = document.getElementById(chosenPage);\n      activeButton.setAttribute('class', 'active-button');\n\n      if (chosenPage === 'failedPulls') {\n        inactiveButton = document.getElementById('failedPushes');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('ignoredOrders');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      } else if (chosenPage === 'failedPushes') {\n        inactiveButton = document.getElementById('failedPulls');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('ignoredOrders');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      } else if (chosenPage === 'ignoredOrders') {\n        inactiveButton = document.getElementById('failedPulls');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('failedPushes');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      }\n    }\n  }; // Set the active and inactive tabs.\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted && loggedIn) {\n      // setFormattedDate(formatDate(date));\n      // Set the active tab.\n      if (!click) {\n        // if (state) {\n        //   console.log({action});\n        //   if (action === 'Repush') setGetQuery('failedPushes'); // Failed pushes.\n        //   else if (action === 'Repull' || action === 'RepullAllowMismatch') setGetQuery('failedPulls'); // Failed pulls.\n        // }\n        if (getQuery) {\n          document.getElementById(getQuery).setAttribute('class', 'active-button');\n          document.getElementById(getQuery === 'failedPulls' ? 'failedPushes' : 'failedPulls').setAttribute('class', 'inactive-button');\n        }\n      } else {\n        if (!getQuery) setGetQuery(currentPage);\n\n        if (getQuery) {\n          document.getElementById(getQuery).setAttribute('class', 'active-button');\n          document.getElementById(getQuery === 'failedPulls' ? 'failedPushes' : 'failedPulls').setAttribute('class', 'inactive-button');\n        }\n      }\n\n      if (sessionStorage.getItem('action')) setClick(false);\n    }\n\n    return () => mounted = false;\n  }, [action, click, currentPage, getQuery, loggedIn, state]); // Get data from the db.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      getOrders(getQuery).then(res => {\n        if (res) {\n          if (res.data) {\n            if (getQuery === 'failedPushes') {\n              setUnpushed(res.data);\n              setUnpushedIsLoaded(true);\n              setUnpulledIsLoaded(false);\n              setIgnoredIsLoaded(false);\n              setError(null);\n            } else if (getQuery === 'failedPulls') {\n              setUnpulled(res.data);\n              setUnpulledIsLoaded(true);\n              setUnpushedIsLoaded(false);\n              setIgnoredIsLoaded(false);\n              setError(null);\n            } else if (getQuery === 'ignoredOrders') {\n              setIgnored(res.data);\n              setIgnoredIsLoaded(true);\n              setUnpulledIsLoaded(false);\n              setUnpushedIsLoaded(false);\n              setError(null);\n            }\n          } else if (res.name) {\n            setError({\n              name: res.name,\n              message: res.message\n            });\n          }\n        }\n      }, err => {\n        console.error({\n          err\n        });\n\n        if (mounted) {\n          setError(err);\n          setUnpulledIsLoaded(true);\n          setUnpushedIsLoaded(true);\n          setIgnoredIsLoaded(true);\n        }\n      });\n      return () => mounted = false;\n    }\n  }, [getQuery, query]); // Set the query path.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (id === 'order-details' && getQuery !== 'failedPushes') setQuery('failedPushes');else setQuery('failedPulls');\n    }\n\n    return () => mounted = false;\n  }, [id, getQuery]); // Set the loggedIn and loggedInUser variables.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      setloggedIn(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n    }\n\n    return () => mounted = false;\n  }, []);\n  return !loggedIn ?\n  /*#__PURE__*/\n  // Redirect the user to the sign-in page when not logged in.\n  // <div className=\"signin-error\">You must sign in to access this resource.</div>\n  _jsxDEV(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        // id,\n        action: 'Sign In',\n        message: 'Please sign in.'\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this) : error ?\n  /*#__PURE__*/\n  // Render the error when there's an error.\n  _jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: error === null || error === void 0 ? void 0 : error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this) : loggedInUser && (loggedInUser.restrictions.pages === 'None' || !loggedInUser.restrictions.pages.includes('Failed Orders')) ? // Render the page.\n  getQuery ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"failedPulls\",\n          value: \"failedPulls\",\n          onClick: e => handleClick(e),\n          children: \"Failed to Pull\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"failedPushes\",\n          value: \"failedPushes\",\n          onClick: e => handleClick(e),\n          children: \"Failed to Push\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"inactive-button\",\n          id: \"ignoredOrders\",\n          value: \"ignoredOrders\",\n          onClick: e => handleClick(e),\n          children: \"Ignored Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }, this), getQuery === 'failedPulls' ? /*#__PURE__*/_jsxDEV(Unpulled, {\n      data: unpulled,\n      error: error,\n      isLoaded: unpulledIsLoaded,\n      getQuery: getQuery,\n      postPath: postPath,\n      recall: recallApi,\n      order: order,\n      action: action,\n      callerId: id,\n      click: click,\n      restrictedActions: restrictedActions.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this) : getQuery === 'failedPushes' ? /*#__PURE__*/_jsxDEV(Unpushed, {\n      data: unpushed,\n      error: error,\n      isLoaded: unpushedIsLoaded,\n      getQuery: getQuery,\n      postPath: postPath,\n      recall: recallApi,\n      order: order,\n      action: action,\n      callerId: id,\n      click: click,\n      restrictedActions: restrictedActions.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this) : getQuery === 'ignoredOrders' ? /*#__PURE__*/_jsxDEV(Ignored, {\n      data: ignored,\n      error: error,\n      isLoaded: ignoredIsLoaded,\n      getQuery: getQuery,\n      postPath: postPath,\n      recall: recallApi,\n      order: order,\n      action: action,\n      callerId: id,\n      click: click,\n      restrictedActions: restrictedActions.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this) : '']\n  }, void 0, true) : null : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-denied\",\n    children: [\"Your profile's assigned role of \\\"\", loggedInUser.role, \"\\\" does not allow you to access this page.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 7\n  }, this);\n};\n\n_s(FailedOrders, \"pZ7sKDIWrdJ8Fj150dIGWNZ25gI=\", false, function () {\n  return [useLocation];\n});\n\n_c = FailedOrders;\nexport default FailedOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"FailedOrders\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-orders/failed-orders.js"],"names":["React","useEffect","useState","useRef","useLocation","Redirect","getOrders","Unpulled","Unpushed","Ignored","FailedOrders","params","state","order","postPath","action","id","getQuery","setGetQuery","click","setClick","currentPage","setCurrentPage","unpushed","setUnpushed","unpulled","setUnpulled","ignored","setIgnored","error","setError","unpulledIsLoaded","setUnpulledIsLoaded","unpushedIsLoaded","setUnpushedIsLoaded","ignoredIsLoaded","setIgnoredIsLoaded","query","setQuery","loggedIn","setloggedIn","localStorage","getItem","parseInt","loggedInUser","setLoggedInUser","JSON","parse","restrictedActions","restrictions","actions","recallApi","newQuery","handleClick","event","preventDefault","chosenPage","target","value","activeButton","inactiveButton","document","getElementById","setAttribute","mounted","sessionStorage","then","res","data","name","message","err","console","pathname","pages","includes","e","current","role"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport { getOrders } from '../../hooks/get-order';\nimport Unpulled from './unpulled';\nimport Unpushed from './unpushed';\nimport Ignored from './ignored';\n\nconst FailedOrders = () => {\n  // Get state when passed from a link or redirect component.\n  const params = useLocation();\n  let state = null;\n  if (params) state = params.state;\n  if (state) var { order, postPath, action, id } = state; // This is for user-initiated actions, not the get-all-failed called.\n  \n  const [getQuery, setGetQuery] = useState('failedPulls');\n  const [click, setClick] = useState(false);\n  const [currentPage, setCurrentPage] = useState('');\n  const [unpushed, setUnpushed] = useState([]);\n  const [unpulled, setUnpulled] = useState([]);\n  const [ignored, setIgnored] = useState([]);\n  const [error, setError] = useState(null);\n  const [unpulledIsLoaded, setUnpulledIsLoaded] = useState(false);\n  const [unpushedIsLoaded, setUnpushedIsLoaded] = useState(false);\n  const [ignoredIsLoaded, setIgnoredIsLoaded] = useState(false);\n  const [query, setQuery] = useState(getQuery);\n  const [loggedIn, setloggedIn] = useState(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const restrictedActions = useRef(loggedInUser?.restrictions?.actions);\n\n  const recallApi = newQuery => {\n    if (newQuery === query) setQuery('');\n    if (newQuery !== query) setQuery(newQuery);\n  };\n\n  // Handle the clicking of a tab.\n  const handleClick = event => {\n    event.preventDefault();\n    const chosenPage = event.target.value;\n    let activeButton, inactiveButton;\n\n    setClick(true);\n\n    // setDate([\n    //   new Date().getDate(),\n    //   new Date().getMonth(),\n    //   new Date().getFullYear(),\n    //   new Date().getHours(),\n    //   new Date().getMinutes(),\n    //   new Date().getSeconds(),\n    // ]);    \n    // formatDate(date);\n    \n    setCurrentPage(chosenPage);\n\n    if (chosenPage) {\n      if (chosenPage === getQuery) setGetQuery(null);\n      else setGetQuery(chosenPage);\n  \n      activeButton = document.getElementById(chosenPage);\n      activeButton.setAttribute('class', 'active-button');\n\n      if (chosenPage === 'failedPulls') {\n        inactiveButton = document.getElementById('failedPushes');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('ignoredOrders');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      } else if (chosenPage === 'failedPushes') {\n        inactiveButton = document.getElementById('failedPulls');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('ignoredOrders');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      } else if (chosenPage === 'ignoredOrders') {\n        inactiveButton = document.getElementById('failedPulls');\n        inactiveButton.setAttribute('class', 'inactive-button');\n        inactiveButton = document.getElementById('failedPushes');\n        inactiveButton.setAttribute('class', 'inactive-button');\n      }\n    }\n  };\n\n  // Set the active and inactive tabs.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted && loggedIn) {\n      // setFormattedDate(formatDate(date));\n\n      // Set the active tab.\n      if (!click) {\n        // if (state) {\n        //   console.log({action});\n        //   if (action === 'Repush') setGetQuery('failedPushes'); // Failed pushes.\n        //   else if (action === 'Repull' || action === 'RepullAllowMismatch') setGetQuery('failedPulls'); // Failed pulls.\n        // }\n        if (getQuery) {\n          document.getElementById(getQuery).setAttribute('class', 'active-button');\n          document.getElementById(getQuery === 'failedPulls' ? 'failedPushes' : 'failedPulls').setAttribute('class', 'inactive-button');\n        }\n      } else {\n        if (!getQuery) setGetQuery(currentPage);\n        if (getQuery) {\n          document.getElementById(getQuery).setAttribute('class', 'active-button');\n          document.getElementById(getQuery === 'failedPulls' ? 'failedPushes' : 'failedPulls').setAttribute('class', 'inactive-button');\n        }\n      }\n\n      if (sessionStorage.getItem('action')) setClick(false);\n    }\n    return () => mounted = false;\n  }, [action, click, currentPage, getQuery, loggedIn, state]);\n  \n  // Get data from the db.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      getOrders(getQuery).then(\n        res => {\n          if (res) {\n            if (res.data) {\n              if (getQuery === 'failedPushes') {\n                setUnpushed(res.data);\n                setUnpushedIsLoaded(true);\n                setUnpulledIsLoaded(false);\n                setIgnoredIsLoaded(false);\n                setError(null);\n              } else if (getQuery === 'failedPulls') {\n                setUnpulled(res.data);\n                setUnpulledIsLoaded(true);\n                setUnpushedIsLoaded(false);\n                setIgnoredIsLoaded(false);\n                setError(null);\n              } else if (getQuery === 'ignoredOrders') {\n                setIgnored(res.data);\n                setIgnoredIsLoaded(true);\n                setUnpulledIsLoaded(false);\n                setUnpushedIsLoaded(false);\n                setError(null);\n              }\n            } else if (res.name) {\n              setError({name: res.name, message: res.message});\n            }\n          }\n        },\n        err => {\n          console.error({err});\n          if (mounted) {\n            setError(err);\n            setUnpulledIsLoaded(true);\n            setUnpushedIsLoaded(true);\n            setIgnoredIsLoaded(true);\n          }\n        }\n      );\n      return () => mounted = false;\n    }\n  }, [getQuery, query]);\n\n  // Set the query path.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (id === 'order-details' && getQuery !== 'failedPushes') setQuery('failedPushes');\n      else setQuery('failedPulls');\n    }\n    return () => mounted = false;\n  }, [id, getQuery]);\n\n  // Set the loggedIn and loggedInUser variables.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setloggedIn(localStorage.getItem('loggedIn') ? parseInt(localStorage.getItem('loggedIn')) : 0);\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return !loggedIn ? \n  ( // Redirect the user to the sign-in page when not logged in.\n    // <div className=\"signin-error\">You must sign in to access this resource.</div>\n    <Redirect to={\n      {\n        pathname: '/login',\n        state: {\n          // id,\n          action: 'Sign In',\n          message: 'Please sign in.'\n        },\n      }\n    }\n    />\n  )\n  : error ?\n  ( // Render the error when there's an error.\n    <div className=\"signin-error\">{error?.message}</div>\n  )\n  :\n  (\n    loggedInUser && (loggedInUser.restrictions.pages === 'None' || !loggedInUser.restrictions.pages.includes('Failed Orders')) ?\n    ( // Render the page.\n      getQuery ? (\n        <>\n          <div className='order-actions'>\n            <form>\n              <button id='failedPulls' value='failedPulls' onClick={(e) => handleClick(e)}>\n                Failed to Pull\n              </button>\n            </form>\n            <form>\n              <button id='failedPushes' value='failedPushes' onClick={(e) => handleClick(e)}>\n                Failed to Push\n              </button>\n            </form>\n            <form>\n              <button className=\"inactive-button\" id=\"ignoredOrders\" value=\"ignoredOrders\" onClick={(e) => handleClick(e)}>\n                Ignored Orders\n              </button>\n            </form>\n            {/* <p>\n              as of {formattedDate.day} {formattedDate.month} {formattedDate.year} at{' '}\n              {formattedDate.hour}:{formattedDate.minutes}:{formattedDate.seconds}{' '}\n              {formattedDate.amOrPm}\n            </p> */}\n          </div>\n          {getQuery === 'failedPulls' ? \n          (\n            <Unpulled\n              data={unpulled}\n              error={error}\n              isLoaded={unpulledIsLoaded}\n              getQuery={getQuery}\n              postPath={postPath}\n              recall={recallApi}\n              order={order}\n              action={action}\n              callerId={id}\n              click={click}\n              restrictedActions={restrictedActions.current}\n            />\n          ) : getQuery === 'failedPushes' ?\n          (\n            <Unpushed\n              data={unpushed}\n              error={error}\n              isLoaded={unpushedIsLoaded}\n              getQuery={getQuery}\n              postPath={postPath}\n              recall={recallApi}\n              order={order}\n              action={action}\n              callerId={id}\n              click={click}\n              restrictedActions={restrictedActions.current}\n            />\n          ) : getQuery === 'ignoredOrders' ?\n          (\n            <Ignored\n              data={ignored}\n              error={error}\n              isLoaded={ignoredIsLoaded}\n              getQuery={getQuery}\n              postPath={postPath}\n              recall={recallApi}\n              order={order}\n              action={action}\n              callerId={id}\n              click={click}\n              restrictedActions={restrictedActions.current}\n            />\n          ) : (\n            ''\n          )}\n        </>\n      ) : (\n        null\n      )  \n    )\n    :\n    (\n      <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser.role}\" does not allow you to access this page.</div>\n    )\n  )\n};\n\nexport default FailedOrders;\n"]},"metadata":{},"sourceType":"module"}