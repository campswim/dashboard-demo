{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/home/missing/bc-missing-items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getAllActiveItems, getAllErpItems } from '../../../hooks/get-dashboard';\nimport Missing from './missing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BcMissingItems = () => {\n  _s();\n\n  const [daysBack, setDaysBack] = useState(0);\n  const [missing, setMissing] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState('');\n  const [render, setRender] = useState(false);\n  const markets = useRef(['US', 'PH', 'CA']);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const daysBackInt = !isNaN(parseInt(daysBack)) ? parseInt(daysBack) : '';\n\n    if (daysBackInt && daysBack > 0) {\n      setRender(true);\n      setError(null);\n      document.getElementById('get-missing-bc-items').setAttribute('hidden', true);\n    } else setError('You must enter a positive whole number.');\n  }; // Retrieve the items missing from BC.\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted && render) {\n      // Get all items from the CRM.\n      getAllActiveItems(daysBack, markets.current).then( // args => days back, country.\n      res => {\n        var _res$data;\n\n        const allItems = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.getAllActiveItems;\n        const allItemsCount = allItems && Array.isArray(allItems) ? allItems.length : 0;\n\n        if (allItems && allItems.length > 0) {\n          const environment = null; // => 'Production'\n\n          getAllErpItems(allItems, markets.current, environment).then(res => {\n            var _res$data2, _erpItems$;\n\n            const erpItems = res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.getAllErpItems;\n            const erpItemsCount = erpItems ? erpItems.length : 0;\n            let error;\n            if (erpItemsCount === 1) error = (_erpItems$ = erpItems[0]) === null || _erpItems$ === void 0 ? void 0 : _erpItems$.Error;\n\n            if (error) {\n              setError(error);\n              setIsLoaded(true);\n            } else {\n              let allItemsByMarket = {},\n                  erpItemsByMarket = {},\n                  theMissing = {};\n              markets.current.forEach(market => {\n                allItemsByMarket[market] = [];\n                erpItemsByMarket[market] = [];\n                theMissing[market] = [];\n              });\n              allItems.forEach(item => allItemsByMarket[item.Country].push(item.ItemCode.toUpperCase()));\n\n              if (erpItemsCount && erpItemsCount !== allItemsCount) {\n                erpItems.forEach(item => erpItemsByMarket[item.Country].push(item.ItemCode.toUpperCase()));\n                markets.current.forEach(market => theMissing[market] = allItemsByMarket[market].filter(item => !erpItemsByMarket[market].includes(item)));\n              }\n\n              if (theMissing) {\n                setMissing(theMissing);\n                setIsLoaded(true);\n              }\n            }\n          }, err => {\n            console.error(err);\n            setError(err);\n          });\n        }\n      }, err => {\n        console.error(err);\n      });\n    }\n\n    return () => mounted = false;\n  }, [daysBack, render]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"missing-items-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: \"CRM Items Missing in the ERP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), isLoaded && missing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"days-back\",\n        children: [\"Days Back: \", daysBack]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"missing-items-cards\",\n        children: markets.current.map((market, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"missing-items-card\",\n          children: /*#__PURE__*/_jsxDEV(Missing, {\n            market: market,\n            count: !error && missing && missing[market].length > 0 ? missing[market].length : 0,\n            data: missing[market],\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : render && !isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading . . .\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : isLoaded && !missing ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"get-missing-bc-items\",\n        id: \"get-missing-bc-items\",\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"days-back\",\n          placeholder: \"Number of Days Back\",\n          onChange: e => setDaysBack(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"inactive-button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 20\n      }, this) : null]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BcMissingItems, \"dQ0YTxC4+bMAXE0hGQS0kwoB5S0=\");\n\n_c = BcMissingItems;\nexport default BcMissingItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"BcMissingItems\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/home/missing/bc-missing-items.js"],"names":["React","useState","useEffect","useRef","getAllActiveItems","getAllErpItems","Missing","BcMissingItems","daysBack","setDaysBack","missing","setMissing","isLoaded","setIsLoaded","error","setError","render","setRender","markets","handleSubmit","event","preventDefault","daysBackInt","isNaN","parseInt","document","getElementById","setAttribute","mounted","current","then","res","allItems","data","allItemsCount","Array","isArray","length","environment","erpItems","erpItemsCount","Error","allItemsByMarket","erpItemsByMarket","theMissing","forEach","market","item","Country","push","ItemCode","toUpperCase","filter","includes","err","console","map","key","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { getAllActiveItems, getAllErpItems } from '../../../hooks/get-dashboard';\nimport Missing from './missing';\n\nconst BcMissingItems = () => {\n  const [daysBack, setDaysBack] = useState(0);\n  const [missing, setMissing] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState('');\n  const [render, setRender] = useState(false);\n  const markets = useRef(['US', 'PH', 'CA']);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const daysBackInt = !isNaN(parseInt(daysBack)) ? parseInt(daysBack) : '';\n\n    if (daysBackInt && daysBack > 0) {\n      setRender(true);\n      setError(null);\n      document.getElementById('get-missing-bc-items').setAttribute('hidden', true);\n    } else setError('You must enter a positive whole number.');\n  };\n\n  // Retrieve the items missing from BC.\n  useEffect(() => {    \n    let mounted = true;\n\n    if (mounted && render) {\n      // Get all items from the CRM.\n      getAllActiveItems(daysBack, markets.current).then( // args => days back, country.\n        res => {\n          const allItems = res?.data?.getAllActiveItems;\n          const allItemsCount = allItems && Array.isArray(allItems) ? allItems.length : 0;\n          \n          if (allItems && allItems.length > 0) {\n            const environment = null; // => 'Production'\n\n            getAllErpItems(allItems, markets.current, environment).then(\n              res => {                \n                const erpItems = res?.data?.getAllErpItems;\n                const erpItemsCount = erpItems ? erpItems.length : 0;\n                let error;\n                if (erpItemsCount === 1) error = erpItems[0]?.Error;\n                if (error) {\n                  setError(error);\n                  setIsLoaded(true);\n                } else {\n                  let allItemsByMarket = {}, erpItemsByMarket = {}, theMissing = {};\n\n                  markets.current.forEach(market => {\n                    allItemsByMarket[market] = [];\n                    erpItemsByMarket[market] = [];\n                    theMissing[market] = [];\n                  });\n  \n                  allItems.forEach(item => allItemsByMarket[item.Country].push(item.ItemCode.toUpperCase()));\n    \n                  if (erpItemsCount && erpItemsCount !== allItemsCount) {                  \n                    erpItems.forEach(item => erpItemsByMarket[item.Country].push(item.ItemCode.toUpperCase()));\n                    markets.current.forEach(market => theMissing[market] = allItemsByMarket[market].filter(item => !erpItemsByMarket[market].includes(item)));\n                  }\n    \n                  if (theMissing) {\n                    setMissing(theMissing);\n                    setIsLoaded(true);\n                  }\n                }\n\n              },\n              err => {\n                console.error(err);\n                setError(err);\n              }\n            );\n          }\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    }\n\n    return () => mounted = false;\n  }, [daysBack, render]);\n    \n  return (\n    <div className=\"missing-items-container\">\n      <h3 className='section-title'>CRM Items Missing in the ERP</h3>\n      {isLoaded && missing ?\n      (\n        <>\n          <p className='days-back'>Days Back: {daysBack}</p>\n          <div className=\"missing-items-cards\">\n            {markets.current.map((market, key) => (\n              <div key={key} className=\"missing-items-card\">\n                <Missing market={market} count={!error && missing && missing[market].length > 0 ? missing[market].length: 0} data={missing[market]} error={error} />\n              </div>\n            ))}\n          </div>\n        </>\n      ) \n      : render && !isLoaded ? \n      (\n        <div className=\"loading\">Loading . . .</div> \n      ) \n      : isLoaded && !missing ?\n      (\n        null\n      )\n      :\n      (\n        <>\n          <form className=\"get-missing-bc-items\" id=\"get-missing-bc-items\" onSubmit={(e) => handleSubmit(e)}>\n            {/* <p>To see a list of items missing in Business Central, indicate the number of days back you'd like to pull item numbers from Exigo and click \"Submit.\"</p> */}\n            <input type='text' id=\"days-back\" placeholder=\"Number of Days Back\" onChange={(e) => setDaysBack(e.target.value)} />\n            <button className=\"inactive-button\" type=\"submit\">Submit</button>\n          </form>\n          {error ? <p className=\"error\">{error}</p> : null}\n        </>\n      )}\n    </div>\n)};\n\nexport default BcMissingItems;\n"]},"metadata":{},"sourceType":"module"}