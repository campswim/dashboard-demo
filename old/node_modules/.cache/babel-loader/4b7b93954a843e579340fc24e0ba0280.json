{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/users/user.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport formatHeaders from '../../hooks/format-headers';\nimport useSort from '../../hooks/sort-data';\nimport Checkbox from '../../components/checkbox';\nimport User from '../../hooks/get-user';\nimport selectElementContents from '../../hooks/select-all';\nimport getType from '../../hooks/get-type';\nimport logChange from '../../hooks/log-change';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = props => {\n  _s();\n\n  const [tabs, setTabs] = useState([]);\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRoles, setUserRoles] = useState([]);\n  const [activeTab, setActiveTab] = useState('All Roles');\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedInUser, setLoggedInUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [newValue, setNewValue] = useState({});\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [roleName, setRoleName] = useState(null);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const messageRef = useRef('');\n  const clickLocation = useRef('');\n  const clickCount = useRef(0);\n  const prevElement = useRef('');\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n\n  const changeDate = useRef('');\n  const updated = useRef(false);\n  const user = new User();\n  let tableHeaders = props.users.length > 0 ? Object.keys(props.users[0]) : [],\n      formattedHeaders = [];\n  let {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(users, 'users');\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'Name' === name || 'Role' === name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]); // Format the table headers.\n\n  if (tableHeaders.length > 0) {\n    // Remove RoleId from the headers before formatting.\n    tableHeaders = tableHeaders.filter(header => header !== 'RoleId');\n    formattedHeaders = formatHeaders(tableHeaders, 'Error');\n  } // // Handles the selection and formatting of the page's tabs.\n\n\n  const handleTabClick = (event, next) => {\n    let chosenButtonValue;\n\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n    setIsChecked([]);\n  }; // Handles the toggling of the select-all checkbox.\n\n\n  const handleSelectAll = event => {\n    const tab = event.target.value;\n    const activeItems = items.filter(item => item.RoleId === activeTab || 0 === activeTab);\n    if (tab === activeTab) setAllChecked(!allChecked);\n    setIsChecked(activeItems.map(item => item.Id));\n    setAllChecked(!allChecked);\n    if (allChecked) setIsChecked([]);\n  }; // Handles the toggling of individual checkboxes.\n\n\n  const handleSelect = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  }; // Handles the action initiated by the user.\n\n\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } else if (isChecked.length !== 0) {\n      const ids = [];\n      const filteredRows = users.filter(row => isChecked.includes(row.Id));\n      filteredRows.forEach(row => ids.push(row.Id)); // This feature deletes the user.\n\n      if (ids.length > 0) {\n        user.deleteUser(path, ids).then(res => {\n          if (res.data) {\n            // IDs of deleted users are being returned but not currently used.\n            setError('');\n            setShowMessage(true); // Log the user out if all users are deleted or if the signed-in user is deleted.\n\n            if (res.data.deleteUser.length === users.length) {\n              // All users were deleted.\n              user.signOut().then(() => {\n                localStorage.setItem('user', null);\n                props.liftData(0, 'user', false);\n              }, err => {\n                console.error(err);\n              });\n            } else {\n              // Not all users were deleted: if the user deleted herself, sign her out.\n              const match = ids.filter(id => id === loggedInUser.id);\n\n              if (match.length === 1) {\n                user.signOut().then(() => {\n                  localStorage.setItem('user', null);\n                  props.liftData(0, 'user', false);\n                }, err => {\n                  console.error(err);\n                });\n              }\n            }\n          } else if (res.name) {\n            console.error('Error: ', res.message);\n            setError(res.message);\n            setShowMessage(true);\n          }\n\n          props.recall(path);\n        }, err => {\n          console.error({\n            err\n          });\n          setError(err.message);\n        });\n      }\n\n      setIsChecked([]);\n      setAllChecked(false);\n    } else alert('Please tick a user.'); // Store a flag in storage to indicate that a new action has been initiated.\n\n\n    sessionStorage.setItem('action', true);\n  }; // Generates the message to show the user after an action has been initiated.\n\n\n  const message = action => {\n    let pastTenseVerb;\n\n    if (action && action === 'Delete User') {\n      pastTenseVerb = 'deleted';\n    }\n\n    if (action && action === 'Add User') {\n      pastTenseVerb = 'added';\n    }\n\n    return pastTenseVerb;\n  }; // Helps manage the editing of editable fields.\n\n\n  const handleClick = (event, row, column) => {\n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue;\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (clickLocation.current !== event.id) {\n      clickCount.current = 0;\n\n      if (element) {\n        var _prevElement$current, _prevElement$current2;\n\n        // Restore the element's previous value if unclicked.\n        const id = prevElement ? prevElement === null || prevElement === void 0 ? void 0 : (_prevElement$current = prevElement.current) === null || _prevElement$current === void 0 ? void 0 : _prevElement$current.id : '';\n        const value = id ? prevElement === null || prevElement === void 0 ? void 0 : (_prevElement$current2 = prevElement.current) === null || _prevElement$current2 === void 0 ? void 0 : _prevElement$current2.value : '';\n        const tempElement = id ? document.getElementById(id) : '';\n        if (tempElement && value) document.getElementById(id).innerHTML = value;\n        prevElement.current = '';\n      }\n    }\n\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n\n    if (defaultValue !== currentValue) {\n      // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n      element.textContent = defaultValue;\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('contentEditable', 'true');\n      updated.current = false;\n    }\n\n    clickCount.current++;\n    clickLocation.current = event.id;\n  }; // Handles user edits.\n\n\n  const handleBlur = (userId, row, column, event, idx) => {\n    var _event$target, _event$target$dataset, _event$target2, _event$target3;\n\n    let prevValue = 'Role' !== column ? event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$dataset = _event$target.dataset) === null || _event$target$dataset === void 0 ? void 0 : _event$target$dataset.defaultValue : prevElement.current;\n    const newValue = 'Role' !== column ? event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.textContent : event === null || event === void 0 ? void 0 : (_event$target3 = event.target) === null || _event$target3 === void 0 ? void 0 : _event$target3.textContent;\n    const table = 'Users';\n    const element = 'Role' !== column ? document.getElementById(`${column}-${row}`) : null;\n\n    if (prevValue === newValue) {\n      if (element) element.removeAttribute('contentEditable');\n      return;\n    } // Get the column's configuration from the DB.\n\n\n    if (table && column) {\n      getType(table, column).then(res => {\n        dataType.current = res; // Check the input against type and length.\n\n        if (JSON.stringify(dataType.current) !== '{}') {\n          if (newValue) {\n            const columnName = dataType.current.ColumnName;\n\n            if (columnName === column) {\n              const type = dataType.current.DataType;\n              let typeNewValue = 'Role' === column ? typeof tabs.indexOf(newValue) : typeof newValue;\n\n              if (type === typeNewValue) {\n                if (dataType.current.MaxLength > newValue.length || !dataType.current.MaxLength || -1 === dataType.current.MaxLength) {\n                  if (prevValue !== newValue) {\n                    if (!/<\\/?[a-z][\\s\\S]*>/i.test(newValue)) {\n                      // Check that no html is being introduced.\n                      items[row][column] = newValue ? newValue : 'None';\n                      setNewValue({\n                        id: userId,\n                        row,\n                        column,\n                        prevValue,\n                        newValue: newValue,\n                        idx\n                      });\n\n                      if (element) {\n                        element.textContent = newValue ? newValue : 'None';\n                      }\n                    } else {\n                      element.setAttribute('style', 'color: red');\n                      element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                      element.scrollIntoViewIfNeeded({\n                        behavior: 'smooth',\n                        inline: 'start'\n                      });\n                    }\n                  }\n                }\n              } else {\n                element.setAttribute('style', 'color: red');\n                element.textContent = `The new value's datatype (${typeof newValue}) doesn't match the databases's data type (${type}).`;\n                element.scrollIntoViewIfNeeded({\n                  behavior: 'smooth',\n                  inline: 'start'\n                });\n              }\n            }\n          } else {\n            element.textContent = prevValue;\n          }\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    }\n  }; // Close the modal on click of the X.\n\n\n  const closeModal = () => {\n    setShowDetails(false);\n    setIsChecked([]);\n    clickCount.current = 0;\n  }; // Toggle the roles' dropdown menu.\n\n\n  const toggleSelect = key => {\n    const options = document.getElementById(`select-role-${key}`).children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.toggle('show-option');\n          } else {\n            option.classList.toggle('fade-default');\n          }\n        }\n      });\n    }\n\n    setRoleName(null);\n  }; // Capture the user's role.\n\n\n  const handleRoleSelect = (event, idx, key, item, caller) => {\n    const roleName = event.target.textContent;\n    const options = document.getElementById(`select-role-${key}`).children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.remove('show-option');\n          } else {\n            option.classList.remove('fade-default');\n          }\n        }\n      });\n    }\n\n    setRoleName({\n      key,\n      roleName\n    });\n    prevElement.current = item.Role;\n    handleBlur(item.Id, caller === 'modal' ? idx : key, 'Role', event, idx);\n  }; // Send updates to the db for edited fields.\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const element = newValue.column !== 'Role' ? document.getElementById(`${newValue.column}-${newValue.row}`) : document.getElementById(`user-role-${newValue.row}`);\n      let userRole;\n\n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        const operation = 'userUpdate';\n        const user = new User();\n\n        if ('Role' === newValue.column) {\n          userRoles.forEach(role => {\n            if (role.Role === newValue.newValue) userRole = role.Id;\n          });\n        }\n\n        user.updateUser(operation, newValue.id, newValue.column, userRole ? userRole : newValue.newValue).then(res => {\n          if (res.data) {\n            var _res$data$operation;\n\n            let value = res.data[operation] ? res.data[operation][newValue.column] : '';\n            const valueType = 10; // 10 === 'string' in the AppParamsValueType table.\n\n            const error = (_res$data$operation = res.data[operation]) === null || _res$data$operation === void 0 ? void 0 : _res$data$operation.Error;\n            if (typeof value === 'number') value = JSON.stringify(value);\n\n            if (value) {\n              if ('Role' === newValue.column) {\n                userRoles.forEach(role => {\n                  if (role.Id === value) value = role.Role;\n                });\n              }\n\n              if (value === newValue.newValue) {\n                if (element) {\n                  if (loggedInUser.id === newValue.id) {\n                    // The current user is being modified and needs to be updated in storage.\n                    if (newValue.column === 'Role') loggedInUser.role = newValue.newValue;else if (newValue.column === 'Name') loggedInUser.name = newValue.newValue;\n                    setLoggedInUser(loggedInUser);\n                    localStorage.setItem('user', JSON.stringify(loggedInUser));\n                  }\n\n                  element.removeAttribute('contentEditable');\n                  element.setAttribute('data-default-value', newValue.newValue);\n                  element.scrollIntoViewIfNeeded({\n                    behavior: 'smooth',\n                    inline: 'start'\n                  });\n                  element.classList.toggle('edited');\n                  setTimeout(() => {\n                    element.classList.toggle('edited');\n                    updated.current = true;\n                  }, 2000);\n                } // Log the change to the database.\n\n\n                logChange('Users', newValue.column, newValue.id, newValue.prevValue, newValue.newValue, valueType).then(res => {\n                  if (res.data) {\n                    var _res$data, _res$data$logChange;\n\n                    const changeDateTime = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$logChange = _res$data.logChange) === null || _res$data$logChange === void 0 ? void 0 : _res$data$logChange.DateTime;\n                    changeDate.current = changeDateTime;\n                    setNewValue({});\n                  } else if (res.errors) {\n                    console.error(res.errors);\n                  }\n                }, err => {\n                  console.error({\n                    err\n                  });\n                });\n              }\n            } else if (error) {\n              element.textContent = error + ' Please correct your input.';\n              element.setAttribute('style', 'color:red');\n            }\n          } else if (res.name) {\n            setError(res.name);\n          }\n        }, err => {\n          console.error({\n            err\n          });\n        });\n      }\n    }\n\n    return () => mounted = false;\n  }, [loggedInUser, newValue, userRoles]); // Get the tabs for the page.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (items.length > 0) {\n        // const tabsObject = {'All Roles': 0};\n        const tabsArray = ['All Roles'];\n        let tempTabs = [...items]; // Sort the array by role ID, so that the tabs will always be in the same order.\n\n        tempTabs.sort((a, b) => {\n          const one = parseInt(a.RoleId);\n          const two = parseInt(b.RoleId);\n          return one > two ? 1 : -1;\n        }); // Reduce the array of tempTabs to unique ones only.\n\n        tempTabs.forEach(item => {\n          // tabsObject[item.Role] = item.RoleId;\n          if (!tabsArray.includes(item.Role)) tabsArray.push(item.Role);\n        }); // setTabs(Object.entries(tabsObject));\n\n        setTabs(tabsArray);\n      }\n\n      ;\n    }\n\n    return () => mounted = false;\n  }, [items]); // Populate and update users from props.\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) if (props.users) setUsers(props.users);\n    return () => mounted = false;\n  }, [props.users]); // Toggle allChecked.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (users && users.length !== 0 && isChecked.length === users.length) setAllChecked(true);else setAllChecked(false);\n    }\n\n    return () => mounted = false;\n  }, [isChecked, users]); // Set the active tab, when it changes.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]); // Set the active-tab count.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (Array.isArray(props.users)) {\n        let counter = 0;\n        props.users.forEach(user => {\n          if (user.Role === activeTab || activeTab === 'All Roles') counter++;\n        });\n        setActiveTabCount(counter);\n      }\n    }\n\n    return () => mounted = false;\n  }, [props.users, activeTab]); // Show or hide optional actions.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';\n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : '';\n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n\n    return () => mounted = false;\n  }, [isChecked]); // Set loggedInUser from local storage.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      setLoggedInUser(JSON.parse(localStorage.getItem('user')));\n    }\n\n    return () => mounted = false;\n  }, []); // Set the activeTabIndex variable.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const activeTabKeyValue = Object.entries(tabs).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n\n    return () => mounted = false;\n  }, [activeTab, tabs]); // Set showMessage after a user has been added.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.action === 'Add User') setShowMessage(true);\n    }\n\n    return () => mounted = false;\n  }, [props.action]); // Update the vpWidth variable.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n\n      window.addEventListener('resize', handleResize);\n    }\n\n    return () => mounted = false;\n  }, [vpWidth]); // Get the user's available roles for sign-up.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const user = new User(); // Must create a new user inside the useEffect, otherwise the code runs ad nauseum.\n\n      user.getUserRoles().then(res => {\n        if (res.data) {\n          var _res$data2;\n\n          const userRoles = (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.getUserRoles;\n          setUserRoles(userRoles);\n        } else if (res.name) {\n          setError(res.message);\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    }\n\n    return () => mounted = false;\n  }, []);\n  return props.error ?\n  /*#__PURE__*/\n  // Render the sign-in error.\n  _jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 543,\n    columnNumber: 5\n  }, this) : !props.isLoaded ?\n  /*#__PURE__*/\n  // Render the loading message.\n  _jsxDEV(\"div\", {\n    className: \"loading unprocessed\",\n    children: \"Loading . . . \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 547,\n    columnNumber: 5\n  }, this) : (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.role) === 'Admin' ? // If the user has the correct permissions, load the page.\n  items ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-actions user\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        activeTab: activeTab,\n        tabIndex: activeTabIndex,\n        tabs: tabs,\n        handleClick: handleTabClick,\n        caller: 'user'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [tabs.length > 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Tab: \", `${activeTabIndex + 1} of ${tabs.length}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 32\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Selected: \", isChecked.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Count: \", activeTabCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-links\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"link\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/login',\n              state: {\n                user: {\n                  id: '',\n                  action: 'Add User',\n                  role: activeTab !== 'All Roles' ? activeTab : ''\n                }\n              }\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 17\n          }, this), activeLink ? /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/users',\n              state: {\n                id: isChecked,\n                action: 'Delete User'\n              }\n            },\n            onClick: () => action('deleteUser'),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 19\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 13\n      }, this), !activeLink && error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 15\n      }, this) : '', (props.action === 'Delete User' || props.action === 'Add User') && showMessage ? !error ? props.message && !activeLink ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 19\n      }, this) : props.id && !activeLink ? !Array.isArray(props.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User #\", props.id, \" has been \", message(props.action), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 21\n      }, this) : props.id.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User #\", props.id[0], \" has been \", message(props.action), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following users have been \", message(props.action), \":\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.id.map((id, key) => props.id.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 31\n          }, this) : key === props.id.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 49\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 23\n      }, this) : '' : props.id ? !Array.isArray(props.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following error occurred when user #\", props.id, \" was \", message(props.action), \": \", error, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 19\n      }, this) : props.id.length > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There was a \\\"\", error, \"\\\" error when the following IDs were \", message(props.action), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.id.map((id, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following error occurred when user #\", props.id[0], \" was \", message(props.action), \": \", error, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 21\n      }, this) : '' : '', showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n        details: orderDetails,\n        closeModal: closeModal,\n        handleBlur: handleBlur,\n        handleClick: handleClick,\n        toggleSelect: toggleSelect,\n        handleRoleSelect: handleRoleSelect,\n        getClassNamesFor: getClassNamesFor,\n        caller: {\n          users: 'user'\n        },\n        userRoles: userRoles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 26\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: [items.length !== 0 ? /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"checkbox-th\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: \"selectAll\",\n              handleClick: handleSelectAll,\n              isChecked: allChecked,\n              value: activeTab ? activeTab : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 17\n          }, this), formattedHeaders.map((header, key) => vpWidth < 1280 ? header !== 'Email' && header !== 'Date Registered' && header !== 'Last Login' && header !== 'Logged In' && header !== 'Failed Attempts' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 21\n          }, this) : null : /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Failed Attempts' ? 'Failed' : header === 'Date Registered' ? 'Registered' : header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map((item, key) => {\n          return item.Role === activeTab || activeTab === 'All Roles' ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"select-one\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                type: \"checkbox\",\n                name: item.Id,\n                value: item.Id ? item.Id : '',\n                handleClick: handleSelect,\n                isChecked: isChecked.includes(item.Id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"user-link\",\n              children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: () => action('showDetails', item, key),\n                children: item.Id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 23\n              }, this) : item.Id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"editable\",\n              suppressContentEditableWarning: \"true\",\n              \"data-default-value\": item.Name,\n              id: `Name-${key}`,\n              onBlur: e => handleBlur(item.Id, key, 'Name', e),\n              onClick: e => handleClick(e.target, key, 'Name'),\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.Email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"editable select-container\",\n              id: `select-role-${key}`,\n              name: \"role\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"role-option default\",\n                id: `user-role-${key}`,\n                \"data-default-value\": item.Role,\n                onClick: () => toggleSelect(key),\n                children: roleName && parseInt(roleName.key) === key ? roleName.roleName : item.Role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 21\n              }, this), userRoles.map((value, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"role-option\",\n                id: `Role-${idx}`,\n                \"data-value\": value.Id,\n                onClick: e => handleRoleSelect(e, idx, key, item),\n                children: value.Role\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.DateRegistered ? new Date(parseInt(item.DateRegistered)).toISOString().split('T')[0] : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.LastLogin ? new Date(parseInt(item.LastLogin)).toISOString().split('T')[0] : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.LoggedIn ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.FailedAttempts ? item.FailedAttempts : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Active ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 17\n          }, this) : null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No users have been registered for this service.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 812,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-denied\",\n    children: [\"Your profile's assigned role of \\\"\", loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.role, \"\\\" does not allow you to access this page.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 817,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"fsaA9fZTzGjm7sX77thlanQTloM=\", false, function () {\n  return [useSort];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/users/user.js"],"names":["React","useState","useEffect","useRef","useCallback","Link","formatHeaders","useSort","Checkbox","User","selectElementContents","getType","logChange","OrderDetails","Tabs","Users","props","tabs","setTabs","allChecked","setAllChecked","isChecked","setIsChecked","users","setUsers","userRoles","setUserRoles","activeTab","setActiveTab","activeTabIndex","setActiveTabIndex","activeTabCount","setActiveTabCount","activeLink","setActiveLink","showMessage","setShowMessage","error","setError","loggedInUser","setLoggedInUser","JSON","parse","localStorage","getItem","newValue","setNewValue","orderDetails","setOrderDetails","showDetails","setShowDetails","roleName","setRoleName","vpWidth","setVpWidth","window","innerWidth","messageRef","clickLocation","clickCount","prevElement","dataType","changeDate","updated","user","tableHeaders","length","Object","keys","formattedHeaders","items","requestSort","sortConfig","getClassNamesFor","name","className","key","direction","undefined","filter","header","handleTabClick","event","next","chosenButtonValue","preventDefault","target","value","handleClick","handleSelectAll","tab","activeItems","item","RoleId","map","Id","handleSelect","checked","action","path","idx","scrollTo","top","behavior","ids","filteredRows","row","includes","forEach","push","deleteUser","then","res","data","signOut","setItem","liftData","err","console","match","id","message","recall","alert","sessionStorage","pastTenseVerb","column","currentValue","textContent","defaultValue","dataset","element","document","getElementById","current","tempElement","innerHTML","removeAttribute","setAttribute","handleBlur","userId","prevValue","table","stringify","columnName","ColumnName","type","DataType","typeNewValue","indexOf","MaxLength","test","scrollIntoViewIfNeeded","inline","closeModal","toggleSelect","options","children","values","option","classList","toggle","handleRoleSelect","caller","remove","Role","mounted","userRole","operation","role","updateUser","valueType","Error","setTimeout","changeDateTime","DateTime","errors","tabsArray","tempTabs","sort","a","b","one","parseInt","two","Array","isArray","counter","getAttribute","replace","activeTabKeyValue","entries","job","handleResize","addEventListener","getUserRoles","isLoaded","pathname","state","split","join","Name","e","Email","DateRegistered","Date","toISOString","LastLogin","LoggedIn","FailedAttempts","Active"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport formatHeaders from '../../hooks/format-headers';\nimport useSort from '../../hooks/sort-data';\nimport Checkbox from '../../components/checkbox';\nimport User from '../../hooks/get-user';\nimport selectElementContents from '../../hooks/select-all';\nimport getType from '../../hooks/get-type';\nimport logChange from '../../hooks/log-change';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\n\nconst Users = (props) => {\n  const [tabs, setTabs] = useState([]);\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRoles, setUserRoles] = useState([]);\n  const [activeTab, setActiveTab] = useState('All Roles');\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedInUser, setLoggedInUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [newValue, setNewValue] = useState({});\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [roleName, setRoleName] = useState(null);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const messageRef = useRef('');\n  const clickLocation = useRef('');\n  const clickCount = useRef(0);\n  const prevElement = useRef('');\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const updated = useRef(false);\n  const user = new User();\n  let tableHeaders = props.users.length > 0 ? Object.keys(props.users[0]) : [], formattedHeaders = [];\n  let { items, requestSort, sortConfig } = useSort(users, 'users');\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'Name' === name || 'Role' === name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n\n  // Format the table headers.\n  if (tableHeaders.length > 0) {\n    // Remove RoleId from the headers before formatting.\n    tableHeaders = tableHeaders.filter(header => header !== 'RoleId');\n    formattedHeaders = formatHeaders(tableHeaders, 'Error');\n  }\n\n  // // Handles the selection and formatting of the page's tabs.\n  const handleTabClick = (event, next) => {\n    let chosenButtonValue;\n\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n    setIsChecked([]);\n  };\n  \n  // Handles the toggling of the select-all checkbox.\n  const handleSelectAll = event => {\n    const tab = event.target.value;\n    const activeItems = items.filter(item => item.RoleId === activeTab || 0 === activeTab);\n    \n    if (tab === activeTab) setAllChecked(!allChecked);\n    setIsChecked(activeItems.map(item => item.Id));\n    setAllChecked(!allChecked);\n    if (allChecked) setIsChecked([]);\n  };\n\n  // Handles the toggling of individual checkboxes.\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n  \n  // Handles the action initiated by the user.\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      const ids = [];\n      const filteredRows = users.filter(row => isChecked.includes(row.Id));\n      filteredRows.forEach(row => ids.push(row.Id));\n\n      // This feature deletes the user.\n      if (ids.length > 0) {\n        user.deleteUser(path, ids).then(\n          res => {\n            if (res.data) {// IDs of deleted users are being returned but not currently used.\n              setError('');\n              setShowMessage(true);\n\n              // Log the user out if all users are deleted or if the signed-in user is deleted.\n              if (res.data.deleteUser.length === users.length) { // All users were deleted.\n                user.signOut().then(\n                  () => {\n                    localStorage.setItem('user', null);\n                    props.liftData(0, 'user', false);\n                  },\n                  err => { console.error(err); }\n                )\n              } else { // Not all users were deleted: if the user deleted herself, sign her out.\n                const match = ids.filter(id => id === loggedInUser.id);\n                \n                if (match.length === 1) {\n                  user.signOut().then(\n                    () => { \n                      localStorage.setItem('user', null);\n                      props.liftData(0, 'user', false);  \n                     },\n                    err => { console.error(err); }\n                  )\n                }\n              }\n\n            } else if (res.name) {\n              console.error('Error: ', res.message);\n              setError(res.message);\n              setShowMessage(true);\n            }\n\n            props.recall(path);\n          },\n          err => {\n            console.error({err});\n            setError(err.message);\n          }\n        );\n      }\n\n      setIsChecked([]);\n      setAllChecked(false);\n    } else alert('Please tick a user.');\n    \n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n\n  // Generates the message to show the user after an action has been initiated.\n  const message = (action) => {\n    let pastTenseVerb;\n    if (action && action === 'Delete User') {\n      pastTenseVerb = 'deleted';\n    }\n    if (action && action === 'Add User') {\n      pastTenseVerb = 'added';\n    }\n    return pastTenseVerb;\n  };\n\n  // Helps manage the editing of editable fields.\n  const handleClick = (event, row, column) => {\n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue;\n    const element = document.getElementById(`${column}-${row}`);\n    \n    if (clickLocation.current !== event.id) {\n      clickCount.current = 0;\n      if (element) { // Restore the element's previous value if unclicked.\n        const id = prevElement ? prevElement?.current?.id : '';\n        const value = id ? prevElement?.current?.value : '';\n        const tempElement = id ? document.getElementById(id) : '';\n        if (tempElement && value) document.getElementById(id).innerHTML = value;\n        prevElement.current = '';\n      }\n    }\n    \n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    if (defaultValue !== currentValue) { // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n      element.textContent = defaultValue;\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('contentEditable', 'true');\n      updated.current = false;\n    }\n\n    clickCount.current++;\n    clickLocation.current = event.id;\n  };\n\n  // Handles user edits.\n  const handleBlur = (userId, row, column, event, idx) => {\n    let prevValue = 'Role' !== column ? event?.target?.dataset?.defaultValue : prevElement.current;\n    const newValue = 'Role' !== column ? event?.target?.textContent : event?.target?.textContent;\n    const table = 'Users';\n    const element = 'Role' !== column ? document.getElementById(`${column}-${row}`) : null;\n\n    if (prevValue === newValue) {\n      if (element) element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(\n        res => {\n          dataType.current = res;\n\n          // Check the input against type and length.\n          if (JSON.stringify(dataType.current) !== '{}') {\n            if (newValue) {\n              const columnName = dataType.current.ColumnName;\n              if (columnName === column) {\n                const type = dataType.current.DataType;\n                let typeNewValue = 'Role' === column ? typeof tabs.indexOf(newValue) : typeof newValue;\n                                        \n                if (type === typeNewValue) {\n                  if (dataType.current.MaxLength > newValue.length || !dataType.current.MaxLength || -1 === dataType.current.MaxLength) {\n                    if (prevValue !== newValue) {\n                      if (!/<\\/?[a-z][\\s\\S]*>/i.test(newValue)) { // Check that no html is being introduced.\n                        items[row][column] = newValue ? newValue : 'None'; \n                        setNewValue({ id: userId, row, column, prevValue, newValue: newValue, idx });\n\n                        if (element) {\n                          element.textContent = newValue ? newValue : 'None';\n                        }\n                      } else {\n                        element.setAttribute('style', 'color: red');\n                        element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                        element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                      }\n                    } \n                  }\n                } else {\n                  element.setAttribute('style', 'color: red');\n                  element.textContent = `The new value's datatype (${typeof newValue}) doesn't match the databases's data type (${type}).`;\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                }\n              }\n            } else {\n              element.textContent = prevValue;\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    setIsChecked([]);\n    clickCount.current = 0;\n  };\n\n  // Toggle the roles' dropdown menu.\n  const toggleSelect = (key) => {\n    const options = document.getElementById(`select-role-${key}`).children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.toggle('show-option');\n          } else {\n            option.classList.toggle('fade-default')\n          }\n        }\n      });\n    }\n\n    setRoleName(null);\n  };\n  \n  // Capture the user's role.\n  const handleRoleSelect = (event, idx, key, item, caller) => {\n    const roleName = event.target.textContent;\n    const options = document.getElementById(`select-role-${key}`).children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.remove('show-option');\n          } else {\n            option.classList.remove('fade-default')\n          }\n        }\n      });\n    }\n\n    setRoleName({key, roleName});\n    prevElement.current = item.Role;\n    handleBlur(item.Id, caller === 'modal' ? idx : key, 'Role', event, idx);\n  };\n  \n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = newValue.column !== 'Role' ? document.getElementById(`${newValue.column}-${newValue.row}`) : document.getElementById(`user-role-${newValue.row}`);\n      let userRole;\n      \n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        const operation = 'userUpdate';\n        const user = new User();\n\n        if ('Role' === newValue.column) {\n          userRoles.forEach(role => {\n            if (role.Role === newValue.newValue) userRole = role.Id;\n          });\n        }\n        \n        user.updateUser(operation, newValue.id, newValue.column, userRole ? userRole : newValue.newValue).then(\n          res => {\n            if (res.data) {\n              let value = res.data[operation] ? res.data[operation][newValue.column] : '';\n              const valueType = 10; // 10 === 'string' in the AppParamsValueType table.\n              const error = res.data[operation]?.Error;\n    \n              if (typeof value === 'number') value = JSON.stringify(value);\n              if (value) {\n                if ('Role' === newValue.column) {\n                  userRoles.forEach(role => {\n                    if (role.Id === value) value = role.Role;\n                  });\n                }\n                \n                if (value === newValue.newValue) {\n                  if (element) {\n                    if (loggedInUser.id === newValue.id) { // The current user is being modified and needs to be updated in storage.\n                      if (newValue.column === 'Role') loggedInUser.role = newValue.newValue;\n                      else if (newValue.column === 'Name') loggedInUser.name = newValue.newValue;\n\n                      setLoggedInUser(loggedInUser);\n                      localStorage.setItem('user', JSON.stringify(loggedInUser));\n                    }\n                    \n                    element.removeAttribute('contentEditable');\n                    element.setAttribute('data-default-value', newValue.newValue);\n                    element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                    element.classList.toggle('edited');\n                    \n                    setTimeout(() => {\n                      element.classList.toggle('edited');\n                      updated.current = true;\n                    }, 2000);\n                  }\n\n                  // Log the change to the database.\n                  logChange('Users', newValue.column, newValue.id, newValue.prevValue, newValue.newValue, valueType).then(\n                    res => {\n                      if (res.data) {\n                        const changeDateTime = res.data?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                        setNewValue({}); \n                      } else if (res.errors) {\n                        console.error(res.errors);\n                      }\n                    },\n                    err => { console.error({err}); }\n                  );\n                }\n              } else if (error) {\n                element.textContent = error + ' Please correct your input.';\n                element.setAttribute('style', 'color:red');\n              }\n            } else if (res.name) {\n              setError(res.name);\n            }\n          },\n          err => { console.error({err}) }\n        );\n      }\n    }\n    \n    return () => mounted = false;\n  }, [loggedInUser, newValue, userRoles]);\n\n  // Get the tabs for the page.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (items.length > 0) {\n        // const tabsObject = {'All Roles': 0};\n        const tabsArray = ['All Roles'];\n        let tempTabs = [...items];\n                \n        // Sort the array by role ID, so that the tabs will always be in the same order.\n        tempTabs.sort((a, b) => {\n          const one = parseInt(a.RoleId);\n          const two = parseInt(b.RoleId);\n        \n          return one > two ? 1 : -1;\n        });\n  \n        // Reduce the array of tempTabs to unique ones only.\n        tempTabs.forEach(item => {\n          // tabsObject[item.Role] = item.RoleId;\n          if (!tabsArray.includes(item.Role)) tabsArray.push(item.Role);\n        });\n  \n        // setTabs(Object.entries(tabsObject));\n        setTabs(tabsArray);\n\n      };\n    }\n    return () => mounted = false;\n  }, [items]);\n  \n  // Populate and update users from props.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) if (props.users) setUsers(props.users);\n    return () => mounted = false;\n  }, [props.users]);\n  \n  // Toggle allChecked.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (users && users.length !== 0 && isChecked.length === users.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, users]);\n  \n  // Set the active tab, when it changes.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]);\n  \n  // Set the active-tab count.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (Array.isArray(props.users)) {\n        let counter = 0;\n        props.users.forEach(user => {\n          if (user.Role === activeTab || activeTab === 'All Roles') counter++;\n        });\n        setActiveTabCount(counter);\n      }\n    }\n    return () => mounted = false;\n  }, [props.users, activeTab]);\n  \n  // Show or hide optional actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';        \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n  \n  // Set loggedInUser from local storage.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setLoggedInUser(JSON.parse(localStorage.getItem('user')));\n    }\n    return () => mounted = false;\n  }, []);\n\n  // Set the activeTabIndex variable.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const activeTabKeyValue = Object.entries(tabs).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n\n    return () => mounted = false;\n  }, [activeTab, tabs]);\n\n  // Set showMessage after a user has been added.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.action === 'Add User') setShowMessage(true)\n    }\n    return () => mounted = false;\n  }, [props.action]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n  \n  // Get the user's available roles for sign-up.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const user = new User(); // Must create a new user inside the useEffect, otherwise the code runs ad nauseum.\n      user.getUserRoles().then(\n        res => {\n          if (res.data) {\n            const userRoles = res.data?.getUserRoles;\n            setUserRoles(userRoles);\n          } else if (res.name) {\n            setError(res.message);\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return props.error ? \n  ( // Render the sign-in error.\n    <div className=\"signin-error\">{props.error.message}</div>\n  ) \n  : !props.isLoaded ? \n  (  // Render the loading message.\n    <div className=\"loading unprocessed\">Loading . . . </div>\n  ) \n  : loggedInUser?.role === 'Admin' ?\n  ( // If the user has the correct permissions, load the page.\n    items ?\n    (\n      <div className='user-container'>\n        <div className=\"order-actions user\">\n          <Tabs activeTab={activeTab} tabIndex={activeTabIndex} tabs={tabs} handleClick={handleTabClick} caller={'user'} />\n        </div>\n        <div className=\"order-info\">\n          <div className='stats'>\n            {tabs.length > 1 ? <p className=\"order-info-number-display\">Tab: {`${activeTabIndex + 1} of ${tabs.length}`}</p> : null}\n            <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n            <p className=\"order-info-number-display\">Count: {activeTabCount}</p>\n          </div>\n            <div className='action-links'>\n              <form className='link'>\n                <Link\n                  to={{\n                    pathname: '/login',\n                    state: {\n                      user: {\n                        id: '',\n                        action: 'Add User',\n                        role: activeTab !== 'All Roles' ? activeTab : ''\n                      }\n                    },\n                  }}\n                  >\n                  Add\n                </Link>\n                {activeLink ? (\n                  <Link\n                    to={{\n                      pathname: '/users',\n                      state: {\n                        id: isChecked,\n                        action: 'Delete User',\n                      },\n                    }}\n                    onClick={() => action('deleteUser')}\n                  >\n                    Delete\n                  </Link>\n                ) : (\n                  ''\n                )}\n              </form>\n            </div>\n            {!activeLink && error ? (\n              <div>Error: {error}</div>\n            ) : (\n              ''\n            )}\n            {(props.action === 'Delete User' || props.action === 'Add User') && showMessage ? \n            (\n              !error ? \n              (\n                props.message && !activeLink ?\n                (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>{props.message}</p>\n                  </div>\n                ) : props.id && !activeLink ? \n                (\n                  !Array.isArray(props.id) ? \n                  (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>User #{props.id} has been {message(props.action)}.</p>\n                    </div>\n                  ) \n                  : \n                  (\n                    props.id.length === 1 ? \n                    (\n                      <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                        <p>User #{props.id[0]} has been {message(props.action)}.</p>\n                      </div>\n                    ) \n                    : \n                    (\n                      <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                        <p>The following users have been {message(props.action)}:&nbsp;</p>\n                        <div className='orders-in-array'>\n                          {props.id.map((id, key) => (\n                            props.id.length === 1 ?\n                            (\n                              <p key={key}>{id}</p>\n                            )\n                            : key === props.id.length - 1 ?\n                            (\n                              <p key={key}>{id}.</p>\n                            )\n                            :\n                            (\n                              <p key={key}>{id},<span>&nbsp;</span></p>\n                            )\n                            ))}\n                        </div>\n                      </div>\n                    )\n                  )\n                ) : ( \n                  '' \n                )\n              ) \n              : // There was an error in the action.\n              ( \n              props.id ? \n              (\n                !Array.isArray(props.id) ? \n                (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>The following error occurred when user #{props.id} was {message(props.action)}: {error}.</p>\n                  </div>\n                ) : (\n                  props.id.length > 1 ?\n                  (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>There was a \"{error}\" error when the following IDs were {message(props.action)}:</p>\n                      <div className='orders-in-array'>\n                        {props.id.map((id, key) => (\n                          <p key={key}>{id}</p>))}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>The following error occurred when user #{props.id[0]} was {message(props.action)}: {error}.</p>\n                    </div>\n                  )\n                )\n              ) : (\n                ''\n              )\n            )\n          ) : (\n            ''\n          )}\n          {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} handleBlur={handleBlur} handleClick={handleClick} toggleSelect={toggleSelect} handleRoleSelect={handleRoleSelect} getClassNamesFor={getClassNamesFor} caller={{ users: 'user' }} userRoles={userRoles} /> : null}\n        </div>\n        <table>\n          <thead>\n            <tr className=\"header-row\">\n              {items.length !== 0 ? (\n                <th className='checkbox-th'>\n                  <Checkbox\n                    type='checkbox'\n                    name='selectAll'\n                    handleClick={handleSelectAll}\n                    isChecked={allChecked}\n                    value={activeTab ? activeTab : ''}\n                  />\n                </th>\n              ) : (\n                <th className='hidden-checkbox'></th>\n              )}\n              {formattedHeaders.map((header, key) => (\n                vpWidth < 1280 ?\n                (\n                  header !== 'Email' && header !== 'Date Registered' && header !== 'Last Login' && header !== 'Logged In' && header !== 'Failed Attempts' ?\n                  (\n                    <th\n                      key={key}\n                      onClick={() => requestSort(header.split(' ').join(''))}\n                      className={getClassNamesFor(header.split(' ').join(''))}\n                    >\n                      {header}\n                    </th>\n                  )\n                  :\n                  (\n                    null\n                  )\n                )\n                :\n                (\n                  <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header === 'Failed Attempts' ? 'Failed' : header === 'Date Registered' ? 'Registered' : header}\n                  </th>\n                )\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, key) => {\n              return item.Role === activeTab || activeTab === 'All Roles' ? \n              (\n                <tr key={key}>\n                  <td className='select-one'>\n                    <Checkbox\n                      type='checkbox'\n                      name={item.Id}\n                      value={item.Id ? item.Id : ''}\n                      handleClick={handleSelect}\n                      isChecked={isChecked.includes(item.Id)}\n                    />\n                  </td>\n                  <td className='user-link'>\n                    {vpWidth < 1280 ? (\n                      <Link to='#' onClick={() => action('showDetails', item, key)} >\n                        {item.Id}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.Id\n                    )}\n                  </td>\n                  <td\n                    className=\"editable\"\n                    suppressContentEditableWarning=\"true\"\n                    data-default-value={item.Name}\n                    id={`Name-${key}`}\n                    onBlur={(e) => handleBlur(item.Id, key, 'Name', e)}\n                    onClick={(e) => handleClick(e.target, key, 'Name')}\n                  >\n                    {item.Name}\n                  </td>\n                  <td className='desktop'>{item.Email}</td>\n                  <td className='editable select-container' id={`select-role-${key}`} name='role'>\n                    <p \n                      className='role-option default' \n                      id={`user-role-${key}`}\n                      data-default-value={item.Role}\n                      onClick={() => toggleSelect(key)}\n                    >\n                      {roleName && parseInt(roleName.key) === key ? roleName.roleName : item.Role}\n                    </p>\n                    {userRoles.map((value, idx) => (\n                      <p \n                        className='role-option' \n                        id={`Role-${idx}`}\n                        key={idx} \n                        data-value={value.Id} \n                        onClick={(e) => handleRoleSelect(e, idx, key, item)}\n                      >\n                        {value.Role}\n                      </p>\n                    ))}\n                  </td>\n                  <td className='desktop'>\n                    {item.DateRegistered ? new Date(parseInt(item.DateRegistered)).toISOString().split('T')[0] : 'N/A'}\n                  </td>\n                  <td className='desktop'>\n                    {item.LastLogin ? new Date(parseInt(item.LastLogin)).toISOString().split('T')[0] : 'N/A'}\n                  </td>\n                  <td className='desktop'>{item.LoggedIn ? 'Yes' : 'No'}</td>\n                  <td className='desktop'>{item.FailedAttempts ? item.FailedAttempts : 0}</td>\n                  <td>{item.Active ? 'Yes' : 'No'}</td>\n                </tr>\n              ) : (\n                null\n              )\n              })}\n          </tbody>\n        </table>\n      </div>\n    ) \n    : \n    ( \n      <p>No users have been registered for this service.</p>\n    )\n  ) \n  : \n  (\n    <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser?.role}\" does not allow you to access this page.</div>\n  )\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}