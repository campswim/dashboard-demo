{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/hooks/get-actions.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport actions from '../actions';\n\n// Create the action buttons.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getActions = (tab, restrictions, isChecked, takeAction, isCheckedNums, dismissed) => {\n  const links = restrictions === 'All' ? null : actions[tab].map((action, key) => !restrictions.includes(action.title) ? tab === 'jobError' || tab === 'paymentError' ? dismissed && dismissed.length <= 0 ? key === 0 ? /*#__PURE__*/_jsxDEV(Link, {\n    to: {\n      pathname: action.pathname,\n      state: {\n        order: isChecked,\n        orderNum: isCheckedNums,\n        postPath: action.postPath,\n        action: action.action,\n        id: action.actionId\n      }\n    },\n    onClick: () => takeAction(action.onClickArg, isChecked),\n    children: action.title\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 19\n  }, this) : null : key === 1 ? /*#__PURE__*/_jsxDEV(Link, {\n    to: {\n      pathname: action.pathname,\n      state: {\n        order: isChecked,\n        orderNum: isCheckedNums,\n        postPath: action.postPath,\n        action: action.action,\n        id: action.actionId\n      }\n    },\n    onClick: () => takeAction(action.onClickArg, isChecked),\n    children: action.title\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 19\n  }, this) : null : /*#__PURE__*/_jsxDEV(Link, {\n    to: {\n      pathname: action.pathname,\n      state: {\n        order: isChecked,\n        orderNum: isCheckedNums,\n        postPath: action.postPath,\n        action: action.action,\n        id: action.actionId\n      }\n    },\n    onClick: () => takeAction(action.onClickArg, isChecked),\n    children: action.title\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 15\n  }, this) : null);\n  return links;\n};\nexport default getActions;","map":{"version":3,"names":["React","Link","actions","jsxDEV","_jsxDEV","getActions","tab","restrictions","isChecked","takeAction","isCheckedNums","dismissed","links","map","action","key","includes","title","length","to","pathname","state","order","orderNum","postPath","id","actionId","onClick","onClickArg","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/hooks/get-actions.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport actions from '../actions';\n\n  // Create the action buttons.\n  const getActions = (tab, restrictions, isChecked, takeAction, isCheckedNums, dismissed) => {\n    const links = (\n      restrictions === 'All' ? \n      (\n        null\n      )\n      :\n      (\n        actions[tab].map((action, key) => (\n          !restrictions.includes(action.title) ?\n          (\n            tab === 'jobError' || tab === 'paymentError' ?\n            (\n              dismissed && dismissed.length <= 0 ?\n              (\n                key === 0 ? \n                (\n                  <Link\n                    to={{\n                      pathname: action.pathname,\n                      state: {\n                        order: isChecked,\n                        orderNum: isCheckedNums,\n                        postPath: action.postPath,\n                        action: action.action,\n                        id: action.actionId\n                      },\n                    }}\n                    key={key}\n                    onClick={() => takeAction(action.onClickArg, isChecked)}\n                  >\n                    {action.title}\n                  </Link>\n                )\n                :\n                (\n                  null\n                )\n              )\n              :\n              (\n                key === 1 ?\n                (\n                  <Link\n                  to={{\n                    pathname: action.pathname,\n                    state: {\n                      order: isChecked,\n                      orderNum: isCheckedNums,\n                      postPath: action.postPath,\n                      action: action.action,\n                      id: action.actionId\n                    },\n                  }}\n                  key={key}\n                  onClick={() => takeAction(action.onClickArg, isChecked)}\n                >\n                  {action.title}\n                </Link>\n                )\n                :\n                (\n                  null\n                )\n              )\n            )\n            :\n            (\n              <Link\n                to={{\n                  pathname: action.pathname,\n                  state: {\n                    order: isChecked,\n                    orderNum: isCheckedNums,\n                    postPath: action.postPath,\n                    action: action.action,\n                    id: action.actionId\n                  },\n                }}\n                key={key}\n                onClick={() => takeAction(action.onClickArg, isChecked)}\n              >\n                {action.title}\n              </Link>\n            )\n          )\n          :\n          (\n            null\n          )\n        ))\n      )\n    );\n    \n    return links;\n  };\n\n  export default getActions;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,OAAO,MAAM,YAAY;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGA,CAACC,GAAG,EAAEC,YAAY,EAAEC,SAAS,EAAEC,UAAU,EAAEC,aAAa,EAAEC,SAAS,KAAK;EACzF,MAAMC,KAAK,GACTL,YAAY,KAAK,KAAK,GAEpB,IAAI,GAIJL,OAAO,CAACI,GAAG,CAAC,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,KAC3B,CAACR,YAAY,CAACS,QAAQ,CAACF,MAAM,CAACG,KAAK,CAAC,GAElCX,GAAG,KAAK,UAAU,IAAIA,GAAG,KAAK,cAAc,GAE1CK,SAAS,IAAIA,SAAS,CAACO,MAAM,IAAI,CAAC,GAEhCH,GAAG,KAAK,CAAC,gBAEPX,OAAA,CAACH,IAAI;IACHkB,EAAE,EAAE;MACFC,QAAQ,EAAEN,MAAM,CAACM,QAAQ;MACzBC,KAAK,EAAE;QACLC,KAAK,EAAEd,SAAS;QAChBe,QAAQ,EAAEb,aAAa;QACvBc,QAAQ,EAAEV,MAAM,CAACU,QAAQ;QACzBV,MAAM,EAAEA,MAAM,CAACA,MAAM;QACrBW,EAAE,EAAEX,MAAM,CAACY;MACb;IACF,CAAE;IAEFC,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACK,MAAM,CAACc,UAAU,EAAEpB,SAAS,CAAE;IAAAqB,QAAA,EAEvDf,MAAM,CAACG;EAAK,GAHRF,GAAG;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIJ,CAAC,GAIP,IACD,GAIDlB,GAAG,KAAK,CAAC,gBAEPX,OAAA,CAACH,IAAI;IACLkB,EAAE,EAAE;MACFC,QAAQ,EAAEN,MAAM,CAACM,QAAQ;MACzBC,KAAK,EAAE;QACLC,KAAK,EAAEd,SAAS;QAChBe,QAAQ,EAAEb,aAAa;QACvBc,QAAQ,EAAEV,MAAM,CAACU,QAAQ;QACzBV,MAAM,EAAEA,MAAM,CAACA,MAAM;QACrBW,EAAE,EAAEX,MAAM,CAACY;MACb;IACF,CAAE;IAEFC,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACK,MAAM,CAACc,UAAU,EAAEpB,SAAS,CAAE;IAAAqB,QAAA,EAEvDf,MAAM,CAACG;EAAK,GAHRF,GAAG;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIJ,CAAC,GAIL,IAEH,gBAID7B,OAAA,CAACH,IAAI;IACHkB,EAAE,EAAE;MACFC,QAAQ,EAAEN,MAAM,CAACM,QAAQ;MACzBC,KAAK,EAAE;QACLC,KAAK,EAAEd,SAAS;QAChBe,QAAQ,EAAEb,aAAa;QACvBc,QAAQ,EAAEV,MAAM,CAACU,QAAQ;QACzBV,MAAM,EAAEA,MAAM,CAACA,MAAM;QACrBW,EAAE,EAAEX,MAAM,CAACY;MACb;IACF,CAAE;IAEFC,OAAO,EAAEA,CAAA,KAAMlB,UAAU,CAACK,MAAM,CAACc,UAAU,EAAEpB,SAAS,CAAE;IAAAqB,QAAA,EAEvDf,MAAM,CAACG;EAAK,GAHRF,GAAG;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIJ,CACP,GAID,IAEH,CAEJ;EAED,OAAOrB,KAAK;AACd,CAAC;AAED,eAAeP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}