{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/settings/map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport getType from '../../hooks/get-type';\nimport selectElementContents from '../../hooks/select-all';\nimport logChange from '../../hooks/log-change';\nimport { updateSettings } from '../../hooks/get-settings';\nimport formatHeaders from '../../hooks/format-headers';\nimport OrderDetails from '../../components/order-details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = props => {\n  _s();\n\n  const [orderDetails, setOrderDetails] = useState({});\n  const [newValue, setNewValue] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n\n  const changeDate = useRef('');\n  const clickCount = useRef(0);\n  const clickLocation = useRef('');\n  const updated = useRef(false);\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(props.mapData ? props.mapData : '', 'map');\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'SourceWarehouse' === name || 'SourceShipMethod' === name || 'DestinationWarehouse' === name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n  const error = items && items.length === 1 && items[0].Error ? items[0].Error : ''; // Format the headers.\n\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), 'Error') : ''; // Handle a user clicking in editable fields.\n\n  const handleClick = (event, row, column) => {\n    let currentValue = event === null || event === void 0 ? void 0 : event.textContent;\n    let defaultValue = event.dataset.defaultValue ? event.dataset.defaultValue : 'None';\n    const element = document.getElementById(`${column}-${row}`);\n    if (clickLocation.current !== event.id) clickCount.current = 0;\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n\n    clickCount.current++;\n    clickLocation.current = event.id;\n\n    if (element) {\n      if (defaultValue && defaultValue !== currentValue) {\n        // Replace errors in entries with the previous text.\n        element.textContent = defaultValue;\n        element.removeAttribute('style');\n      } else {\n        element.setAttribute('contentEditable', 'true'); // Make the element editable.\n      }\n    }\n  }; // Handle user edits.\n\n\n  const handleBlur = (id, row, column, event) => {\n    var _event$target;\n\n    const prevVal = event.target.dataset.defaultValue ? event.target.dataset.defaultValue : 'None';\n    const newVal = event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.textContent;\n    const table = 'Maps';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (prevVal === newVal) {\n      element.removeAttribute('contentEditable');\n      return;\n    } // Get the column's configuration from the DB.\n\n\n    if (table && column) {\n      getType(table, column).then(res => {\n        if (res) dataType.current = res; // Check the input against type and length.\n\n        if (JSON.stringify(dataType.current) !== '{}') {\n          if (newVal || newVal === '') {\n            const columnName = dataType.current.ColumnName;\n\n            if (columnName === column) {\n              const type = dataType.current.DataType;\n              let typeNewValue = columnName === 'ValueType' ? parseInt(newVal) : newVal;\n              typeNewValue = Number.isNaN(typeNewValue) ? typeNewValue : typeof typeNewValue;\n\n              if (type === typeNewValue) {\n                if (dataType.current.MaxLength > newVal.length || !dataType.current.MaxLength) {\n                  if (prevVal !== newVal) {\n                    if (!/<\\/?[a-z][\\s\\S]*>/i.test(newVal)) {\n                      // Check that no html is being introduced.\n                      element.textContent = newVal ? newVal : 'None';\n                      items[row][column] = newVal ? newVal : 'None';\n                      setNewValue({\n                        id: parseInt(id),\n                        row,\n                        column,\n                        prevVal,\n                        newVal\n                      });\n                    } else {\n                      element.setAttribute('style', 'color: red');\n                      element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                      element.scrollIntoViewIfNeeded({\n                        behavior: 'smooth',\n                        inline: 'start'\n                      });\n                    }\n                  }\n                }\n              } else {\n                element.setAttribute('style', 'color: red');\n                element.textContent = `The new value's datatype (${typeof newVal}) doesn't match the databases's data type (${type}).`;\n                element.scrollIntoViewIfNeeded({\n                  behavior: 'smooth',\n                  inline: 'start'\n                });\n              }\n            }\n          } else {\n            element.textContent = prevVal;\n          }\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    }\n  }; // Handles the action chosen by the user, if applicable.\n\n\n  const action = (path, item) => {\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } //Store a flag in storage to indicate that a new action has been initiated.\n\n\n    sessionStorage.setItem('action', true);\n  }; // Close the modal on click of the X.\n\n\n  const closeModal = () => {\n    setShowDetails(false);\n    clickCount.current = 0;\n  }; // Send updates to the db for edited fields.\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const element = document.getElementById(`${newValue.column}-${newValue.row}`);\n\n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        // Update the settings's value.\n        updateSettings('maps', parseInt(newValue.id), newValue.column, newValue.newVal).then(res => {\n          if (res.data) {\n            var _res$data, _res$data2, _res$data2$mapsUpdate;\n\n            let value = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.mapsUpdate[newValue.column];\n            value = null === value ? '' : value;\n            const error = (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$mapsUpdate = _res$data2.mapsUpdate) === null || _res$data2$mapsUpdate === void 0 ? void 0 : _res$data2$mapsUpdate.Error;\n            const userId = JSON.parse(localStorage.getItem('user')).id;\n            if (typeof value === 'number') value = JSON.stringify(value);\n\n            if (value === newValue.newVal) {\n              if (element) {\n                const modifiedAtElement = document.getElementById(`ModifiedAt-${newValue.row}`);\n                const modifiedByElement = document.getElementById(`ModifiedBy-${newValue.row}`);\n                element.removeAttribute('contentEditable');\n                modifiedAtElement.textContent = new Date().toISOString().split('T')[0];\n                modifiedByElement.textContent = props.user.name;\n                element.setAttribute('data-default-value', newValue.newVal ? newValue.newVal : 'None');\n                element.scrollIntoViewIfNeeded({\n                  behavior: 'smooth',\n                  inline: 'start'\n                });\n                element.classList.toggle('edited');\n                setTimeout(() => {\n                  element.classList.toggle('edited');\n                  updated.current = true;\n                }, 2000);\n              } // Log the change to the database.\n\n\n              logChange('AppParams', newValue.column, userId, newValue.prevVal, newValue.newVal, dataType.current.DataType).then(res => {\n                if (res.data) {\n                  var _res$data3, _res$data3$logChange;\n\n                  const changeDateTime = (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$logChange = _res$data3.logChange) === null || _res$data3$logChange === void 0 ? void 0 : _res$data3$logChange.DateTime;\n                  changeDate.current = changeDateTime;\n                } else if (res.errors) {\n                  console.error(res.errors);\n                }\n              }, err => {\n                console.error({\n                  err\n                });\n              });\n            } else if (error && null !== error.message) {\n              element.textContent = error.message + ' Please correct your input.';\n              element.setAttribute('style', 'color:red');\n            }\n          }\n        }, err => {\n          console.error({\n            err\n          });\n        });\n      }\n    }\n\n    return () => mounted = false;\n  }, [items, newValue, props]); // Update the vpWidth variable.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n\n      window.addEventListener('resize', handleResize);\n    }\n\n    return () => mounted = false;\n  });\n  return props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this) : !props.isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading . . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [error.name, \": \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this) : props.role === 'Admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info no-actions\",\n      children: showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n        details: orderDetails,\n        closeModal: closeModal,\n        handleBlur: handleBlur,\n        handleClick: handleClick,\n        getClassNamesFor: getClassNamesFor,\n        caller: {\n          settings: 'maps'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 24\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-table-large\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"map-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"header-row\",\n            children: headers ? headers.map((header, key) => vpWidth < 1280 ? header !== 'Company' && header !== 'Erp Company Id' && header !== 'Source Warehouse' && header !== 'Source Ship Method' && header !== 'Destination Warehouse' && header !== 'Iso Currency Code' && header !== 'Erp Currency Code' && header !== 'Processing Sequence' && header !== 'Activated At' && header !== 'Deactivated At' ? /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: getClassNamesFor(header.split(' ').join('')),\n              children: header === 'Iso Country Code' ? 'Country' : header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 23\n            }, this) : null : header !== 'Activated At' ? /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: getClassNamesFor(header.split(' ').join('')),\n              children: header === 'Iso Country Code' ? 'Country' : header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header === 'Source Warehouse' ? 'Src WH' : header === 'Source Ship Method' ? 'Src Ship' : header === 'Destination Warehouse' ? 'Dest WH' : header === 'Iso Currency Code' ? 'ISO $' : header === 'Erp Currency Code' ? 'ERP $' : header === 'Processing Sequence' ? 'Seq' : header === 'Activated At' ? 'Activated' : header === 'Deactivated At' ? 'Deactivated' : header\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 23\n            }, this) : null) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"map-id\",\n              children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: () => action('showDetails', item),\n                children: item.Id ? item.Id : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this) : item.Id ? item.Id : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.IsoCountryCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.ErpCompanyId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"editable desktop\",\n              suppressContentEditableWarning: \"true\",\n              \"data-default-value\": item.SourceWarehouse // id={`${item.SourceWarehouse}-${key}`}\n              ,\n              id: `SourceWarehouse-${key}`,\n              onBlur: e => handleBlur(item.Id, key, 'SourceWarehouse', e),\n              onClick: e => handleClick(e.target, key, 'SourceWarehouse'),\n              children: item.SourceWarehouse ? item.SourceWarehouse : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"editable desktop\",\n              suppressContentEditableWarning: \"true\",\n              \"data-default-value\": item.SourceShipMethod ? item.SourceShipMethod : 'None' // id={`${item.SourceShipMethod ? item.SourceShipMethod : 'None'}-${key}`}\n              ,\n              id: `SourceShipMethod-${key}`,\n              onBlur: e => handleBlur(item.Id, key, 'SourceShipMethod', e),\n              onClick: e => handleClick(e.target, key, 'SourceShipMethod'),\n              children: item.SourceShipMethod ? item.SourceShipMethod : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"editable desktop\",\n              suppressContentEditableWarning: \"true\",\n              \"data-default-value\": item.DestinationWarehouse // id={`${item.DestinationWarehouse}-${key}`}\n              ,\n              id: `DestinationWarehouse-${key}`,\n              onBlur: e => handleBlur(item.Id, key, 'DestinationWarehouse', e),\n              onClick: e => handleClick(e.target, key, 'DestinationWarehouse'),\n              children: item.DestinationWarehouse ? item.DestinationWarehouse : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.IsoCurrencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.ErpCurrencyCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.ProcessingSequence ? item.ProcessingSequence : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.DeactivatedAt ? new Date(parseInt(item.DeactivatedAt)).toISOString().split('T')[0] : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"date\",\n              id: `ModifiedAt-${key}`,\n              children: item.ModifiedAt ? new Date(parseInt(item.ModifiedAt)).toISOString().split('T')[0] : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"by-user\",\n              id: `ModifiedBy-${key}`,\n              children: item.ModifiedBy ? item.ModifiedBy : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-denied\",\n    children: [\"Your profile's assigned role of \\\"\", props.role, \"\\\" does not allow you to access this page.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"K2xPbAnM0+UCTP1HV4yVYFywT8U=\", false, function () {\n  return [useSort];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/settings/map.js"],"names":["React","useState","useEffect","useCallback","useRef","Link","useSort","getType","selectElementContents","logChange","updateSettings","formatHeaders","OrderDetails","Map","props","orderDetails","setOrderDetails","newValue","setNewValue","showDetails","setShowDetails","vpWidth","setVpWidth","window","innerWidth","dataType","changeDate","clickCount","clickLocation","updated","items","requestSort","sortConfig","mapData","getClassNamesFor","name","className","key","direction","undefined","error","length","Error","headers","Object","keys","handleClick","event","row","column","currentValue","textContent","defaultValue","dataset","element","document","getElementById","current","id","removeAttribute","setAttribute","handleBlur","prevVal","target","newVal","table","then","res","JSON","stringify","columnName","ColumnName","type","DataType","typeNewValue","parseInt","Number","isNaN","MaxLength","test","scrollIntoViewIfNeeded","behavior","inline","err","console","action","path","item","scrollTo","top","sessionStorage","setItem","closeModal","mounted","data","value","mapsUpdate","userId","parse","localStorage","getItem","modifiedAtElement","modifiedByElement","Date","toISOString","split","user","classList","toggle","setTimeout","changeDateTime","DateTime","errors","message","handleResize","addEventListener","isLoaded","role","settings","map","header","join","Id","IsoCountryCode","ErpCompanyId","SourceWarehouse","e","SourceShipMethod","DestinationWarehouse","IsoCurrencyCode","ErpCurrencyCode","ProcessingSequence","DeactivatedAt","ModifiedAt","ModifiedBy"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport getType from '../../hooks/get-type';\nimport selectElementContents from '../../hooks/select-all';\nimport logChange from '../../hooks/log-change';\nimport { updateSettings } from '../../hooks/get-settings';\nimport formatHeaders from '../../hooks/format-headers';\nimport OrderDetails from '../../components/order-details';\n\nconst Map = props => {  \n  const [orderDetails, setOrderDetails] = useState({});\n  const [newValue, setNewValue] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const clickCount = useRef(0);\n  const clickLocation = useRef('');\n  const updated = useRef(false);\n\n  const { items, requestSort, sortConfig } = useSort(props.mapData ? props.mapData : '', 'map');\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'SourceWarehouse' === name || 'SourceShipMethod' === name || 'DestinationWarehouse' === name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n  const error = items && items.length === 1 && items[0].Error ? items[0].Error : '';\n  \n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), 'Error') : '';\n\n  // Handle a user clicking in editable fields.\n  const handleClick = (event, row, column) => {    \n    let currentValue = event?.textContent;\n    let defaultValue = event.dataset.defaultValue ? event.dataset.defaultValue : 'None';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (clickLocation.current !== event.id) clickCount.current = 0;\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    clickCount.current++;\n    clickLocation.current = event.id;\n\n    if (element) {\n      if (defaultValue && defaultValue !== currentValue) { // Replace errors in entries with the previous text.\n        element.textContent = defaultValue;\n        element.removeAttribute('style');\n      } else {\n        element.setAttribute('contentEditable', 'true'); // Make the element editable.\n      }\n    }\n  }\n\n  // Handle user edits.\n  const handleBlur = (id, row, column, event) => {\n    const prevVal = event.target.dataset.defaultValue ? event.target.dataset.defaultValue : 'None';\n    const newVal = event?.target?.textContent;\n    const table = 'Maps';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (prevVal === newVal) {\n      element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(\n        res => {\n          if (res) dataType.current = res;\n                    \n          // Check the input against type and length.\n          if (JSON.stringify(dataType.current) !== '{}') {\n            if (newVal || newVal === '') {\n              const columnName = dataType.current.ColumnName;\n\n              if (columnName === column) {\n                const type = dataType.current.DataType;\n                let typeNewValue = columnName === 'ValueType' ? parseInt(newVal) : newVal;\n                typeNewValue = Number.isNaN(typeNewValue) ? typeNewValue : typeof typeNewValue;\n\n                if (type === typeNewValue) {\n                  if (dataType.current.MaxLength > newVal.length || !dataType.current.MaxLength) {\n                    if (prevVal !== newVal) {\n                      if (!/<\\/?[a-z][\\s\\S]*>/i.test(newVal)) { // Check that no html is being introduced.\n                        element.textContent = newVal ? newVal : 'None';\n                        items[row][column] = newVal ? newVal : 'None';\n                        setNewValue({ id: parseInt(id), row, column, prevVal, newVal });\n                      } else {\n                        element.setAttribute('style', 'color: red');\n                        element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                        element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                      }\n                    } \n                  }\n                } else {\n                  element.setAttribute('style', 'color: red');\n                  element.textContent = `The new value's datatype (${typeof newVal}) doesn't match the databases's data type (${type}).`;\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                }\n              }\n            } else {\n              element.textContent = prevVal;\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n  };\n\n  // Handles the action chosen by the user, if applicable.\n  const action = (path, item) => {\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    \n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    clickCount.current = 0;\n  };\n\n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById(`${newValue.column}-${newValue.row}`);\n      \n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        // Update the settings's value.\n        updateSettings('maps', parseInt(newValue.id), newValue.column, newValue.newVal).then(\n          res => {\n            if (res.data) {\n              let value = res.data?.mapsUpdate[newValue.column];\n              value = null === value ? '' : value;\n              const error = res.data?.mapsUpdate?.Error;\n              const userId = JSON.parse(localStorage.getItem('user')).id;\n  \n              if (typeof value === 'number') value = JSON.stringify(value);\n              if (value === newValue.newVal) {\n                if (element) {\n                  const modifiedAtElement = document.getElementById(`ModifiedAt-${newValue.row}`);\n                  const modifiedByElement = document.getElementById(`ModifiedBy-${newValue.row}`);\n                  \n                  element.removeAttribute('contentEditable');\n                  modifiedAtElement.textContent = new Date().toISOString().split('T')[0];\n                  modifiedByElement.textContent = props.user.name;\n                  element.setAttribute('data-default-value', newValue.newVal ? newValue.newVal : 'None');\n\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                  element.classList.toggle('edited');\n\n                  setTimeout(() => {\n                    element.classList.toggle('edited');\n                    updated.current = true;\n                  }, 2000);\n                }\n                                \n                // Log the change to the database.\n                logChange('AppParams', newValue.column, userId, newValue.prevVal, newValue.newVal, dataType.current.DataType).then(\n                  res => {\n                    if (res.data) {\n                      const changeDateTime = res.data?.logChange?.DateTime;\n                      changeDate.current = changeDateTime;\n                    } else if (res.errors) {\n                      console.error(res.errors);\n                    }\n                  },\n                  err => { console.error({err}); }\n                );\n              } else if (error && null !== error.message) {\n                element.textContent = error.message + ' Please correct your input.';\n                element.setAttribute('style', 'color:red');\n              }\n            }\n          },\n          err => { console.error({err}) }\n        );\n      }\n    }\n\n    return () => mounted = false;\n  }, [items, newValue, props]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  });\n  \n  return props.error ? \n  ( \n    <div className=\"signin-error\">{props.error.message}</div>\n  ) \n  : !props.isLoaded ? \n  ( \n    <div className=\"loading\">Loading . . .</div> \n  ) \n  : error ? \n  (\n    <div>\n      <p>{error.name}: {error.message}</p>\n    </div>\n  ) \n  : props.role === 'Admin' ?\n  (\n    <>\n      <div className=\"order-info no-actions\">\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} handleBlur={handleBlur} handleClick={handleClick} getClassNamesFor={getClassNamesFor} caller={{ settings: 'maps' }} /> : null}\n      </div>\n      <div className=\"map-table-large\">\n        <table className=\"map-table\">\n          <thead>\n            <tr className='header-row'>\n              {headers ? \n              (\n                headers.map((header, key) => (\n                  vpWidth < 1280 ?\n                  (\n                    header !== 'Company' && header !== 'Erp Company Id' && header !== 'Source Warehouse' && header !== 'Source Ship Method' && header !== 'Destination Warehouse' && header !== 'Iso Currency Code' && header !== 'Erp Currency Code' && header !== 'Processing Sequence' && header !== 'Activated At' && header !== 'Deactivated At' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header === 'Iso Country Code' ? 'Country' : header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                  :\n                  (\n                    header !== 'Activated At' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header === 'Iso Country Code' ? 'Country' : header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header === 'Source Warehouse' ? 'Src WH' : header === 'Source Ship Method' ? 'Src Ship' : header === 'Destination Warehouse' ? 'Dest WH' : header === 'Iso Currency Code' ? 'ISO $' : header === 'Erp Currency Code' ? 'ERP $' : header === 'Processing Sequence' ? 'Seq' : header === 'Activated At' ? 'Activated' : header === 'Deactivated At' ? 'Deactivated' : header}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                ))\n              )\n              : null\n            }\n            </tr>\n          </thead>\n          <tbody>\n          {items.map((item, key) => (\n              <tr key={key}>\n                <td className=\"map-id\">\n                  {vpWidth < 1280 ?\n                  (\n                    <Link to='#' onClick={() => action('showDetails', item)} >\n                      {item.Id ? item.Id : 'None'}\n                    </Link>\n                  )\n                  :\n                  (\n                    item.Id ? item.Id : 'None'\n                  )}\n                </td>\n                <td>{item.IsoCountryCode}</td>\n                <td className=\"desktop\">{item.ErpCompanyId}</td>\n                <td\n                  className=\"editable desktop\"\n                  suppressContentEditableWarning=\"true\"\n                  data-default-value={item.SourceWarehouse}\n                  // id={`${item.SourceWarehouse}-${key}`}\n                  id={`SourceWarehouse-${key}`}\n                  onBlur={(e) => handleBlur(item.Id, key, 'SourceWarehouse', e)}\n                  onClick={(e) => handleClick(e.target, key, 'SourceWarehouse')}\n                >\n                  {item.SourceWarehouse ? item.SourceWarehouse : 'None'}\n                </td>\n                <td\n                  className=\"editable desktop\"\n                  suppressContentEditableWarning=\"true\"\n                  data-default-value={item.SourceShipMethod ? item.SourceShipMethod : 'None'}\n                  // id={`${item.SourceShipMethod ? item.SourceShipMethod : 'None'}-${key}`}\n                  id={`SourceShipMethod-${key}`}\n                  onBlur={(e) => handleBlur(item.Id, key, 'SourceShipMethod', e)}\n                  onClick={(e) => handleClick(e.target, key, 'SourceShipMethod')}                \n                >\n                  {item.SourceShipMethod ? item.SourceShipMethod : 'None'}\n                </td>\n                <td\n                  className=\"editable desktop\"\n                  suppressContentEditableWarning=\"true\"\n                  data-default-value={item.DestinationWarehouse}\n                  // id={`${item.DestinationWarehouse}-${key}`}\n                  id={`DestinationWarehouse-${key}`}\n                  onBlur={(e) => handleBlur(item.Id, key, 'DestinationWarehouse', e)}\n                  onClick={(e) => handleClick(e.target, key, 'DestinationWarehouse')}                                \n                >\n                  {item.DestinationWarehouse ? item.DestinationWarehouse : 'None'}\n                </td>\n                <td className='desktop'>{item.IsoCurrencyCode}</td>\n                <td className='desktop'>{item.ErpCurrencyCode}</td>\n                <td className='desktop'>{item.ProcessingSequence ? item.ProcessingSequence : 'None'}</td>\n                {/* <td className='desktop'>\n                  {item.ActivatedAt ? new Date(parseInt(item.ActivatedAt)).toISOString().split('T')[0] : 'None'}\n                </td> */}\n                <td className='desktop'>\n                  {item.DeactivatedAt ? new Date(parseInt(item.DeactivatedAt)).toISOString().split('T')[0] : 'None'}\n                </td>\n                <td className='date' id={`ModifiedAt-${key}`}>{item.ModifiedAt ? new Date(parseInt(item.ModifiedAt)).toISOString().split('T')[0] : 'N/A'}</td>\n                <td className='by-user' id={`ModifiedBy-${key}`}>{item.ModifiedBy ? item.ModifiedBy : 'N/A'}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  )\n  :\n  (\n    <div className=\"role-denied\">Your profile's assigned role of \"{props.role}\" does not allow you to access this page.</div>\n\n  )\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}