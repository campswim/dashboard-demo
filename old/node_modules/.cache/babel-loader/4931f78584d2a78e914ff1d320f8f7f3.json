{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/login/signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport User from '../../hooks/get-user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signin = ({\n  profile,\n  message,\n  liftData,\n  liftUser,\n  clearError,\n  signedIn,\n  signUp\n}) => {\n  _s();\n\n  var _userInfo$current, _userInfo$current2, _userInfo$current3, _userInfo$current4, _userInfo$current5, _userInfo$current6;\n\n  const [username, setUsername] = useState(profile && profile.email ? profile.email : '');\n  const [password, setPassword] = useState(profile && profile.password ? profile.password : '');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [id, setId] = useState('');\n  const [name, setName] = useState([]);\n  const [role, setRole] = useState(profile === null || profile === void 0 ? void 0 : profile.role);\n  const [roleName, setRoleName] = useState(null);\n  const [roles, setRoles] = useState([]);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loggedIn, setLoggedIn] = useState(0);\n  const [renderSignUp, setRenderSignUp] = useState(signUp);\n  const [changePassword, setChangePassword] = useState(false);\n  const userAction = useRef(profile === null || profile === void 0 ? void 0 : profile.action);\n  const userInfo = useRef(null);\n  const user = new User(); // Handle the clicking of the sign-in button.\n\n  const handleSignIn = event => {\n    event.preventDefault();\n    document.getElementById('sign-in-button').innerText = 'Signing in . . . '; // document.getElementById('sign-in-button').classList.add('reset-color');\n\n    userAction.current = 'Sign In';\n    user.email = username;\n    setError(null);\n\n    if (!changePassword) {\n      // See if the user already exists in the db.\n      user.getUserByEmail().then(res => {\n        if (res.data) {\n          var _res$data, _res$data$userByEmail;\n\n          const id = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$userByEmail = _res$data.userByEmail) === null || _res$data$userByEmail === void 0 ? void 0 : _res$data$userByEmail.Id;\n\n          if (id) {\n            var _res$data2, _res$data2$userByEmai, _res$data3, _res$data3$userByEmai;\n\n            // We have a user.\n            const activeUser = (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$userByEmai = _res$data2.userByEmail) === null || _res$data2$userByEmai === void 0 ? void 0 : _res$data2$userByEmai.Active;\n            const firstSignin = (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$userByEmai = _res$data3.userByEmail) === null || _res$data3$userByEmai === void 0 ? void 0 : _res$data3$userByEmai.LastLogin;\n            user.id = id;\n            user.password = password;\n\n            if (!activeUser) {\n              // The user has been deactivated and should not be given access to the site.\n              setError('This user profile has been deactivated.');\n            } else {\n              // The user is active.\n              if (!firstSignin) {\n                // Make the user change her password.\n                user.changePassword(true).then( // arg => firstSignin\n                res => {\n                  if (res) {\n                    var _res$data4, _res$data4$changePass, _res$data5, _res$data5$changePass;\n\n                    const id = res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : (_res$data4$changePass = _res$data4.changePassword) === null || _res$data4$changePass === void 0 ? void 0 : _res$data4$changePass.Id;\n                    const error = res === null || res === void 0 ? void 0 : (_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : (_res$data5$changePass = _res$data5.changePassword) === null || _res$data5$changePass === void 0 ? void 0 : _res$data5$changePass.Error;\n\n                    if (id && !error) {\n                      setChangePassword(true);\n                      document.getElementById('new-password-first-field').focus();\n                      document.getElementById('sign-in-button').textContent('Update');\n                      setError('');\n                      setId(id);\n                      setPassword('');\n                      setConfirmPassword('');\n                    } else if (error) setError(error);\n                  } else if (res.name) {\n                    // There was an error.\n                    setError(res.message);\n                  }\n                }, err => {\n                  console.error(err);\n                });\n              } else {\n                // Make the API call to validate the user and generate/sign her token.\n                user.signIn().then(res => {\n                  if (res.data) {\n                    var _res$data6;\n\n                    const userData = (_res$data6 = res.data) === null || _res$data6 === void 0 ? void 0 : _res$data6.signin;\n                    const error = userData === null || userData === void 0 ? void 0 : userData.Error;\n                    setId(id);\n                    setError(error ? error : '');\n\n                    if (error) {\n                      // Print the error and reset the sign-in button's text.\n                      document.getElementById('sign-in-button').innerText = 'Sign In';\n                    } else {\n                      if (userData) {\n                        // Get user restrictions from the db and add them to the user object in local storage.\n                        user.getUserRestrictions(userData.RoleId).then(res => {\n                          if (res) {\n                            var _res$data7;\n\n                            const roleProfile = res === null || res === void 0 ? void 0 : (_res$data7 = res.data) === null || _res$data7 === void 0 ? void 0 : _res$data7.getUserRestrictions;\n                            const error = roleProfile === null || roleProfile === void 0 ? void 0 : roleProfile.Error;\n\n                            if (!error) {\n                              // Build the user object to be stored in the browser.\n                              const userObject = {\n                                id: userData.Id,\n                                name: userData.Name,\n                                role: userData.Role,\n                                roleId: userData.RoleId,\n                                restrictions: {\n                                  pages: roleProfile.RestrictedPages,\n                                  actions: roleProfile.RestrictedActions\n                                }\n                              };\n                              localStorage.setItem('user', JSON.stringify(userObject));\n                              userInfo.current = userObject;\n                              liftData(!error ? true : false, 'signin', false, 39);\n                              liftUser(userObject);\n                              setLoggedIn(!error ? 1 : 0);\n                              setRenderSignUp(false);\n                            } else setError(error);\n                          }\n                        }, err => {\n                          setError(err);\n                          console.error(err);\n                        });\n                      } else {\n                        if (res.errors) {\n                          const errorsArray = [];\n                          res.errors.forEach(err => {\n                            const errorMessage = err.message;\n                            errorsArray.push(errorMessage);\n                          });\n                          if (errorsArray.length > 0) setError(errorsArray);\n                        }\n                      }\n                    }\n                  } else if (res.name) {\n                    setError(res.message);\n                  }\n                }, err => {\n                  console.error({\n                    err\n                  });\n                });\n              }\n            }\n          } else {\n            // The user needs to be registered (or they entered an incorrect email address).\n            // If there are no users at all in the database, render the signup page.\n            user.getAllUsersSansToken().then(res => {\n              if (res.data) {\n                var _res$data8, _res$data9;\n\n                const id = (_res$data8 = res.data) === null || _res$data8 === void 0 ? void 0 : _res$data8.users[0].Id;\n                const error = (_res$data9 = res.data) === null || _res$data9 === void 0 ? void 0 : _res$data9.users[0].Error;\n\n                if (!id && !error) {\n                  setRenderSignUp(true);\n                  userAction.current = 'Add User';\n                } else if (id && !error) {\n                  setError('There is no user associated with this email address.\\n\\nPlease ensure you\\'ve entered the correct email address or ask the site\\'s administrator for access.');\n                  liftData(false, 'signin', true, 61); // Args => boolean, caller, error (boolean).\n\n                  document.getElementById('sign-in-button').innerText = 'Sign in';\n                  document.getElementById('sign-in-button').classList.remove('reset-color');\n                }\n              } else if (res.name) {\n                setError(res.message);\n              }\n            }, err => {\n              console.error({\n                err\n              });\n            });\n          }\n        } else {\n          if (!res.response) {\n            setError('Network error. Check that the API is up and running');\n            document.getElementById('sign-in-button').innerText = 'Sign In';\n          }\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    } else {\n      // Update the user's password.\n      if (confirmPassword !== password) {\n        // Ensure that the user has entered her password correctly.\n        setError('The passwords do not match; please re-enter them.');\n        setPassword('');\n        setConfirmPassword('');\n      } else {\n        // The passwords match, so send it to the db and sign the user in.\n        setError(null);\n        user.id = id;\n        user.password = confirmPassword;\n        user.changePassword(false).then( // The return on this call to changePassword is the same as for signin.\n        res => {\n          if (res.data) {\n            var _res$data10;\n\n            const userData = (_res$data10 = res.data) === null || _res$data10 === void 0 ? void 0 : _res$data10.changePassword;\n            const id = userData === null || userData === void 0 ? void 0 : userData.Id;\n            const error = userData === null || userData === void 0 ? void 0 : userData.Error; // If id, the user's password has been updated and the user has been logged in, so redirect to the dashboard.\n\n            if (id && !error) {\n              setId(id); // Get user restrictions from the db and add them to the user object in local storage.\n\n              user.getUserRestrictions(userData.RoleId).then(res => {\n                if (res) {\n                  var _res$data11;\n\n                  const roleProfile = res === null || res === void 0 ? void 0 : (_res$data11 = res.data) === null || _res$data11 === void 0 ? void 0 : _res$data11.getUserRestrictions;\n                  const error = roleProfile === null || roleProfile === void 0 ? void 0 : roleProfile.Error;\n\n                  if (!error) {\n                    // Build the user object to be stored in the browser.\n                    const userObject = {\n                      id: userData.Id,\n                      name: userData.Name,\n                      role: userData.Role,\n                      roleId: userData.RoleId,\n                      restrictions: {\n                        pages: roleProfile.RestrictedPages,\n                        actions: roleProfile.RestrictedActions\n                      }\n                    };\n                    localStorage.setItem('user', JSON.stringify(userObject));\n                    userInfo.current = userObject;\n                    liftData(!error ? true : false, 'signin', false);\n                    liftUser(userData);\n                    setLoggedIn(1);\n                    setError(null);\n                    setChangePassword(false);\n                  } else {\n                    setError(error);\n                    setLoggedIn(0);\n                  }\n                }\n              }, err => {\n                console.error(err);\n                setError(err);\n              });\n            }\n          }\n        }, err => {\n          console.error(err);\n          setError(err);\n        });\n      }\n    }\n  }; // Handle the clicking of the sign-up button.\n\n\n  const handleSignUp = event => {\n    event.preventDefault();\n    document.getElementById('register-button').textContent = 'Registering . . .';\n    user.email = username;\n    user.password = password;\n    user.name = name;\n    user.role = role ? role : '';\n    user.role = !isNaN(parseInt(user.role)) ? parseInt(user.role) : user.role;\n    setError(null);\n\n    if (role) {\n      user.signUp().then(res => {\n        if (res.data) {\n          var _res$data12, _res$data12$signup, _res$data$signup;\n\n          if ((_res$data12 = res.data) === null || _res$data12 === void 0 ? void 0 : (_res$data12$signup = _res$data12.signup) === null || _res$data12$signup === void 0 ? void 0 : _res$data12$signup.Error) {\n            var _res$data13, _res$data13$signup;\n\n            setError((_res$data13 = res.data) === null || _res$data13 === void 0 ? void 0 : (_res$data13$signup = _res$data13.signup) === null || _res$data13$signup === void 0 ? void 0 : _res$data13$signup.Error);\n            setLoggedIn(0);\n            document.getElementById('register-button').textContent = 'Register';\n          } else if ((_res$data$signup = res.data.signup) === null || _res$data$signup === void 0 ? void 0 : _res$data$signup.Id) {\n            var _res$data14, _res$data14$signup, _res$data15, _res$data15$signup;\n\n            setSuccessMessage((_res$data14 = res.data) === null || _res$data14 === void 0 ? void 0 : (_res$data14$signup = _res$data14.signup) === null || _res$data14$signup === void 0 ? void 0 : _res$data14$signup.Message);\n            setError(null);\n            setId((_res$data15 = res.data) === null || _res$data15 === void 0 ? void 0 : (_res$data15$signup = _res$data15.signup) === null || _res$data15$signup === void 0 ? void 0 : _res$data15$signup.Id);\n            userAction.current = 'Sign In';\n          }\n        } else if (res.name) {\n          setError(res.message);\n        }\n\n        if (res.errors) res.errors.forEach(error => console.error({\n          error\n        })); // For debugging.\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    } else setError('Please select a role for this user.');\n  }; // Toggle the roles' dropdown menu on click.\n\n\n  const toggleSelect = () => {\n    const options = document.getElementById('select-role').children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) option.classList.toggle('show-option');else option.classList.toggle('fade-default');\n        }\n      });\n    }\n\n    setRoleName(null);\n    setRole(null);\n  }; // Open the roles' dropdown menu on focus.\n\n\n  const openDropdown = () => {\n    const options = document.getElementById('select-role').children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) {\n            option.classList.add('show-option');\n          } else {\n            option.classList.add('fade-default');\n          }\n        }\n      });\n    }\n  }; // Toggle the class that highlights the role.\n\n\n  const toggleClass = event => {\n    const options = document.getElementById('select-role').children;\n    const id = event.target.id;\n    setRoleName(null);\n    setRole(null);\n\n    if (options) {\n      for (let option of options) {\n        if (!option.id.includes('default')) {\n          if (option.id !== id) {\n            document.getElementById(option.id).classList.remove('highlight-option');\n          } else {\n            document.getElementById(id).classList.add('highlight-option');\n          }\n        }\n      }\n    }\n  }; // Capture the user's role.\n\n\n  const handleSelect = event => {\n    const roleId = event.target.dataset.value;\n    const roleName = event.target.textContent;\n    const options = document.getElementById('select-role').children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) {\n            option.classList.remove('show-option');\n          } else {\n            option.classList.remove('fade-default');\n            option.classList.add('role-selected');\n          }\n        }\n      });\n    }\n\n    setRole(roleId);\n    setRoleName(roleName);\n  }; // Render the sign-up form.\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (userAction.current === 'Add User' && profile.action === 'Add User') setRenderSignUp(true);else setRenderSignUp(false);\n    }\n\n    return () => mounted = false;\n  }, [profile.action]); // Change the page's nav title.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (userAction.current === 'Add User' && profile.action === 'Add User') {\n        liftData(true, 'signup', false, 130);\n        setRenderSignUp(true);\n      } else if (profile.action === 'Sign Out' && userAction.current === 'Sign Out') {\n        const user = new User();\n        user.signOut().then(res => {\n          if (res) {\n            if (res.data) {\n              setLoggedIn(0);\n              userAction.current = 'Sign In';\n              liftData(false, 'signin', false, 140);\n              setError(null);\n              setRenderSignUp(false);\n              liftUser(null);\n              localStorage.setItem('user', null);\n            } else if (res.name) {// console.error(res.message);\n            }\n          }\n        }, err => {\n          console.error({\n            err\n          });\n        });\n      }\n    }\n\n    return () => mounted = false;\n  }, [liftData, liftUser, profile.action]); // Get the user's available roles for sign-up.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const user = new User(); // Must create a new user inside the useEffect, otherwise the code runs ad nauseum.\n\n      user.getUserRoles().then(res => {\n        if (res.data) {\n          var _res$data16;\n\n          const userRoles = (_res$data16 = res.data) === null || _res$data16 === void 0 ? void 0 : _res$data16.getUserRoles;\n          setRoles(userRoles);\n        } else if (res.name) {\n          setError(res.message);\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    }\n\n    return () => mounted = false;\n  }, []);\n  return !renderSignUp && !changePassword ?\n  /*#__PURE__*/\n  // Sign in.\n  _jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSignIn(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          value: username,\n          placeholder: \"Email\",\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sign-in-button\",\n          name: \"submit\",\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this) : parseInt(loggedIn) && userInfo.current ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/dashboard',\n        state: {\n          user: {\n            id: (_userInfo$current = userInfo.current) === null || _userInfo$current === void 0 ? void 0 : _userInfo$current.Id,\n            name: (_userInfo$current2 = userInfo.current) === null || _userInfo$current2 === void 0 ? void 0 : _userInfo$current2.Name,\n            role: (_userInfo$current3 = userInfo.current) === null || _userInfo$current3 === void 0 ? void 0 : _userInfo$current3.Role,\n            action: 'Dashboard'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }, this) : '']\n  }, void 0, true) : !renderSignUp && changePassword ?\n  /*#__PURE__*/\n  // Change password.\n  _jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a new password and confirm it in the second field.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSignIn(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-password-first-field\",\n          name: \"password\",\n          value: password,\n          placeholder: \"Enter your new password.\",\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          value: confirmPassword,\n          placeholder: \"Re-enter your new password.\",\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sign-in-button\",\n          name: \"submit\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this) : parseInt(loggedIn) && userInfo.current ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/dashboard',\n        state: {\n          user: {\n            id: (_userInfo$current4 = userInfo.current) === null || _userInfo$current4 === void 0 ? void 0 : _userInfo$current4.Id,\n            name: (_userInfo$current5 = userInfo.current) === null || _userInfo$current5 === void 0 ? void 0 : _userInfo$current5.Name,\n            role: (_userInfo$current6 = userInfo.current) === null || _userInfo$current6 === void 0 ? void 0 : _userInfo$current6.Role\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }, this) : '']\n  }, void 0, true) :\n  /*#__PURE__*/\n  // Sign up.\n  _jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: !id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignUp,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"your-name\",\n          value: name,\n          placeholder: \"Name\",\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          value: username,\n          placeholder: \"Email\",\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-container add-user\",\n          id: \"select-role\",\n          name: \"role\",\n          onChange: () => handleSelect(),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"role-option default\",\n            id: \"default\",\n            value: \"default\",\n            onClick: () => toggleSelect(),\n            onFocus: () => openDropdown(),\n            tabIndex: \"0\",\n            children: roleName ? roleName : 'Role'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), roles.map((value, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"role-option\",\n            id: `option-${key}`,\n            \"data-value\": value.Id,\n            onClick: e => handleSelect(e),\n            onFocus: e => toggleClass(e, key),\n            onKeyPress: e => handleSelect(e),\n            tabIndex: \"0\",\n            children: value.Role\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          value: password,\n          placeholder: \"Password\",\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"register-button\",\n          name: \"submit\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }, this) : '']\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/users',\n        state: {\n          id,\n          action: 'Add User',\n          message: successMessage\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signin, \"4vrCLQBSSLWa79el8a7El45QWdQ=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/login/signin.js"],"names":["React","useState","useEffect","useRef","Redirect","User","Signin","profile","message","liftData","liftUser","clearError","signedIn","signUp","username","setUsername","email","password","setPassword","confirmPassword","setConfirmPassword","id","setId","name","setName","role","setRole","roleName","setRoleName","roles","setRoles","successMessage","setSuccessMessage","error","setError","loggedIn","setLoggedIn","renderSignUp","setRenderSignUp","changePassword","setChangePassword","userAction","action","userInfo","user","handleSignIn","event","preventDefault","document","getElementById","innerText","current","getUserByEmail","then","res","data","userByEmail","Id","activeUser","Active","firstSignin","LastLogin","Error","focus","textContent","err","console","signIn","userData","signin","getUserRestrictions","RoleId","roleProfile","userObject","Name","Role","roleId","restrictions","pages","RestrictedPages","actions","RestrictedActions","localStorage","setItem","JSON","stringify","errors","errorsArray","forEach","errorMessage","push","length","getAllUsersSansToken","users","classList","remove","response","handleSignUp","isNaN","parseInt","signup","Message","toggleSelect","options","children","Object","values","option","includes","toggle","openDropdown","add","toggleClass","target","handleSelect","dataset","value","mounted","signOut","getUserRoles","userRoles","e","pathname","state","map","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {  Redirect } from 'react-router-dom';\nimport User from '../../hooks/get-user';\n\nconst Signin = ({ profile, message, liftData, liftUser, clearError, signedIn, signUp }) => {\n  const [username, setUsername] = useState(profile && profile.email ? profile.email : '');\n  const [password, setPassword] = useState(profile && profile.password ? profile.password : '');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [id, setId] = useState('');\n  const [name, setName] = useState([]);\n  const [role, setRole] = useState(profile?.role);\n  const [roleName, setRoleName] = useState(null);\n  const [roles, setRoles] = useState([]);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [error, setError] = useState('');\n  const [loggedIn, setLoggedIn] = useState(0);\n  const [renderSignUp, setRenderSignUp] = useState(signUp);\n  const [changePassword, setChangePassword] = useState(false);\n  const userAction = useRef(profile?.action);\n  const userInfo = useRef(null);\n  const user = new User();\n\n  // Handle the clicking of the sign-in button.\n  const handleSignIn = event => {\n    event.preventDefault();\n    document.getElementById('sign-in-button').innerText = 'Signing in . . . ';\n    // document.getElementById('sign-in-button').classList.add('reset-color');\n    userAction.current = 'Sign In';\n    user.email = username;\n    setError(null);\n        \n    if (!changePassword) {\n      // See if the user already exists in the db.\n      user.getUserByEmail().then(\n        res => {\n          if (res.data) {\n            const id = res.data?.userByEmail?.Id;\n            \n            if (id) { // We have a user.\n              const activeUser = res.data?.userByEmail?.Active;\n              const firstSignin = res.data?.userByEmail?.LastLogin;\n              user.id = id;\n              user.password = password;\n              \n              if (!activeUser) { // The user has been deactivated and should not be given access to the site.\n                setError('This user profile has been deactivated.');\n              } else { // The user is active.\n                if (!firstSignin) { // Make the user change her password.\n                  user.changePassword(true).then(  // arg => firstSignin\n                    res => {\n                      if (res) {\n                        const id = res?.data?.changePassword?.Id;\n                        const error = res?.data?.changePassword?.Error;\n                        if (id && !error) {\n                          setChangePassword(true);\n                          document.getElementById('new-password-first-field').focus();\n                          document.getElementById('sign-in-button').textContent('Update');\n                          setError('');\n                          setId(id);\n                          setPassword('');\n                          setConfirmPassword('');\n                        } else if (error) setError(error);\n                      } else if (res.name) { // There was an error.\n                        setError(res.message);\n                      }\n                    },\n                    err => { console.error(err); }\n                  );\n                } else { // Make the API call to validate the user and generate/sign her token.\n                  user.signIn().then(\n                    res => {\n                      if (res.data) {\n                        const userData = res.data?.signin;\n                        const error = userData?.Error;\n                        setId(id);\n                        setError(error ? error : '');\n\n                        if (error) { // Print the error and reset the sign-in button's text.\n                          document.getElementById('sign-in-button').innerText = 'Sign In';\n                        } else {\n                          if (userData) { // Get user restrictions from the db and add them to the user object in local storage.\n                            user.getUserRestrictions(userData.RoleId).then(\n                              res => {\n                                if (res) {\n                                  const roleProfile = res?.data?.getUserRestrictions;\n                                  const error = roleProfile?.Error;\n                                \n                                  if (!error) { // Build the user object to be stored in the browser.\n                                    const userObject = {\n                                      id: userData.Id,\n                                      name: userData.Name,\n                                      role: userData.Role,\n                                      roleId: userData.RoleId,\n                                      restrictions: {\n                                        pages: roleProfile.RestrictedPages,\n                                        actions: roleProfile.RestrictedActions\n                                      }\n                                    };\n        \n                                    localStorage.setItem('user', JSON.stringify(userObject));\n                                    userInfo.current = userObject;\n                                    liftData(!error ? true : false, 'signin', false, 39);\n                                    liftUser(userObject);\n                                    setLoggedIn(!error ? 1 : 0);\n                                    setRenderSignUp(false);\n                \n                                  } else setError(error);\n                                }\n                              },\n                              err => {\n                                setError(err);\n                                console.error(err);\n                              }\n                            );\n                          } else {\n                            if (res.errors) {\n                              const errorsArray = [];\n\n                              res.errors.forEach(err => {\n                                const errorMessage = err.message;\n                                errorsArray.push(errorMessage);\n                              });\n\n                              if (errorsArray.length > 0) setError(errorsArray);\n                            }\n                          }\n                        }\n                      } else if (res.name) {\n                        setError(res.message);\n                      }\n                    },\n                    err => { console.error({err}) }\n                  );\n                }\n              }\n            } else { // The user needs to be registered (or they entered an incorrect email address).\n              // If there are no users at all in the database, render the signup page.\n              user.getAllUsersSansToken().then(\n                res => {\n                  if (res.data) {\n                    const id = res.data?.users[0].Id;\n                    const error = res.data?.users[0].Error;\n                    if (!id && !error) {\n                      setRenderSignUp(true);\n                      userAction.current = 'Add User';\n                    } else if (id && !error) {\n                      setError('There is no user associated with this email address.\\n\\nPlease ensure you\\'ve entered the correct email address or ask the site\\'s administrator for access.');                      \n                      liftData(false, 'signin', true, 61); // Args => boolean, caller, error (boolean).\n                      document.getElementById('sign-in-button').innerText = 'Sign in';\n                      document.getElementById('sign-in-button').classList.remove('reset-color');\n                    }\n                  } else if (res.name) {\n                    setError(res.message);\n                  }\n                },\n                err => {\n                  console.error({err});\n                }\n              );\n            }\n          } else {\n            if (!res.response) {\n              setError('Network error. Check that the API is up and running');\n              document.getElementById('sign-in-button').innerText = 'Sign In';\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    } else { // Update the user's password.\n      if (confirmPassword !== password) { // Ensure that the user has entered her password correctly.\n        setError('The passwords do not match; please re-enter them.');\n        setPassword('');\n        setConfirmPassword('');\n      } else { // The passwords match, so send it to the db and sign the user in.\n        setError(null);\n        user.id = id;\n        user.password = confirmPassword;\n        user.changePassword(false).then(  // The return on this call to changePassword is the same as for signin.\n          res => {\n            if (res.data) {\n              const userData = res.data?.changePassword;\n              const id = userData?.Id;\n              const error = userData?.Error;\n\n              // If id, the user's password has been updated and the user has been logged in, so redirect to the dashboard.\n              if (id && !error) {\n                setId(id);\n\n                // Get user restrictions from the db and add them to the user object in local storage.\n                user.getUserRestrictions(userData.RoleId).then(\n                  res => {\n                    if (res) {\n                      const roleProfile = res?.data?.getUserRestrictions;\n                      const error = roleProfile?.Error;\n\n                      if (!error) { // Build the user object to be stored in the browser.\n                        const userObject = {\n                          id: userData.Id,\n                          name: userData.Name,\n                          role: userData.Role,\n                          roleId: userData.RoleId,\n                          restrictions: {\n                            pages: roleProfile.RestrictedPages,\n                            actions: roleProfile.RestrictedActions\n                          }\n                        };\n\n                        localStorage.setItem('user', JSON.stringify(userObject));\n                        userInfo.current = userObject;\n                        liftData(!error ? true : false, 'signin', false);\n                        liftUser(userData);\n                        setLoggedIn(1);\n                        setError(null);\n                        setChangePassword(false);\n                      } else {\n                        setError(error);\n                        setLoggedIn(0);\n                      }\n                    }\n                  },\n                  err => {\n                    console.error(err);\n                    setError(err);\n                  }\n                );\n              }\n            }\n          },\n          err => { \n            console.error(err);\n            setError(err);\n          }\n        );\n      }\n    }\n  };\n\n  // Handle the clicking of the sign-up button.\n  const handleSignUp = (event) => {\n    event.preventDefault();\n    document.getElementById('register-button').textContent = 'Registering . . .';\n    user.email = username;\n    user.password = password;\n    user.name = name;\n    user.role = role ? role : '';\n    user.role = !isNaN(parseInt(user.role)) ? parseInt(user.role) : user.role;\n    setError(null);\n\n    if (role) {\n      user.signUp().then(\n        res => {\n          if (res.data) {\n            if (res.data?.signup?.Error) {\n              setError(res.data?.signup?.Error);\n              setLoggedIn(0);\n              document.getElementById('register-button').textContent = 'Register';\n            } else if (res.data.signup?.Id) {\n              setSuccessMessage(res.data?.signup?.Message);\n              setError(null);\n              setId(res.data?.signup?.Id);\n              userAction.current = 'Sign In';\n            }\n          } else if (res.name) {\n            setError(res.message);\n          } \n          \n          if (res.errors) res.errors.forEach(error => console.error({error})); // For debugging.\n        },\n        err => { console.error({err}) }\n      );\n    } else setError('Please select a role for this user.');\n  }\n\n  // Toggle the roles' dropdown menu on click.\n  const toggleSelect = () => {\n    const options = document.getElementById('select-role').children;\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) option.classList.toggle('show-option');\n          else option.classList.toggle('fade-default');\n        }\n      });\n    }\n\n    setRoleName(null);\n    setRole(null);\n  };\n\n  // Open the roles' dropdown menu on focus.\n  const openDropdown = () => {\n    const options = document.getElementById('select-role').children;\n    \n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) {\n            option.classList.add('show-option');\n          } else {\n            option.classList.add('fade-default')\n          }\n        }\n      });\n    }\n  };\n\n  // Toggle the class that highlights the role.\n  const toggleClass = (event) => {\n    const options = document.getElementById('select-role').children;\n    const id = event.target.id;\n\n    setRoleName(null);\n    setRole(null);\n\n    if (options) {\n      for (let option of options) {\n        if (!option.id.includes('default')) {\n          if (option.id !== id) {\n            document.getElementById(option.id).classList.remove('highlight-option');\n          } else {\n            document.getElementById(id).classList.add('highlight-option');\n          }\n        }\n      }\n    }\n  };\n\n  // Capture the user's role.\n  const handleSelect = (event) => {\n    const roleId = event.target.dataset.value;\n    const roleName = event.target.textContent;\n    const options = document.getElementById('select-role').children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('default')) {\n            option.classList.remove('show-option');\n          } else {\n            option.classList.remove('fade-default')\n            option.classList.add('role-selected');\n          }\n        }\n      });\n    }\n\n    setRole(roleId);\n    setRoleName(roleName);\n  };\n\n  // Render the sign-up form.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (userAction.current === 'Add User' && profile.action === 'Add User') setRenderSignUp(true);\n      else setRenderSignUp(false);\n    }\n    return () => mounted = false;\n  }, [profile.action]);\n  \n  // Change the page's nav title.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (userAction.current === 'Add User' && profile.action === 'Add User') {\n        liftData(true, 'signup', false, 130);\n        setRenderSignUp(true);\n      } else if (profile.action === 'Sign Out' && userAction.current === 'Sign Out') {\n        const user = new User();\n        user.signOut().then(\n          res => {\n            if (res) {\n              if (res.data) {\n                setLoggedIn(0);\n                userAction.current = 'Sign In';\n                liftData(false, 'signin', false, 140);\n                setError(null);\n                setRenderSignUp(false);\n                liftUser(null);\n                localStorage.setItem('user', null)\n              } else if (res.name) {\n                // console.error(res.message);\n              }  \n            }\n          },\n          err => { console.error({err}) }\n        );  \n      }\n    }\n    return () => mounted = false;\n  }, [liftData, liftUser, profile.action]);\n\n  // Get the user's available roles for sign-up.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const user = new User(); // Must create a new user inside the useEffect, otherwise the code runs ad nauseum.\n      user.getUserRoles().then(\n        res => {          \n          if (res.data) {\n            const userRoles = res.data?.getUserRoles;\n            setRoles(userRoles);\n          } else if (res.name) {\n            setError(res.message);\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n    return () => mounted = false;\n  }, []);\n    \n  return !renderSignUp && !changePassword ?\n  ( // Sign in.\n    <> \n      <div className='signin-container'>\n        <p>{message}</p>\n        <form onSubmit={(e) => handleSignIn(e)}>\n          <input name='username' value={username} placeholder='Email' onChange={(e) => setUsername(e.target.value)} required />\n          <input name='password' value={password} placeholder='Password' onChange={(e) => setPassword(e.target.value)} required type='password'/>\n          <button id='sign-in-button' name='submit' type='submit'>Sign In</button>\n        </form>\n      </div>\n      {error ?\n        <div className='sign-in-error'>{error}</div>\n      : parseInt(loggedIn) && userInfo.current ?\n        <Redirect to={{\n          pathname: '/dashboard',\n          state: {\n            user: {\n              id: userInfo.current?.Id,\n              name: userInfo.current?.Name,\n              role: userInfo.current?.Role,\n              action: 'Dashboard'\n            }\n          }\n        }}\n        />\n      : ''}\n    </>\n  ) \n  : !renderSignUp && changePassword ? \n  ( // Change password.\n    <> \n      <div className='signin-container'>\n        <p>Enter a new password and confirm it in the second field.</p>\n        <form onSubmit={(e) => handleSignIn(e)}>\n          <input id='new-password-first-field' name='password' value={password} placeholder='Enter your new password.' onChange={(e) => setPassword(e.target.value)} type='password' required />\n          <input name='password' value={confirmPassword} placeholder='Re-enter your new password.' onChange={(e) => setConfirmPassword(e.target.value)} required type='password' />\n          <button id='sign-in-button' name='submit' type='submit'>Update</button>\n        </form>\n      </div>\n      {error ?\n        <div>{error}</div>\n      : parseInt(loggedIn) && userInfo.current ?\n        <Redirect to={{\n          pathname: '/dashboard',\n          state: {\n            user: {\n              id: userInfo.current?.Id,\n              name: userInfo.current?.Name,\n              role: userInfo.current?.Role\n            }\n          }\n        }}\n        />\n      : ''}\n    </>\n  ) \n  : \n  ( // Sign up.\n    <div className='signup-container'>\n      {!id ? \n      (\n        <>\n          <form onSubmit={handleSignUp}>\n            <input name='your-name' value={name} placeholder='Name' onChange={(e) => setName(e.target.value)} required />\n            <input name='email' value={username} placeholder='Email' onChange={(e) => setUsername(e.target.value)} required />\n            <div className='select-container add-user' id='select-role' name='role' onChange={() => handleSelect()}>\n              <p \n                className='role-option default' \n                id='default' value='default' \n                onClick={() => toggleSelect()}\n                onFocus={() => openDropdown()}\n                tabIndex='0'\n              >\n                {roleName ? roleName : 'Role'}\n              </p>\n              {roles.map((value, key) => (\n                <p \n                  className='role-option' \n                  id={`option-${key}`} \n                  key={key} \n                  data-value={value.Id} \n                  onClick={(e) => handleSelect(e)} \n                  onFocus={(e) => toggleClass(e, key)} \n                  onKeyPress={(e) => handleSelect(e)}\n                  tabIndex='0'\n                >\n                  {value.Role}\n                </p>\n              ))}\n            </div>\n            <input name='password' value={password} placeholder='Password' type='password' onChange={(e) => setPassword(e.target.value)} required />\n            <button id='register-button' name='submit' type='submit'>Register</button>\n          </form>\n          {error ? \n          (\n            <div>{error}</div>\n          ) : (\n            ''\n          )}\n        </>\n      ) : (\n        <Redirect to={\n          {\n            pathname: '/users',\n            state: {\n              id,\n              action: 'Add User',\n              message: successMessage\n            },\n          }\n        }\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}