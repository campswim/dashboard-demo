{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/home/failed-processes/failed-processes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllFailedProcesses } from '../../../hooks/get-dashboard';\nimport FailedJobs from './failed-jobs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FailedProcesses = () => {\n  _s();\n  const [failedProcesses, setFailedProcesses] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Get the data from the db.\n  useEffect(() => {\n    getAllFailedProcesses().then(res => {\n      console.log({\n        res\n      });\n      if (res !== null && res !== void 0 && res.errors) {\n        const errors = Object.values(res.errors);\n        errors.forEach(error => setError(`${error}\\n`));\n      } else {\n        setFailedProcesses(res);\n        setIsLoaded(true);\n      }\n    }, err => {\n      setError(`Error: ${err.message}`);\n      setIsLoaded(false);\n    });\n  }, []);\n  return error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: error === null || error === void 0 ? void 0 : error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: \"Failed Processes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FailedJobs, {\n      data: failedProcesses,\n      isLoaded: isLoaded,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FailedProcesses, \"WI27FLfK4IOE9rSJMD6c2YDU5uY=\");\n_c = FailedProcesses;\nexport default FailedProcesses;\nvar _c;\n$RefreshReg$(_c, \"FailedProcesses\");","map":{"version":3,"names":["React","useState","useEffect","getAllFailedProcesses","FailedJobs","jsxDEV","_jsxDEV","Fragment","_Fragment","FailedProcesses","_s","failedProcesses","setFailedProcesses","isLoaded","setIsLoaded","error","setError","then","res","console","log","errors","Object","values","forEach","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/home/failed-processes/failed-processes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllFailedProcesses } from '../../../hooks/get-dashboard';\nimport FailedJobs from './failed-jobs';\n\nconst FailedProcesses = () => {\n  const [failedProcesses, setFailedProcesses] = useState({});\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Get the data from the db.\n  useEffect(() => {\n    getAllFailedProcesses().then(\n      res => {\n\n        console.log({res});\n        \n        if (res?.errors) {\n          const errors = Object.values(res.errors);\n          errors.forEach(error => setError(`${error}\\n`));\n        } else {\n          setFailedProcesses(res);\n          setIsLoaded(true);\n        }\n      },\n      err => {\n        setError(`Error: ${err.message}`);\n        setIsLoaded(false);\n      }\n    );\n  }, []);\n  \n  return error ? \n  (\n    <div className=\"signin-error\">{error?.message}</div>\n  )\n  :\n  (\n    <>\n      <h3 className='section-title'>Failed Processes</h3>\n      <FailedJobs data={failedProcesses} isLoaded={isLoaded} error={error} />\n    </>\n  )\n};\n\nexport default FailedProcesses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,qBAAqB,QAAQ,8BAA8B;AACpE,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACdC,qBAAqB,CAAC,CAAC,CAACc,IAAI,CAC1BC,GAAG,IAAI;MAELC,OAAO,CAACC,GAAG,CAAC;QAACF;MAAG,CAAC,CAAC;MAElB,IAAIA,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEG,MAAM,EAAE;QACf,MAAMA,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACL,GAAG,CAACG,MAAM,CAAC;QACxCA,MAAM,CAACG,OAAO,CAACT,KAAK,IAAIC,QAAQ,CAAE,GAAED,KAAM,IAAG,CAAC,CAAC;MACjD,CAAC,MAAM;QACLH,kBAAkB,CAACM,GAAG,CAAC;QACvBJ,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC,EACDW,GAAG,IAAI;MACLT,QAAQ,CAAE,UAASS,GAAG,CAACC,OAAQ,EAAC,CAAC;MACjCZ,WAAW,CAAC,KAAK,CAAC;IACpB,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOC,KAAK,gBAEVT,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAAEb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,gBAIpD1B,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA;MAAIqB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnD1B,OAAA,CAACF,UAAU;MAAC6B,IAAI,EAAEtB,eAAgB;MAACE,QAAQ,EAAEA,QAAS;MAACE,KAAK,EAAEA;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACvE,CACH;AACH,CAAC;AAACtB,EAAA,CAtCID,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAwCrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}