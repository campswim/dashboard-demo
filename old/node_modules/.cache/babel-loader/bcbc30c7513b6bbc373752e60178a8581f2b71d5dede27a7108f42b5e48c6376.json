{"ast":null,"code":"import apiCall from './api-call';\nexport async function getOrders(query) {\n  if (!query) return;\n  const operation = query;\n  query = `query ${operation} {${operation} `;\n  query += 'failedPushes' === operation ? `{OrderNumber Market Warehouse CurrencyCode OrderTotalAmount OrderTypeDescription CustomerNumber OrderDate StagingImportDate ErrorCode ErrorMessage}}` : 'failedPulls' === operation ? `{Id OrderNumber OrderDate OrderTotal CurrencyCode At Message Exception}}` : `{Type OrderNumber OrderDate OrderTotal CurrencyCode IgnoredDate User Message}}`;\n  const result = await apiCall(operation, query).then(res => {\n    return res;\n  }, err => {\n    return err;\n  });\n  return result;\n}\nexport async function getUnpushedOrders(status) {\n  const operation = status;\n  const query = `query ${operation} {${operation} {Market, OrderTotalAmount, PushStatusId, Error}}`;\n  const variables = {\n    status\n  };\n  const result = await apiCall(operation, query, variables).then(res => {\n    return res;\n  }, err => {\n    return err;\n  });\n  return result;\n}\nexport async function userAction(tab, operation, ids) {\n  if (!operation || !ids) return;\n  const query = tab === 'unpushed' ? `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {OrderNumber}}` : tab === 'unpulled' ? `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {Id, OrderNumber, OrderDate, OrderTotal, CurrencyCode, Message, At, IgnoredAt, Exception}}` : tab === 'ignored' ? `mutation ${operation}($ids: [IgnoredObject]!) {${operation}(ids: $ids) {OrderNumber}}` : tab === 'failedProcesses' || tab === 'failedPayments' ? `mutation ${operation}($ids: [ID]!) {${operation}(ids: $ids) {PaymentId, DismissedAt, DismissedBy}}` : '';\n  const variables = {\n    ids\n  };\n  return await apiCall(operation, query, variables).then(res => res, err => console.err(err));\n}\nexport async function getOrderDetails(id) {\n  if (!id) return;\n  const operation = 'orderDetails';\n  const query = `query ${operation}($id: String!) {${operation}(id: $id) {OrderNumber, CustomerNumber, Market, CurrencyCode, OrderTypeDescription, ReferenceOrderNumber, OrderTotalAmount, TaxAmount, FreightAmount, FreightTaxAmount, OrderDate, ShipDate, Warehouse, ShipMethod, PickupName PushStatus, PulledDate, SentToErp, ErpOrderNumber, ErpInvoicedAt, Error}}`;\n  const variables = {\n    id\n  };\n  return await apiCall(operation, query, variables).then(res => {\n    return res;\n  }, err => {\n    return err;\n  });\n}","map":{"version":3,"names":["apiCall","getOrders","query","operation","result","then","res","err","getUnpushedOrders","status","variables","userAction","tab","ids","console","getOrderDetails","id"],"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/hooks/get-order.js"],"sourcesContent":["import apiCall from './api-call';\n\nexport async function getOrders(query) {\n  if (!query) return;\n  const operation = query;\n  query = `query ${operation} {${operation} `;\n  query += 'failedPushes' === operation ? `{OrderNumber Market Warehouse CurrencyCode OrderTotalAmount OrderTypeDescription CustomerNumber OrderDate StagingImportDate ErrorCode ErrorMessage}}` : 'failedPulls' === operation ? `{Id OrderNumber OrderDate OrderTotal CurrencyCode At Message Exception}}` : `{Type OrderNumber OrderDate OrderTotal CurrencyCode IgnoredDate User Message}}`;\n  const result = await apiCall(operation, query).then(\n    res => { return res; },\n    err => { return err; }\n  );\n\n  return result;\n}\n\nexport async function getUnpushedOrders(status) {\n  const operation = status;\n  const query = `query ${operation} {${operation} {Market, OrderTotalAmount, PushStatusId, Error}}`;\n  const variables = { status };\n  const result = await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => { return err; }\n  );\n\n  return result;\n}\n\nexport async function userAction(tab, operation, ids) {\n  if (!operation || !ids) return;\n  \n  const query = \n    tab === 'unpushed' ? \n      `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {OrderNumber}}` : \n    tab === 'unpulled' ? \n      `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {Id, OrderNumber, OrderDate, OrderTotal, CurrencyCode, Message, At, IgnoredAt, Exception}}` : \n    tab === 'ignored' ? \n      `mutation ${operation}($ids: [IgnoredObject]!) {${operation}(ids: $ids) {OrderNumber}}` :\n    tab === 'failedProcesses' || tab === 'failedPayments' ?\n      `mutation ${operation}($ids: [ID]!) {${operation}(ids: $ids) {PaymentId, DismissedAt, DismissedBy}}` : \n    '';\n  const variables = { ids };\n\n  return await apiCall(operation, query, variables).then(\n    res => res,\n    err => console.err(err)\n  );\n}\n\nexport async function getOrderDetails(id) {\n  if (!id) return;\n\n  const operation = 'orderDetails';\n  const query = `query ${operation}($id: String!) {${operation}(id: $id) {OrderNumber, CustomerNumber, Market, CurrencyCode, OrderTypeDescription, ReferenceOrderNumber, OrderTotalAmount, TaxAmount, FreightAmount, FreightTaxAmount, OrderDate, ShipDate, Warehouse, ShipMethod, PickupName PushStatus, PulledDate, SentToErp, ErpOrderNumber, ErpInvoicedAt, Error}}`;\n  const variables = { id };  \n  return await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => { return err; }\n  );\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;AAEhC,OAAO,eAAeC,SAASA,CAACC,KAAK,EAAE;EACrC,IAAI,CAACA,KAAK,EAAE;EACZ,MAAMC,SAAS,GAAGD,KAAK;EACvBA,KAAK,GAAI,SAAQC,SAAU,KAAIA,SAAU,GAAE;EAC3CD,KAAK,IAAI,cAAc,KAAKC,SAAS,GAAI,sJAAqJ,GAAG,aAAa,KAAKA,SAAS,GAAI,0EAAyE,GAAI,gFAA+E;EAC5X,MAAMC,MAAM,GAAG,MAAMJ,OAAO,CAACG,SAAS,EAAED,KAAK,CAAC,CAACG,IAAI,CACjDC,GAAG,IAAI;IAAE,OAAOA,GAAG;EAAE,CAAC,EACtBC,GAAG,IAAI;IAAE,OAAOA,GAAG;EAAE,CACvB,CAAC;EAED,OAAOH,MAAM;AACf;AAEA,OAAO,eAAeI,iBAAiBA,CAACC,MAAM,EAAE;EAC9C,MAAMN,SAAS,GAAGM,MAAM;EACxB,MAAMP,KAAK,GAAI,SAAQC,SAAU,KAAIA,SAAU,mDAAkD;EACjG,MAAMO,SAAS,GAAG;IAAED;EAAO,CAAC;EAC5B,MAAML,MAAM,GAAG,MAAMJ,OAAO,CAACG,SAAS,EAAED,KAAK,EAAEQ,SAAS,CAAC,CAACL,IAAI,CAC5DC,GAAG,IAAI;IAAE,OAAOA,GAAG;EAAE,CAAC,EACtBC,GAAG,IAAI;IAAE,OAAOA,GAAG;EAAE,CACvB,CAAC;EAED,OAAOH,MAAM;AACf;AAEA,OAAO,eAAeO,UAAUA,CAACC,GAAG,EAAET,SAAS,EAAEU,GAAG,EAAE;EACpD,IAAI,CAACV,SAAS,IAAI,CAACU,GAAG,EAAE;EAExB,MAAMX,KAAK,GACTU,GAAG,KAAK,UAAU,GACf,YAAWT,SAAU,sBAAqBA,SAAU,4BAA2B,GAClFS,GAAG,KAAK,UAAU,GACf,YAAWT,SAAU,sBAAqBA,SAAU,wGAAuG,GAC9JS,GAAG,KAAK,SAAS,GACd,YAAWT,SAAU,6BAA4BA,SAAU,4BAA2B,GACzFS,GAAG,KAAK,iBAAiB,IAAIA,GAAG,KAAK,gBAAgB,GAClD,YAAWT,SAAU,kBAAiBA,SAAU,oDAAmD,GACtG,EAAE;EACJ,MAAMO,SAAS,GAAG;IAAEG;EAAI,CAAC;EAEzB,OAAO,MAAMb,OAAO,CAACG,SAAS,EAAED,KAAK,EAAEQ,SAAS,CAAC,CAACL,IAAI,CACpDC,GAAG,IAAIA,GAAG,EACVC,GAAG,IAAIO,OAAO,CAACP,GAAG,CAACA,GAAG,CACxB,CAAC;AACH;AAEA,OAAO,eAAeQ,eAAeA,CAACC,EAAE,EAAE;EACxC,IAAI,CAACA,EAAE,EAAE;EAET,MAAMb,SAAS,GAAG,cAAc;EAChC,MAAMD,KAAK,GAAI,SAAQC,SAAU,mBAAkBA,SAAU,0SAAyS;EACtW,MAAMO,SAAS,GAAG;IAAEM;EAAG,CAAC;EACxB,OAAO,MAAMhB,OAAO,CAACG,SAAS,EAAED,KAAK,EAAEQ,SAAS,CAAC,CAACL,IAAI,CACpDC,GAAG,IAAI;IAAE,OAAOA,GAAG;EAAE,CAAC,EACtBC,GAAG,IAAI;IAAE,OAAOA,GAAG;EAAE,CACvB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}