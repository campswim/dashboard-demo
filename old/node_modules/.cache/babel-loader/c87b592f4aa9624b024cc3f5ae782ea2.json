{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/components/mobile-links-modal.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MobileLinksModal = props => {\n  const links = []; // Remove the active page's component from the links.\n\n  if (props && props.links) {\n    props.links.forEach(link => {\n      var _link$props, _link$props$children, _link$props$children$, _link$props$children$2, _link$props$children$3;\n\n      const activePageFromLinks = link === null || link === void 0 ? void 0 : (_link$props = link.props) === null || _link$props === void 0 ? void 0 : (_link$props$children = _link$props.children) === null || _link$props$children === void 0 ? void 0 : (_link$props$children$ = _link$props$children.props) === null || _link$props$children$ === void 0 ? void 0 : (_link$props$children$2 = _link$props$children$.children[1]) === null || _link$props$children$2 === void 0 ? void 0 : (_link$props$children$3 = _link$props$children$2.props) === null || _link$props$children$3 === void 0 ? void 0 : _link$props$children$3.children;\n\n      if (activePageFromLinks) {\n        if (props.activePage) {\n          if (props.activePage !== activePageFromLinks) {\n            links.push(link);\n          }\n        }\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-links-mobile\",\n    children: links\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MobileLinksModal;\nexport default MobileLinksModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileLinksModal\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/components/mobile-links-modal.js"],"names":["React","MobileLinksModal","props","links","forEach","link","activePageFromLinks","children","activePage","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAMC,KAAK,GAAG,EAAd,CADgC,CAGhC;;AACA,MAAID,KAAK,IAAIA,KAAK,CAACC,KAAnB,EAA0B;AACxBD,IAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,IAAI,IAAI;AAAA;;AAC1B,YAAMC,mBAAmB,GAAGD,IAAH,aAAGA,IAAH,sCAAGA,IAAI,CAAEH,KAAT,wEAAG,YAAaK,QAAhB,kFAAG,qBAAuBL,KAA1B,oFAAG,sBAA8BK,QAA9B,CAAuC,CAAvC,CAAH,qFAAG,uBAA2CL,KAA9C,2DAAG,uBAAkDK,QAA9E;;AAEA,UAAID,mBAAJ,EAAyB;AACvB,YAAIJ,KAAK,CAACM,UAAV,EAAsB;AACpB,cAAIN,KAAK,CAACM,UAAN,KAAqBF,mBAAzB,EAA8C;AAC5CH,YAAAA,KAAK,CAACM,IAAN,CAAWJ,IAAX;AACD;AACF;AACF;AACF,KAVD;AAWD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,cAAsCF;AAAtC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CArBD;;KAAMF,gB;AAuBN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\n\nconst MobileLinksModal = props => {\n  const links = [];\n  \n  // Remove the active page's component from the links.\n  if (props && props.links) {\n    props.links.forEach(link => {\n      const activePageFromLinks = link?.props?.children?.props?.children[1]?.props?.children;\n\n      if (activePageFromLinks) {\n        if (props.activePage) {\n          if (props.activePage !== activePageFromLinks) {\n            links.push(link);\n          }\n        }\n      }\n    });\n  }\n\n  return(\n    <div className=\"navbar-links-mobile\">{links}</div>\n  )\n};\n\nexport default MobileLinksModal;\n"]},"metadata":{},"sourceType":"module"}