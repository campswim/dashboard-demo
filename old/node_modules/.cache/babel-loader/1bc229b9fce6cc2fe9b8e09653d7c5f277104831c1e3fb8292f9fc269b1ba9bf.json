{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/settings/params.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport getType from '../../hooks/get-type';\nimport selectElementContents from '../../hooks/select-all';\nimport logChange from '../../hooks/log-change';\nimport { updateSettings, getParamByName } from '../../hooks/get-settings';\nimport formatHeaders from '../../hooks/format-headers';\nimport OrderDetails from '../../components/order-details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Params = props => {\n  _s();\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [newValue, setNewValue] = useState({});\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const clickCount = useRef(0);\n  const clickLocation = useRef('');\n  const updated = useRef(false);\n  let {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(props.paramsData ? props.paramsData : '', 'params');\n  const error = items && Array.isArray(items) && items.length === 1 && items[0].message ? items[0] : '';\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'Name' !== name && 'ValueType' !== name && 'ModifiedAt' !== name && 'ModifiedBy' !== name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n\n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['ValueTypeId', 'EnabledDate', 'CreatedAt', 'CreatedBy', 'UserId', 'Error']) : '';\n  const handleClick = (event, row, column, id, enabledDate = null, item, idx) => {\n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue,\n      element;\n    if ('âœ“' === defaultValue) element = document.getElementById(`checkmark-${row}`);else element = document.getElementById(`${column}-${row}`);\n    if (clickLocation.current !== event.id) clickCount.current = 0;\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    clickCount.current++;\n    clickLocation.current = event.id;\n    if ('Name' !== column) {\n      // Editing the Name column is not allowed, it being the PK in the db table.      \n      if (defaultValue !== currentValue) {\n        // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n        element.textContent = defaultValue;\n        element.removeAttribute('style');\n        if ('EnabledDate' === column) element.setAttribute('style', 'color:green');\n      } else {\n        if ('EnabledDate' !== column) element.setAttribute('contentEditable', 'true');else {\n          element.textContent = 'X';\n          element.setAttribute('style', 'color:red');\n        }\n      }\n    }\n    if ('EnabledDate' === column) {\n      // Update the EnabledDate in the db with today's date/time (in YYYY-MM-DD HH:MM:SS).\n      currentValue = 'X' === currentValue ? new Date().toISOString() : 'disable';\n      defaultValue = 'disable' || 'X' === currentValue ? `checkmark-${row}` : defaultValue;\n      setNewValue({\n        id,\n        row,\n        column,\n        prevVal: defaultValue,\n        newVal: currentValue,\n        enabledDate,\n        idx\n      });\n      if (vpWidth < 1280) {\n        item['EnabledDate'] = currentValue;\n        setOrderDetails(item);\n      }\n    }\n  };\n\n  // Handle user edits.\n  const handleBlur = (id, row, column, event, idx) => {\n    const prevValue = event.target.dataset.defaultValue ? event.target.dataset.defaultValue : 'None';\n    const newVal = event.target.textContent ? event.target.textContent : 'None';\n    const table = 'AppParams';\n    const element = document.getElementById(`${column}-${row}`);\n    if (prevValue === newVal && prevValue !== 'None') {\n      element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(res => {\n        dataType.current = res;\n\n        // Check the input against type and length.\n        if (JSON.stringify(dataType.current) !== '{}') {\n          if (newVal) {\n            const columnName = dataType.current.ColumnName;\n            if (columnName === column) {\n              const type = dataType.current.DataType;\n              let typeNewValue = columnName === 'ValueType' ? parseInt(newVal) : newVal;\n              typeNewValue = Number.isNaN(typeNewValue) ? typeNewValue : typeof typeNewValue;\n              if (type === typeNewValue) {\n                if (dataType.current.MaxLength > newVal.length || !dataType.current.MaxLength) {\n                  if (!/<\\/?[a-z][\\s\\S]*>/i.test(newVal)) {\n                    // Check that no html is being introduced.\n                    if (vpWidth > 1280) {\n                      items[row][column] = newVal ? newVal : 'None'; // For desktop.\n                    } else {\n                      if (idx) items[idx][column] = newVal ? newVal : 'None'; // For edits in the modal.\n                    }\n                    element.textContent = newVal;\n                    setNewValue({\n                      id,\n                      row,\n                      column,\n                      prevValue,\n                      newVal,\n                      idx\n                    });\n                    updated.current = false;\n                  } else {\n                    element.setAttribute('style', 'color: red');\n                    element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                    element.scrollIntoViewIfNeeded({\n                      behavior: 'smooth',\n                      inline: 'start'\n                    });\n                  }\n                }\n              } else {\n                element.setAttribute('style', 'color: red');\n                element.textContent = `The new value's datatype (${typeof newVal}) doesn't match the databases's data type (${type}).`;\n                element.scrollIntoViewIfNeeded({\n                  behavior: 'smooth',\n                  inline: 'start'\n                });\n              }\n            }\n          } else {\n            element.textContent = prevValue;\n          }\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    }\n  };\n\n  // Handles the action chosen by the user, if applicable.\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n\n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    clickCount.current = 0;\n    // setIsChecked([]);\n  };\n\n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize);\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n\n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById(`${newValue.column}-${newValue.row}`);\n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        // Get the parameter's previous value.\n        getParamByName(newValue.id).then(res => {\n          var _res$getParamByName, _res$getParamByName2;\n          const prevEnabledDate = res === null || res === void 0 ? void 0 : (_res$getParamByName = res.getParamByName) === null || _res$getParamByName === void 0 ? void 0 : _res$getParamByName.EnabledDate;\n          const paramByNameError = res === null || res === void 0 ? void 0 : (_res$getParamByName2 = res.getParamByName) === null || _res$getParamByName2 === void 0 ? void 0 : _res$getParamByName2.Error;\n\n          // Update the parameter's value in the AppParams table.\n          updateSettings('params', newValue.id, newValue.column, newValue.newVal).then(res => {\n            var _res$data, _res$data2, _res$data3, _res$data3$paramsUpda, _res$data4, _res$data4$paramsUpda, _res$data5, _res$data5$paramsUpda;\n            let value = res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && _res$data.paramsUpdate[newValue.column] ? res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.paramsUpdate[newValue.column] : 'None';\n            const valueType = res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$paramsUpda = _res$data3.paramsUpdate) === null || _res$data3$paramsUpda === void 0 ? void 0 : _res$data3$paramsUpda.ValueTypeId;\n            const error = res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : (_res$data4$paramsUpda = _res$data4.paramsUpdate) === null || _res$data4$paramsUpda === void 0 ? void 0 : _res$data4$paramsUpda.Error;\n            const userId = JSON.parse(localStorage.getItem('user')).id;\n            const enabledDate = res === null || res === void 0 ? void 0 : (_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : (_res$data5$paramsUpda = _res$data5.paramsUpdate) === null || _res$data5$paramsUpda === void 0 ? void 0 : _res$data5$paramsUpda.EnabledDate;\n            if (typeof value === 'number') value = JSON.stringify(value);\n            if (value === newValue.newVal) {\n              if (element) {\n                const modifiedAtElement = document.getElementById(`ModifiedAt-${newValue.row}`);\n                const modifiedByElement = document.getElementById(`ModifiedBy-${newValue.row}`);\n                element.removeAttribute('contentEditable');\n                // element.textContent = newValue.newVal ? newValue.newVal : 'None';\n                modifiedAtElement.textContent = new Date().toISOString().split('T')[0];\n                modifiedByElement.textContent = props.user.name;\n                if (newValue.column !== 'EnabledDate') element.setAttribute('data-default-value', newValue.newVal);\n                element.scrollIntoViewIfNeeded({\n                  behavior: 'smooth',\n                  inline: 'start'\n                });\n                element.classList.toggle('edited');\n                setTimeout(() => {\n                  element.classList.toggle('edited');\n                  updated.current = true;\n                }, 2000);\n              }\n\n              // Log the change to the database.\n              logChange('AppParams', newValue.id, newValue.column, userId, newValue.prevValue, newValue.newVal, valueType).then(res => {\n                if (res.data) {\n                  var _res$data6, _res$data6$logChange;\n                  const changeDateTime = (_res$data6 = res.data) === null || _res$data6 === void 0 ? void 0 : (_res$data6$logChange = _res$data6.logChange) === null || _res$data6$logChange === void 0 ? void 0 : _res$data6$logChange.DateTime;\n                  changeDate.current = changeDateTime;\n                } else if (res.errors) {\n                  console.error(res.errors);\n                }\n              }, err => {\n                console.error({\n                  err\n                });\n              });\n            } else if (error && null !== error.message) {\n              element.textContent = error.message + ' Please correct your input.';\n              element.setAttribute('style', 'color:red');\n            } else if (res !== null && res !== void 0 && res.errors) {\n              let errorString = '';\n              if (res.errors.length > 0 && res.errors.length < 2) {\n                errorString = res.errors[0].message;\n              } else if (res.errors.length >= 2) {\n                res.errors.forEach((error, idx) => {\n                  if (idx === 0) errorString += error.message;else if (idx === res.errors.length - 1) errorString += ', ' + error.message;else errorString += ', ' + error.message;\n                });\n              }\n              if (errorString) {\n                element.textContent = errorString + ' Please correct your input.';\n                element.setAttribute('style', 'color:red; white-space:pre-wrap');\n              }\n            } else {\n              // Special logging for the date-enabled column.\n              if (newValue.column === 'EnabledDate' & !paramByNameError) {\n                logChange('AppParams', newValue.id, newValue.column, userId, prevEnabledDate ? new Date(parseInt(prevEnabledDate)).toISOString() : null, enabledDate ? new Date(parseInt(enabledDate)).toISOString() : null, 8).then(res => {\n                  var _res$logChange;\n                  const changeDateTime = res === null || res === void 0 ? void 0 : (_res$logChange = res.logChange) === null || _res$logChange === void 0 ? void 0 : _res$logChange.DateTime;\n                  changeDate.current = changeDateTime;\n                }, err => {\n                  console.error({\n                    err\n                  });\n                });\n              } else {\n                console.error({\n                  paramByNameError\n                });\n              }\n            }\n          }, err => {\n            console.error({\n              err\n            });\n          });\n        }, err => {\n          console.error(err);\n        });\n      }\n    }\n    return () => mounted = false;\n  }, [items, newValue, props, orderDetails, vpWidth]);\n  return props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this) : !props.isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading . . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [error.name ? error.name + ': ' : null, error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this) : props.role === 'Admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info no-actions\",\n      children: showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n        details: orderDetails,\n        closeModal: closeModal,\n        handleBlur: handleBlur,\n        handleClick: handleClick,\n        getClassNamesFor: getClassNamesFor,\n        caller: {\n          settings: 'params'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 24\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"params-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: headers ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort('EnabledDate'),\n              className: `${getClassNamesFor('EnabledDate')} desktop`,\n              children: \"Enabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 21\n            }, this), headers.map((header, key) => vpWidth < 1280 ? header !== 'Value' && header !== 'Process Job Ids' && header !== 'Category' && header !== 'Sub Category' && header !== 'Value Type' && header !== 'Notes' && header !== 'Idx' && header !== 'User Id' ? /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: getClassNamesFor(header.split(' ').join('')),\n              children: header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 27\n            }, this) : null : /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: getClassNamesFor(header.split(' ').join('')),\n              children: header === 'Process Job Ids' ? 'Job Ids' : header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header === 'Value Type' ? 'Type' : header\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map((item, key) => {\n          return item.Name !== 'BcAccessToken' ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"checkmark editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": \"\\u2713\",\n                id: `checkmark-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'EnabledDate', e) // params: id, row, column, event\n                ,\n                onClick: e => handleClick(e.target, key, 'EnabledDate', item.Name, item.EnabledDate, item, key) // params: event, row, column, id, enabled date\n                ,\n                style: item.EnabledDate ? {\n                  color: 'green'\n                } : {\n                  color: 'red'\n                },\n                children: item.EnabledDate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \"\\u2713\"\n                }, void 0, false) : 'X'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"params-id\",\n                children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"#\",\n                  onClick: () => action('showDetails', item, key),\n                  children: vpWidth < 500 && item.Name && item.Name.length > 15 ? item.Name.substring(0, 12) + '...' : vpWidth <= 768 && item.Name && item.Name.length > 31 ? item.Name.substring(0, 28) + '...' : item.Name ? item.Name : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 27\n                }, this) : item.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.Value ? item.Value : 'None'\n                // id={`${item.Value}-${key}`}\n                ,\n                id: `Value-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'Value', e),\n                onClick: e => handleClick(e.target, key, 'Value', item.Name, null, item, key),\n                children: item.Value ? item.Value : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 23\n              }, this), vpWidth < 1280 ? null : /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"process-job-ids\",\n                children: item.ProcessJobIds ? item.ProcessJobIds.split(',').join(', ') : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 48\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.Category ? item.Category : 'None'\n                // id={`${item.Category}-${key}`}\n                ,\n                id: `Category-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'Category', e),\n                onClick: e => handleClick(e.target, key, 'Category', item.Name, null, item, key),\n                children: item.Category ? item.Category : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.SubCategory ? item.SubCategory : 'None'\n                // id={`${item.SubCategory}-${key}`}\n                ,\n                id: `SubCategory-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'SubCategory', e),\n                onClick: e => handleClick(e.target, key, 'SubCategory', item.Name, null, item, key),\n                children: item.SubCategory ? item.SubCategory : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"desktop\",\n                children: item.ValueType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"notes editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.Notes ? item.Notes : 'None'\n                // id={`${item.Notes}-${key}`}\n                ,\n                id: `Notes-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'Notes', e),\n                onClick: e => handleClick(e.target, key, 'Notes', item.Name, null, item, key),\n                children: item.Notes ? item.Notes : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"date\",\n                id: `ModifiedAt-${key}`,\n                children: item.ModifiedAt ? new Date(parseInt(item.ModifiedAt)).toISOString().split('T')[0] : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"by-user\",\n                id: `ModifiedBy-${key}`,\n                children: item.ModifiedBy ? item.ModifiedBy : item.UserId && isNaN(parseInt(item.UserId)) ? item.UserId : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 19\n          }, this) : null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-denied\",\n    children: [\"Your profile's assigned role of \\\"\", props.role, \"\\\" does not allow you to access this page.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n};\n_s(Params, \"5Zj56UAe9v4BCDRejs92GXj3M98=\", false, function () {\n  return [useSort];\n});\n_c = Params;\nexport default Params;\nvar _c;\n$RefreshReg$(_c, \"Params\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Link","useSort","getType","selectElementContents","logChange","updateSettings","getParamByName","formatHeaders","OrderDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","Params","props","_s","orderDetails","setOrderDetails","showDetails","setShowDetails","newValue","setNewValue","vpWidth","setVpWidth","window","innerWidth","dataType","changeDate","clickCount","clickLocation","updated","items","requestSort","sortConfig","paramsData","error","Array","isArray","length","message","getClassNamesFor","name","className","key","direction","undefined","headers","Object","keys","handleClick","event","row","column","id","enabledDate","item","idx","currentValue","textContent","defaultValue","dataset","element","document","getElementById","current","removeAttribute","setAttribute","Date","toISOString","prevVal","newVal","handleBlur","prevValue","target","table","then","res","JSON","stringify","columnName","ColumnName","type","DataType","typeNewValue","parseInt","Number","isNaN","MaxLength","test","scrollIntoViewIfNeeded","behavior","inline","err","console","action","path","scrollTo","top","sessionStorage","setItem","closeModal","mounted","handleResize","addEventListener","_res$getParamByName","_res$getParamByName2","prevEnabledDate","EnabledDate","paramByNameError","Error","_res$data","_res$data2","_res$data3","_res$data3$paramsUpda","_res$data4","_res$data4$paramsUpda","_res$data5","_res$data5$paramsUpda","value","data","paramsUpdate","valueType","ValueTypeId","userId","parse","localStorage","getItem","modifiedAtElement","modifiedByElement","split","user","classList","toggle","setTimeout","_res$data6","_res$data6$logChange","changeDateTime","DateTime","errors","errorString","forEach","_res$logChange","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoaded","role","details","caller","settings","onClick","map","header","join","Name","suppressContentEditableWarning","onBlur","e","style","color","to","substring","Value","ProcessJobIds","Category","SubCategory","ValueType","Notes","ModifiedAt","ModifiedBy","UserId","_c","$RefreshReg$"],"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/settings/params.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport getType from '../../hooks/get-type';\nimport selectElementContents from '../../hooks/select-all';\nimport logChange from '../../hooks/log-change';\nimport { updateSettings, getParamByName } from '../../hooks/get-settings';\nimport formatHeaders from '../../hooks/format-headers';\nimport OrderDetails from '../../components/order-details';\n\nconst Params = props => {  \n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [newValue, setNewValue] = useState({});\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const clickCount = useRef(0);\n  const clickLocation = useRef('');\n  const updated = useRef(false);\n  let { items, requestSort, sortConfig } = useSort(props.paramsData ? props.paramsData : '', 'params');\n  const error = items && Array.isArray(items) && items.length === 1 && items[0].message ? items[0] : '';\n\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n\n    let className = 'Name' !== name && 'ValueType' !== name && 'ModifiedAt' !== name && 'ModifiedBy' !== name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n\n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['ValueTypeId', 'EnabledDate', 'CreatedAt', 'CreatedBy', 'UserId', 'Error']) : '';\n\n  const handleClick = (event, row, column, id, enabledDate = null, item, idx) => {    \n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue, element;\n\n    if ('âœ“' === defaultValue) element = document.getElementById(`checkmark-${row}`);\n    else element = document.getElementById(`${column}-${row}`);\n    \n    if (clickLocation.current !== event.id) clickCount.current = 0;\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    clickCount.current++;\n    clickLocation.current = event.id;\n\n    if ('Name' !== column) { // Editing the Name column is not allowed, it being the PK in the db table.      \n      if (defaultValue !== currentValue) { // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n        element.textContent = defaultValue;\n        element.removeAttribute('style');\n\n        if ('EnabledDate' === column) element.setAttribute('style', 'color:green');\n      } else {\n        if ('EnabledDate' !== column) element.setAttribute('contentEditable', 'true');\n        else {\n          element.textContent = 'X';\n          element.setAttribute('style', 'color:red');\n        }\n      }\n    }\n    \n    if ('EnabledDate' === column) { // Update the EnabledDate in the db with today's date/time (in YYYY-MM-DD HH:MM:SS).\n      currentValue = 'X' === currentValue ? new Date().toISOString() : 'disable';\n      defaultValue = 'disable' || 'X' === currentValue ? `checkmark-${row}` : defaultValue;\n      setNewValue({ id, row, column, prevVal: defaultValue, newVal: currentValue, enabledDate, idx });\n\n      if (vpWidth < 1280) {\n        item['EnabledDate'] = currentValue;\n        setOrderDetails(item);\n      }\n    }\n  }\n\n  // Handle user edits.\n  const handleBlur = (id, row, column, event, idx) => {\n    const prevValue = event.target.dataset.defaultValue ? event.target.dataset.defaultValue : 'None';\n    const newVal = event.target.textContent ? event.target.textContent : 'None';\n    const table = 'AppParams';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (prevValue === newVal && prevValue !== 'None') {\n      element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(\n        res => {\n          dataType.current = res;\n\n          // Check the input against type and length.\n          if (JSON.stringify(dataType.current) !== '{}') {\n            if (newVal) {\n              const columnName = dataType.current.ColumnName;\n              if (columnName === column) {\n                const type = dataType.current.DataType;\n                let typeNewValue = columnName === 'ValueType' ? parseInt(newVal) : newVal;\n                typeNewValue = Number.isNaN(typeNewValue) ? typeNewValue : typeof typeNewValue;\n\n                if (type === typeNewValue) {\n                  if (dataType.current.MaxLength > newVal.length || !dataType.current.MaxLength) {\n                    if (!/<\\/?[a-z][\\s\\S]*>/i.test(newVal)) { // Check that no html is being introduced.\n                      if (vpWidth > 1280) {          \n                        items[row][column] = newVal ? newVal : 'None'; // For desktop.\n                      } else {\n                        if (idx) items[idx][column] = newVal ? newVal : 'None'; // For edits in the modal.\n                      }\n                      element.textContent = newVal;\n                      setNewValue({ id, row, column, prevValue, newVal, idx });\n                      updated.current = false;\n                    } else {\n                      element.setAttribute('style', 'color: red');\n                      element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                      element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                    }\n                  }\n                } else {\n                  element.setAttribute('style', 'color: red');\n                  element.textContent = `The new value's datatype (${typeof newVal}) doesn't match the databases's data type (${type}).`;\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                }\n              }\n            } else {\n              element.textContent = prevValue;\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n  };\n\n  // Handles the action chosen by the user, if applicable.\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    \n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    clickCount.current = 0;\n    // setIsChecked([]);\n  };  \n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n\n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById(`${newValue.column}-${newValue.row}`);\n      \n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        // Get the parameter's previous value.\n        getParamByName(newValue.id).then(\n          res => {\n            const prevEnabledDate = res?.getParamByName?.EnabledDate;\n            const paramByNameError = res?.getParamByName?.Error;\n  \n            // Update the parameter's value in the AppParams table.\n            updateSettings('params', newValue.id, newValue.column, newValue.newVal).then(\n              res => {\n                let value = res?.data?.paramsUpdate[newValue.column] ? res?.data?.paramsUpdate[newValue.column] : 'None';\n                const valueType = res?.data?.paramsUpdate?.ValueTypeId;\n                const error = res?.data?.paramsUpdate?.Error;\n                const userId = JSON.parse(localStorage.getItem('user')).id;\n                const enabledDate = res?.data?.paramsUpdate?.EnabledDate;\n                \n                if (typeof value === 'number') value = JSON.stringify(value);\n                if (value === newValue.newVal) {\n                  if (element) {\n                    const modifiedAtElement = document.getElementById(`ModifiedAt-${newValue.row}`);\n                    const modifiedByElement = document.getElementById(`ModifiedBy-${newValue.row}`);\n                    \n                    element.removeAttribute('contentEditable');\n                    // element.textContent = newValue.newVal ? newValue.newVal : 'None';\n                    modifiedAtElement.textContent = new Date().toISOString().split('T')[0];\n                    modifiedByElement.textContent = props.user.name;\n\n                    if (newValue.column !== 'EnabledDate') element.setAttribute('data-default-value', newValue.newVal);\n\n                    element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                    element.classList.toggle('edited');\n                    setTimeout(() => {\n                      element.classList.toggle('edited');\n                      updated.current = true;\n                    }, 2000);\n                  }\n                    \n                  // Log the change to the database.\n                  logChange('AppParams', newValue.id, newValue.column, userId, newValue.prevValue, newValue.newVal, valueType).then(\n                    res => {\n                      if (res.data) {\n                        const changeDateTime = res.data?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                      } else if (res.errors) {\n                        console.error(res.errors);\n                      }\n                    },\n                    err => { console.error({err}); }\n                  );\n                } else if (error && null !== error.message) {\n                  element.textContent = error.message + ' Please correct your input.';\n                  element.setAttribute('style', 'color:red');\n                } else if (res?.errors) {\n                  let errorString = '';\n    \n                  if (res.errors.length > 0 && res.errors.length < 2) {\n                    errorString = res.errors[0].message;\n                  } else if (res.errors.length >= 2) {\n                    res.errors.forEach((error, idx) => {\n                      if (idx === 0) errorString += error.message;\n                      else if (idx === res.errors.length - 1) errorString += ', ' + error.message;\n                      else errorString += ', ' + error.message;\n                    });\n                  }\n    \n                  if (errorString) {\n                    element.textContent = errorString + ' Please correct your input.';\n                    element.setAttribute('style', 'color:red; white-space:pre-wrap');\n                  }\n                } else { // Special logging for the date-enabled column.\n                  if (newValue.column === 'EnabledDate' & !paramByNameError) {\n                    logChange('AppParams', newValue.id, newValue.column, userId, prevEnabledDate ? new Date(parseInt(prevEnabledDate)).toISOString() : null, enabledDate ? new Date(parseInt(enabledDate)).toISOString() : null, 8).then(\n                      res => {\n                        const changeDateTime = res?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                      },\n                      err => { console.error({err}); }\n                    );\n                  } else {\n                    console.error({paramByNameError});\n                  }\n                }\n              },\n              err => { console.error({err}) }\n            );\n          },\n          err => { console.error(err); }\n        );\n      }\n    }\n\n    return () => mounted = false;\n  }, [items, newValue, props, orderDetails, vpWidth]);\n    \n  return props.error ? \n  ( \n    <div className=\"signin-error\">{props.error.message}</div> \n  ) \n  : !props.isLoaded ? \n  ( \n    <div className=\"loading\">Loading . . .</div> \n  ) \n  : error ?\n  (\n    <div>\n      <p>{error.name ? error.name + ': ' : null}{error.message}</p>\n    </div>\n  ) \n  : props.role === 'Admin' ?\n  (\n      <>\n        <div className=\"order-info no-actions\">\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} handleBlur={handleBlur} handleClick={handleClick} getClassNamesFor={getClassNamesFor} caller={{ settings: 'params' }} /> : null}\n        </div>\n        <table className=\"params-table\">\n          <thead>\n            <tr className='header-row'>\n              {headers ?\n                (\n                  <>\n                    <th               \n                      onClick={() => requestSort('EnabledDate')}\n                      className={`${getClassNamesFor('EnabledDate')} desktop`}\n                    >\n                      Enabled\n                    </th>\n                    {headers.map((header, key) => (\n                      vpWidth < 1280 ?\n                      (\n                        header !== 'Value' && header !== 'Process Job Ids' && header !== 'Category' && header !== 'Sub Category' && header !== 'Value Type' && header !== 'Notes' && header !== 'Idx' && header !== 'User Id' ?\n                        (\n                          <th\n                            key={key}\n                            onClick={() => requestSort(header.split(' ').join(''))}\n                            className={getClassNamesFor(header.split(' ').join(''))}\n                          >\n                            {header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header}\n                          </th>\n                        )\n                        :\n                        (\n                          null\n                        )\n                      )\n                      :\n                      (\n                        <th\n                          key={key}\n                          onClick={() => requestSort(header.split(' ').join(''))}\n                          className={getClassNamesFor(header.split(' ').join(''))}\n                        >\n                          {header === 'Process Job Ids' ? 'Job Ids' : header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header === 'Value Type' ? 'Type' : header}\n                        </th>\n                      )\n                    ))}\n                  </>\n                )\n                : null\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, key) => {\n                return item.Name !== 'BcAccessToken' ? \n                (\n                  <tr key={key}>\n                    <>\n                      <td \n                        className=\"checkmark editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value=\"&#10003;\"\n                        id={`checkmark-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'EnabledDate', e)} // params: id, row, column, event\n                        onClick={(e) => handleClick(e.target, key, 'EnabledDate', item.Name, item.EnabledDate, item, key)} // params: event, row, column, id, enabled date\n                        style={item.EnabledDate ? {color:'green'} : {color:'red'}}\n                      >\n                        {item.EnabledDate ? <>&#10003;</> : 'X'}\n                      </td>\n                      <td className='params-id'>\n                        {vpWidth < 1280 ?\n                        (\n                          <Link to='#' onClick={() => action('showDetails', item, key)} >\n                            {vpWidth < 500 && item.Name && item.Name.length > 15 ? item.Name.substring(0, 12) + '...' : vpWidth <= 768 && item.Name && item.Name.length > 31 ? item.Name.substring(0, 28) + '...' : item.Name ? item.Name : null}\n                          </Link>\n                        )\n                        :\n                        (\n                          item.Name\n                        )}\n                      </td>\n                      <td\n                        className=\"editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.Value ? item.Value : 'None'}\n                        // id={`${item.Value}-${key}`}\n                        id={`Value-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'Value', e)}\n                        onClick={(e) => handleClick(e.target, key, 'Value', item.Name, null, item, key)}\n                      >{item.Value ? item.Value : 'None'}\n                      </td>\n                      {vpWidth < 1280 ? null : <td className='process-job-ids'>{item.ProcessJobIds ? item.ProcessJobIds.split(',').join(', ') : 'None'}</td>}\n                      <td\n                        className=\"editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.Category ? item.Category : 'None'}\n                        // id={`${item.Category}-${key}`}\n                        id={`Category-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'Category', e)}\n                        onClick={(e) => handleClick(e.target, key, 'Category', item.Name, null, item, key)}\n                      >{item.Category ? item.Category : 'None'}</td>\n                      <td\n                        className=\"editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.SubCategory ? item.SubCategory : 'None'}\n                        // id={`${item.SubCategory}-${key}`}\n                        id={`SubCategory-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'SubCategory', e)}\n                        onClick={(e) => handleClick(e.target, key, 'SubCategory', item.Name, null, item, key)}                  \n                      >{item.SubCategory ? item.SubCategory : 'None'}</td>\n                      <td className='desktop'>{item.ValueType}</td>\n                      <td \n                        className=\"notes editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.Notes ? item.Notes : 'None'}\n                        // id={`${item.Notes}-${key}`}\n                        id={`Notes-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'Notes', e)}\n                        onClick={(e) => handleClick(e.target, key, 'Notes', item.Name, null, item, key)}                  \n                      >\n                        {item.Notes ? item.Notes : 'None'}\n                      </td>\n                      <td className='date' id={`ModifiedAt-${key}`}>{item.ModifiedAt ? new Date(parseInt(item.ModifiedAt)).toISOString().split('T')[0] : 'N/A'}</td>\n                      <td className='by-user' id={`ModifiedBy-${key}`}>{item.ModifiedBy ? item.ModifiedBy : item.UserId && isNaN(parseInt(item.UserId)) ? item.UserId : 'N/A'}</td>\n                    </>\n                  </tr>\n              ) : null\n                    })}\n          </tbody>\n        </table>        \n      </>\n  ) \n  :\n  (\n    <div className=\"role-denied\">Your profile's assigned role of \"{props.role}\" does not allow you to access this page.</div>\n  )\n};\n\nexport default Params;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}