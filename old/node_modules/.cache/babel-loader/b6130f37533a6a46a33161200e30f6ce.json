{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-orders/unpulled.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport formatHeaders from '../../hooks/format-headers';\nimport { userAction } from '../../hooks/get-order';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UnPulled = props => {\n  _s();\n\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState([]);\n  const [error, setError] = useState(null);\n  const [unpulled, setUnpulled] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [toggleShorterError, setToggleShorterError] = useState(false); // const [shortenDates, setShortenDates] = useState(false);\n\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0); // Call the sorting algorithm and set the class as ascending or descending.\n\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(unpulled, 'unpulled'); // Determine whether the class is ascending or descending.\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  }; // Format the headers.\n\n\n  const headers = unpulled && unpulled.length > 0 ? formatHeaders(Object.keys(unpulled[0]), ['Id', 'CurrencyCode', 'IgnoredAt']) : ''; // Handle the user's selected action.\n\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } else if (isChecked.length !== 0) {\n      if (path) {\n        userAction('unpulled', path, isChecked).then(res => {\n          if (res) {\n            setResponse(res.data[path]);\n            setStatus(res.status);\n            setError(null);\n            showMessage.current = true;\n          }\n        }, err => {\n          console.error({\n            err\n          });\n          setError(err.message);\n          showMessage.current = false;\n        });\n        setIsChecked([]);\n        setAllChecked(false);\n        props.recall('failedPulls');\n      }\n    } else alert('Please tick an order.'); // Deactivate action buttons if a user's profile has restrictions that match.\n\n\n    if ((props === null || props === void 0 ? void 0 : props.restrictedActions) === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }\n  }; // Handle the toggling of the select-all checkbox.\n\n\n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(unpulled.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n  }; // Handle the toggling of a single item's checkbox.\n\n\n  const handleSelect = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  }; // Set the verb to display in the message for the action links.\n\n\n  const message = action => {\n    let pastTenseVerb = null;\n\n    if (action) {\n      if (action === 'Repull') pastTenseVerb = 'repulled';\n      if (action === 'RepullAllowMismatch') pastTenseVerb = 'repulled with mismatch';\n      if (action === 'Ignore') pastTenseVerb = 'ignored'; // if (action === 'Retry') pastTenseVerb = 'repulled';\n      // if (action === 'Pull') pastTenseVerb = 'pulled';\n      // if (action === 'Push') pastTenseVerb = 'pushed';\n    }\n\n    return pastTenseVerb;\n  }; // Close the modal on click of the X.\n\n\n  const closeModal = () => {\n    setShowDetails(false); // setIsChecked([]);\n\n    clickCount.current = 0;\n  }; // Handle the click to show a modal with the full error message.\n\n\n  const toggleErrorMessage = id => {\n    if (!toggleShorterError) return;\n    const element = document.getElementById(id);\n    if (element) element.classList.toggle('show-error');\n  }; // Display long or short versions of the date based on browser width.\n  // const shortOrderDates = document.getElementsByClassName('unpulled order-dates true');\n  // const longOrderDates = document.getElementsByClassName('unpulled order-dates false');\n  // const shortAttemptedDates = document.getElementsByClassName('attempted-dates true');\n  // const longAttemptedDates = document.getElementsByClassName('attempted-dates false');\n  // if (items.length > 0) {\n  //   if (shortenDates && shortOrderDates.length > 0 && shortAttemptedDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortAttemptedDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //   } else if (!shortenDates && longOrderDates.length > 0 && longAttemptedDates.length > 0 ) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = items[i].OrderDate ? `${orderDate.split('T')[0]} at ${orderDate.split('T')[1].substring(0, 5)}` : 'None';\n  //     };\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longAttemptedDates[i];\n  //       const at = new Date(parseInt(items[i].At)).toISOString();\n  //       if (cell) cell.textContent = items[i].At ? `${at.split('T')[0]} at ${at.split('T')[1].substring(0, 5)}` : 'None';\n  //     };\n  //   }\n  // }\n  // Set the unpulled state variable with props.\n\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) setUnpulled(props.data.failedPulls);\n    return () => mounted = false;\n  }, [props]); // Manage the value of the allChecked state variable.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (unpulled && unpulled.length !== 0 && isChecked.length === unpulled.length) setAllChecked(true);else setAllChecked(false);\n    }\n\n    return () => mounted = false;\n  }, [isChecked, unpulled]); // Toggle the activeLink state variable.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';\n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : '';\n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n\n    return () => mounted = false;\n  }, [isChecked]); // Hide the message of the action's result after a new tab has been chosen.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n\n    return () => mounted = false;\n  }); // Hide checkboxes if a user is not allowed any actions.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props === null || props === void 0 ? void 0 : props.restrictedActions) {\n        if (props.restrictedActions === 'All') {\n          // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n\n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n\n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        }\n      }\n    }\n\n    return () => mounted = false;\n  }, [props === null || props === void 0 ? void 0 : props.restrictedActions, items]); // Update the vpWidth variable.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n\n      window.addEventListener('resize', handleResize);\n    }\n\n    return () => mounted = false;\n  }, [vpWidth]); // Determine the width of the browser window and set toggles accordingly.\n\n  useLayoutEffect(() => {\n    let mounted = true;\n    const browserWidth = window.innerWidth;\n\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    };\n\n    window.onresize = handleResize;\n\n    if (mounted) {\n      if (browserWidth < 768) {\n        setToggleShorterError(true); // setShortenDates(true);\n      } else {\n        setToggleShorterError(false); // setShortenDates(false);\n      }\n    }\n\n    return () => mounted = false;\n  }, [width]);\n  return props.getQuery === 'failedPulls' ? props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 7\n  }, this) : !props.isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading . . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info\",\n      children: [items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Selected: \", isChecked.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Count: \", items.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this) : null, activeLink ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-links\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"link\",\n          children: props && props.restrictedActions ? getActions('unpulled', props.restrictedActions, isChecked, takeAction) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this) : status && status !== 200 && response ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this) : '', props.callerId === 'unpulled' ? !error ? props.order ? showMessage.current && props.action && !activeLink && props.restrictedActions !== 'All' && (props.action === 'Repull' || props.action === 'Ignore' || props.action === 'Delete') ? typeof props.order === 'number' || props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order \", props.order, \" has been \", message(props.action), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following orders have been \", message(props.action), \":\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.order.map((id, key) => props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this) : key === props.order.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 47\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this) : '' : '' : props.order ? typeof props.order === 'number' || props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [\"The following error occurred when order \", props.order, \" was \", message(props.action), \": \", error, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There was a \\\"\", error, \"\\\" error when the following orders were \", message(props.action), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.order.map((id, key) => props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this) : key === props.order.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 47\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 19\n      }, this) : '' : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"unpulled-table-large\",\n      id: \"tab\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: [items.length !== 0 ? /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"checkbox-th\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: \"selectAll\",\n              handleClick: handleSelectAll,\n              isChecked: allChecked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), headers ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: headers.map((header, key) => vpWidth < 1280 ? header !== 'At' && header !== 'Exception' ? /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: `${getClassNamesFor(header.split(' ').join(''))}`,\n              children: header === 'Message' ? 'Error' : header.replace('Order', '')\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 25\n            }, this) : null : /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: `${getClassNamesFor(header.split(' ').join(''))}`,\n              children: header === 'Message' ? 'Error' : header.replace('Order', '')\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 23\n            }, this))\n          }, void 0, false) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.length !== 0 ? items.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"select-one\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: item.OrderNumber,\n              value: item.OrderNumber,\n              handleClick: handleSelect,\n              isChecked: isChecked.includes(item.OrderNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"order-number order-link\",\n            children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              onClick: () => takeAction('showDetails', item, key),\n              children: item.OrderNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 23\n            }, this) : item.OrderNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `unpulled order-dates mobile`,\n            children: item.OrderDate ? new Date(parseInt(item.OrderDate)).toISOString().split('T')[0] : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `unpulled order-dates desktop`,\n            children: item.OrderDate ? new Date(parseInt(item.OrderDate)).toISOString().split('T')[0] : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(item.OrderTotal, item.CurrencyCode)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `attempted-dates desktop`,\n            children: item.At ? new Date(parseInt(item.At)).toISOString().split('T')[0] : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            name: item.OrderNumber,\n            className: `error-message ${toggleShorterError}`,\n            onClick: () => toggleErrorMessage(item.OrderNumber),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: !toggleShorterError ? item.Message : `${item.Message.slice(0, 7)}...`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            name: item.OrderNumber,\n            id: item.OrderNumber,\n            className: \"error-message-unpulled\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-close-container\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"x-close\",\n                onClick: () => toggleErrorMessage(item.OrderNumber),\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.Message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"exception desktop\",\n            children: item.Exception ? item.Exception : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 19\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this), showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n      details: orderDetails,\n      closeModal: closeModal,\n      getClassNamesFor: getClassNamesFor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true) : '';\n};\n\n_s(UnPulled, \"+mCPdU5eVLgLeHiu86hxIAwP6Ac=\", false, function () {\n  return [useSort];\n});\n\n_c = UnPulled;\nexport default UnPulled;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnPulled\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-orders/unpulled.js"],"names":["React","useEffect","useLayoutEffect","useState","useRef","Link","Checkbox","useSort","formatCurrency","formatHeaders","userAction","getActions","OrderDetails","UnPulled","props","allChecked","setAllChecked","isChecked","setIsChecked","status","setStatus","response","setResponse","error","setError","unpulled","setUnpulled","activeLink","setActiveLink","width","setWidth","window","innerWidth","toggleShorterError","setToggleShorterError","orderDetails","setOrderDetails","showDetails","setShowDetails","vpWidth","setVpWidth","showMessage","messageRef","clickCount","items","requestSort","sortConfig","getClassNamesFor","name","key","direction","undefined","headers","length","Object","keys","takeAction","path","item","sessionStorage","setItem","scrollTo","top","behavior","then","res","data","current","err","console","message","recall","alert","restrictedActions","includes","toLowerCase","handleSelectAll","map","OrderNumber","handleSelect","event","value","checked","target","filter","action","pastTenseVerb","closeModal","toggleErrorMessage","id","element","document","getElementById","classList","toggle","mounted","failedPulls","className","getAttribute","setAttribute","replace","click","headerCheckbox","getElementsByClassName","rowCheckbox","checkbox","add","handleResize","addEventListener","browserWidth","onresize","getQuery","isLoaded","callerId","order","header","split","join","OrderDate","Date","parseInt","toISOString","OrderTotal","CurrencyCode","At","Message","slice","Exception"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport formatHeaders from '../../hooks/format-headers';\nimport { userAction } from '../../hooks/get-order';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\n\nconst UnPulled = props => {\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState([]);\n  const [error, setError] = useState(null);\n  const [unpulled, setUnpulled] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [toggleShorterError, setToggleShorterError] = useState(false);\n  // const [shortenDates, setShortenDates] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0);\n  // Call the sorting algorithm and set the class as ascending or descending.\n  const { items, requestSort, sortConfig } = useSort(unpulled, 'unpulled');\n  \n  // Determine whether the class is ascending or descending.\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  // Format the headers.\n  const headers = unpulled && unpulled.length > 0 ? formatHeaders(Object.keys(unpulled[0]), ['Id', 'CurrencyCode', 'IgnoredAt']) : '';\n\n  // Handle the user's selected action.\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      if (path) {\n        userAction('unpulled', path, isChecked).then(\n          res => {\n            if (res) {\n              setResponse(res.data[path]);\n              setStatus(res.status);\n              setError(null);\n              showMessage.current = true;\n            }\n          },\n          err => {\n            console.error({err});\n            setError(err.message);\n            showMessage.current = false;\n          }\n        );\n        setIsChecked([]);\n        setAllChecked(false);\n        props.recall('failedPulls');\n      }\n    } else alert('Please tick an order.');\n\n    // Deactivate action buttons if a user's profile has restrictions that match.\n    if (props?.restrictedActions === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }    \n  };\n  \n  // Handle the toggling of the select-all checkbox.\n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(unpulled.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n  };\n\n  // Handle the toggling of a single item's checkbox.\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n\n  // Set the verb to display in the message for the action links.\n  const message = (action) => {\n    let pastTenseVerb = null;\n    if (action) {\n      if (action === 'Repull') pastTenseVerb = 'repulled';\n      if (action === 'RepullAllowMismatch')\n        pastTenseVerb = 'repulled with mismatch';\n      if (action === 'Ignore') pastTenseVerb = 'ignored';\n      // if (action === 'Retry') pastTenseVerb = 'repulled';\n      // if (action === 'Pull') pastTenseVerb = 'pulled';\n      // if (action === 'Push') pastTenseVerb = 'pushed';\n    }\n    return pastTenseVerb;\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    // setIsChecked([]);\n    clickCount.current = 0;\n  };\n\n  // Handle the click to show a modal with the full error message.\n  const toggleErrorMessage = id => {\n    if (!toggleShorterError) return;\n    const element = document.getElementById(id);\n    if (element) element.classList.toggle('show-error');\n  };\n\n  // Display long or short versions of the date based on browser width.\n  // const shortOrderDates = document.getElementsByClassName('unpulled order-dates true');\n  // const longOrderDates = document.getElementsByClassName('unpulled order-dates false');\n  // const shortAttemptedDates = document.getElementsByClassName('attempted-dates true');\n  // const longAttemptedDates = document.getElementsByClassName('attempted-dates false');\n\n  // if (items.length > 0) {\n  //   if (shortenDates && shortOrderDates.length > 0 && shortAttemptedDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortAttemptedDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //   } else if (!shortenDates && longOrderDates.length > 0 && longAttemptedDates.length > 0 ) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = items[i].OrderDate ? `${orderDate.split('T')[0]} at ${orderDate.split('T')[1].substring(0, 5)}` : 'None';\n  //     };\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longAttemptedDates[i];\n  //       const at = new Date(parseInt(items[i].At)).toISOString();\n  //       if (cell) cell.textContent = items[i].At ? `${at.split('T')[0]} at ${at.split('T')[1].substring(0, 5)}` : 'None';\n  //     };\n  //   }\n  // }\n\n  // Set the unpulled state variable with props.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) setUnpulled(props.data.failedPulls);\n    return () => mounted = false;\n  }, [props]);\n\n  // Manage the value of the allChecked state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (unpulled && unpulled.length !== 0 && isChecked.length === unpulled.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, unpulled]);\n\n  // Toggle the activeLink state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';  \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n  \n  // Hide the message of the action's result after a new tab has been chosen.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n    return () => mounted = false;\n  });\n\n  // Hide checkboxes if a user is not allowed any actions.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props?.restrictedActions) {\n        if (props.restrictedActions === 'All') { // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n    \n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n    \n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        } \n      }\n    }\n\n    return () => mounted = false;\n  }, [props?.restrictedActions, items]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n  \n  // Determine the width of the browser window and set toggles accordingly.\n  useLayoutEffect(() => {\n    let mounted = true;\n    const browserWidth = window.innerWidth;\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    } \n    window.onresize = handleResize;\n\n    if (mounted) {\n      if (browserWidth < 768) {\n        setToggleShorterError(true);\n        // setShortenDates(true);\n      } else {\n        setToggleShorterError(false);\n        // setShortenDates(false);\n      }\n    }\n    return () => mounted = false;\n  }, [width]);\n  \n  return props.getQuery === 'failedPulls' ?\n  ( \n    props.error ? \n    ( \n      <div className=\"signin-error\">{props.error.message}</div>\n    ) : !props.isLoaded ? \n    ( \n      <div className=\"loading\">Loading . . .</div>\n    ) : (\n      <>\n        <div className=\"order-info\">\n          {items.length > 0 ? \n          (\n            <div className='stats'>\n              <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n              <p className=\"order-info-number-display\">Count: {items.length}</p>\n            </div>\n          )\n          :\n          (\n            null\n          )}\n          {activeLink ? \n          (\n            <div className=\"action-links\">\n              <form className=\"link\">\n                {props && props.restrictedActions ? getActions('unpulled', props.restrictedActions, isChecked, takeAction) : null}\n              </form>\n            </div>\n          ) : status && status !== 200 && response ? \n          (\n            <div>Error: {error}</div>\n          ) : (\n            ''\n          )}\n          {props.callerId === 'unpulled' ? (\n            !error ? (\n              props.order ? (\n                showMessage.current && props.action && !activeLink && props.restrictedActions !== 'All' && (props.action === 'Repull' || props.action === 'Ignore' || props.action === 'Delete') ? (\n                  typeof props.order === 'number' || props.order.length === 1 ? (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>Order {props.order} has been {message(props.action)}.</p>\n                    </div>\n                    ) : (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>The following orders have been {message(props.action)}:&nbsp;</p>\n                      <div className='orders-in-array'>\n                        {props.order.map((id, key) => (\n                          props.order.length === 1 ? \n                          ( \n                            <p key={key}>{id}</p>\n                          )\n                          : key === props.order.length - 1 ?\n                          (\n                            <p key={key}>{id}.</p>\n                          )\n                          :\n                          (\n                            <p key={key}>{id},<span>&nbsp;</span></p>\n                          )                          \n                        ))}\n                      </div>\n                    </div>\n                    )\n                  ) : (\n                  ''\n                  ) \n              ) : (\n                ''\n              )\n            ) : (\n              props.order ? (\n                typeof props.order === 'number' || props.order.length === 1 ? (\n                <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                  The following error occurred when order {props.order} was {message(props.action)}: {error}.\n                </div>\n                ) : (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                  <p>There was a \"{error}\" error when the following orders were {message(props.action)}:</p>\n                  <div className='orders-in-array'>\n                  {props.order.map((id, key) => (\n                          props.order.length === 1 ? \n                          ( \n                            <p key={key}>{id}</p>\n                          )\n                          : key === props.order.length - 1 ?\n                          (\n                            <p key={key}>{id}.</p>\n                          )\n                          :\n                          (\n                            <p key={key}>{id},<span>&nbsp;</span></p>\n                          )                          \n                        ))}\n                  </div>\n                </div>\n                )\n              ) : (\n                ''\n              )\n            )\n          ) : (\n            ''\n          )}\n        </div>\n        <table className=\"unpulled-table-large\" id=\"tab\">\n          <thead>\n            <tr className='header-row'>\n              {items.length !== 0 ? (\n                <th className='checkbox-th'>\n                <Checkbox\n                    type='checkbox'\n                    name='selectAll'\n                    handleClick={handleSelectAll}\n                    isChecked={allChecked}\n                  />\n                </th>\n              ) : (\n                <th className='hidden-checkbox'></th>\n              )}\n              {headers ? \n              (\n                <>\n                  {headers.map((header, key) => (\n                    vpWidth < 1280 ?\n                    (\n                      header !== 'At' && header !== 'Exception' ?\n                      (\n                        <th\n                          key={key}\n                          onClick={() => requestSort(header.split(' ').join(''))}\n                          className={`${getClassNamesFor(header.split(' ').join(''))}`}\n                        >\n                          {header === 'Message' ? 'Error' : header.replace('Order', '')}\n                        </th>\n                      )\n                      :\n                      (\n                        null\n                      )\n                    )\n                    :\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={`${getClassNamesFor(header.split(' ').join(''))}`}\n                      >\n                          {header === 'Message' ? 'Error' : header.replace('Order', '')}\n                      </th>\n                    )\n                  ))}\n                </>\n              )\n              : \n                null\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {items.length !== 0 ? \n            (\n              items.map((item, key) => (\n                <tr key={key}>\n                  <td className='select-one'>\n                    <Checkbox\n                      type='checkbox'\n                      name={item.OrderNumber}\n                      value={item.OrderNumber}\n                      handleClick={handleSelect}\n                      isChecked={isChecked.includes(item.OrderNumber)}\n                    />\n                  </td>\n                  <td className=\"order-number order-link\">\n                    {vpWidth < 1280 ?\n                    (\n                      <Link\n                        to='#'\n                        onClick={() => takeAction('showDetails', item, key)}\n                      >\n                        {item.OrderNumber}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.OrderNumber\n                    )}\n                  </td>\n\n                  <td className={`unpulled order-dates mobile`}>\n                    {item.OrderDate ? \n                    (\n                      new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]\n                    ) : (\n                      'None'\n                    )}\n                  </td>\n                  {/* To-do: CSS this in at a certain screen width. */}\n                  <td className={`unpulled order-dates desktop`}>\n                    {item.OrderDate ? \n                    (\n                      new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]\n                    ) : (\n                      'None'\n                    )}\n                  </td>\n\n                  <td>{formatCurrency(item.OrderTotal, item.CurrencyCode)}</td>\n\n                  {/* To-do: CSS this in at a certain screen width. */}\n                  <td className={`attempted-dates desktop`}>\n                    {item.At ? \n                    (\n                      new Date(parseInt(item.At)).toISOString().split('T')[0]\n                    ) : (\n                      'None'\n                    )}\n                  </td>\n\n                  <td \n                    name={item.OrderNumber} \n                    className={`error-message ${toggleShorterError}`} \n                    onClick={() => toggleErrorMessage(item.OrderNumber)}\n                  >\n                    <p>{!toggleShorterError ? item.Message : `${item.Message.slice(0, 7)}...`}</p>\n                  </td>\n                  <td \n                    name={item.OrderNumber} \n                    id={item.OrderNumber} \n                    className='error-message-unpulled'\n                  >\n                    <div className='x-close-container'>\n                      <span className=\"x-close\" onClick={() => toggleErrorMessage(item.OrderNumber)}>x</span>\n                    </div>\n                    <p>{item.Message}</p>\n                  </td>\n                  <td className='exception desktop'>{item.Exception ? item.Exception : 'None'}</td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td className='hidden-checkbox'></td>\n                <td>None</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> : null}\n      </>\n    )\n  ) : (\n    ''\n  );\n};\n\nexport default UnPulled;\n"]},"metadata":{},"sourceType":"module"}