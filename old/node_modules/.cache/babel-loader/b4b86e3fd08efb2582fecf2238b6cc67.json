{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/users/users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport User from './user';\nimport UserClass from '../../hooks/get-user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = props => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const [error, setError] = useState('');\n  const [rerender, setRerender] = useState(false);\n  const currentTab = useRef(null);\n  const params = useLocation();\n  const state = params === null || params === void 0 ? void 0 : params.state; // Set the current tab.\n\n  const handleClick = callerId => {\n    setRerender(!rerender);\n    currentTab.current = callerId;\n  }; // Refresh the users page.\n\n\n  const recall = () => {\n    setIsLoaded(false);\n    setRerender(!rerender);\n  }; // Get users from the db.\n\n\n  useEffect(() => {\n    let mounted = true;\n    const user = new UserClass();\n\n    if (mounted) {\n      user.getAllUsers().then(res => {\n        if (res.data) {\n          if (res.data.users) setUsers(Array.isArray(res.data.users) ? res.data.users : [res.data.users]);\n          setIsLoaded(true);\n          setError(null);\n        } else if (res.name) {\n          setError({\n            code: res.name,\n            message: res.message\n          });\n          setIsLoaded(true);\n        }\n      }, err => {\n        console.error({\n          err\n        });\n        setError(err);\n        setIsLoaded(false);\n      });\n    }\n\n    return () => mounted = false;\n  }, [rerender]); // Set the user from local storage.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n    }\n\n    return () => mounted = false;\n  }, []);\n  return !loggedInUser ?\n  /*#__PURE__*/\n  // The user is not logged in, so return her to the log-in page.\n  _jsxDEV(Redirect, {\n    to: {\n      pathname: '/login',\n      state: {\n        // id,\n        action: 'Sign In',\n        message: 'Please sign in.'\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this) : loggedInUser.restrictions.pages === 'None' || !loggedInUser.restrictions.pages.includes('Users') ? !props.clearId ? props.role !== 'User' ? /*#__PURE__*/_jsxDEV(User, {\n    users: users,\n    isLoaded: isLoaded,\n    error: error,\n    handleClick: handleClick,\n    activeTab: currentTab.current,\n    recall: recall,\n    role: props.role,\n    action: state === null || state === void 0 ? void 0 : state.action,\n    id: state === null || state === void 0 ? void 0 : state.id,\n    message: state === null || state === void 0 ? void 0 : state.message,\n    liftData: props.liftData,\n    liftUser: props.liftUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-denied\",\n    children: [\"Your profile's assigned role of \\\"\", props.role, \"\\\" does not allow you to access this page.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 11\n  }, this) : null : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-denied\",\n    children: [\"Your profile's assigned role of \\\"\", loggedInUser.role, \"\\\" does not allow you to access this page.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Users, \"taeYFSs518h3Qq2oLXSdoJRpzrQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/users/users.js"],"names":["React","useState","useEffect","useRef","useLocation","Redirect","User","UserClass","Users","props","users","setUsers","isLoaded","setIsLoaded","loggedInUser","setLoggedInUser","localStorage","getItem","JSON","parse","error","setError","rerender","setRerender","currentTab","params","state","handleClick","callerId","current","recall","mounted","user","getAllUsers","then","res","data","Array","isArray","name","code","message","err","console","pathname","action","restrictions","pages","includes","clearId","role","id","liftData","liftUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, Redirect } from 'react-router-dom';\nimport User from './user';\nimport UserClass from '../../hooks/get-user';\n\nconst Users = (props) => {\n  const [users, setUsers] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n  const [error, setError] = useState('');\n  const [rerender, setRerender] = useState(false);\n  const currentTab = useRef(null);\n  const params = useLocation();  \n  const state = params?.state;\n\n  // Set the current tab.\n  const handleClick = (callerId) => {\n    setRerender(!rerender);\n    currentTab.current = callerId;\n  }\n\n  // Refresh the users page.\n  const recall = () => {\n   setIsLoaded(false);\n   setRerender(!rerender);\n  }\n\n  // Get users from the db.\n  useEffect(() => {\n    let mounted = true;\n    const user = new UserClass();\n    \n    if (mounted) {\n      user.getAllUsers().then(\n        res => {          \n          if (res.data) {\n            if (res.data.users) setUsers(Array.isArray(res.data.users) ? res.data.users : [res.data.users]);\n            setIsLoaded(true);\n            setError(null);\n          } else if (res.name) {\n            setError({code: res.name, message: res.message});\n            setIsLoaded(true);\n          }\n        },\n        err => {\n          console.error({err});\n          setError(err);\n          setIsLoaded(false);\n        }\n      );\n    }\n    \n    return () => mounted = false;\n  }, [rerender]);\n  \n  // Set the user from local storage.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setLoggedInUser(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null);\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return !loggedInUser ? \n  ( // The user is not logged in, so return her to the log-in page.\n    <Redirect to=\n      {\n        {\n          pathname: '/login',\n          state: {\n            // id,\n            action: 'Sign In',\n            message: 'Please sign in.'\n          },\n        }\n      }\n    />\n  ) \n  :\n  (\n    loggedInUser.restrictions.pages === 'None' || !loggedInUser.restrictions.pages.includes('Users') ?\n    (\n      !props.clearId ?\n      (\n        props.role !== 'User' ?\n          <User users={users} isLoaded={isLoaded} error={error} handleClick={handleClick} activeTab={currentTab.current} recall={recall} role={props.role} action={state?.action} id={state?.id} message={state?.message} liftData={props.liftData} liftUser={props.liftUser} />\n        : <div className=\"role-denied\">Your profile's assigned role of \"{props.role}\" does not allow you to access this page.</div>\n      )\n      : \n      (\n        null\n      )\n    )\n    :\n    (\n      <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser.role}\" does not allow you to access this page.</div>\n    )\n  )\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}