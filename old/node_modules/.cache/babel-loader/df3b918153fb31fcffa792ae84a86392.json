{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/settings/params.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport getType from '../../hooks/get-type';\nimport selectElementContents from '../../hooks/select-all';\nimport logChange from '../../hooks/log-change';\nimport { updateSettings, getParamByName } from '../../hooks/get-settings';\nimport formatHeaders from '../../hooks/format-headers';\nimport OrderDetails from '../../components/order-details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Params = props => {\n  _s();\n\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [newValue, setNewValue] = useState({});\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n\n  const changeDate = useRef('');\n  const clickCount = useRef(0);\n  const clickLocation = useRef('');\n  const updated = useRef(false);\n  let {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(props.paramsData ? props.paramsData : '', 'params');\n  const error = items && Array.isArray(items) && items.length === 1 && items[0].message ? items[0] : '';\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'Name' !== name && 'ValueType' !== name && 'ModifiedAt' !== name && 'ModifiedBy' !== name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]); // Format the headers.\n\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['ValueTypeId', 'EnabledDate', 'CreatedAt', 'CreatedBy', 'UserId', 'Error']) : '';\n\n  const handleClick = (event, row, column, id, enabledDate = null, item, idx) => {\n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue,\n        element;\n    if ('âœ“' === defaultValue) element = document.getElementById(`checkmark-${row}`);else element = document.getElementById(`${column}-${row}`);\n    if (clickLocation.current !== event.id) clickCount.current = 0;\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n\n    clickCount.current++;\n    clickLocation.current = event.id;\n\n    if ('Name' !== column) {\n      // Editing the Name column is not allowed, it being the PK in the db table.\n      if (defaultValue !== currentValue) {\n        // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n        element.textContent = defaultValue;\n        element.removeAttribute('style');\n      } else {\n        if ('EnabledDate' !== column) element.setAttribute('contentEditable', 'true');else element.textContent = 'No';\n      }\n    }\n\n    if ('EnabledDate' === column) {\n      // Update the EnabledDate in the db with today's date/time (in YYYY-MM-DD HH:MM:SS).\n      currentValue = 'No' === currentValue ? new Date().toISOString() : 'disable';\n      defaultValue = 'disable' || 'No' === currentValue ? `checkmark-${row}` : defaultValue;\n      setNewValue({\n        id,\n        row,\n        column,\n        prevVal: defaultValue,\n        newVal: currentValue,\n        enabledDate,\n        idx\n      });\n\n      if (vpWidth < 1280) {\n        item['EnabledDate'] = currentValue;\n        setOrderDetails(item);\n      }\n    }\n  }; // Handle user edits.\n\n\n  const handleBlur = (id, row, column, event, idx) => {\n    const prevValue = event.target.dataset.defaultValue ? event.target.dataset.defaultValue : 'None';\n    const newVal = event.target.textContent ? event.target.textContent : 'None';\n    const table = 'AppParams';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (prevValue === newVal) {\n      element.removeAttribute('contentEditable');\n      return;\n    } // Get the column's configuration from the DB.\n\n\n    if (table && column) {\n      getType(table, column).then(res => {\n        dataType.current = res; // Check the input against type and length.\n\n        if (JSON.stringify(dataType.current) !== '{}') {\n          if (newVal) {\n            const columnName = dataType.current.ColumnName;\n\n            if (columnName === column) {\n              const type = dataType.current.DataType;\n              let typeNewValue = columnName === 'ValueType' ? parseInt(newVal) : newVal;\n              typeNewValue = Number.isNaN(typeNewValue) ? typeNewValue : typeof typeNewValue;\n\n              if (type === typeNewValue) {\n                if (dataType.current.MaxLength > newVal.length || !dataType.current.MaxLength) {\n                  if (prevValue !== newVal) {\n                    if (!/<\\/?[a-z][\\s\\S]*>/i.test(newVal)) {\n                      // Check that no html is being introduced.\n                      if (vpWidth > 1280) {\n                        items[row][column] = newVal ? newVal : 'None'; // For desktop.\n                      } else {\n                        if (idx) items[idx][column] = newVal ? newVal : 'None'; // For edits in the modal.\n                      }\n\n                      element.textContent = newVal;\n                      setNewValue({\n                        id,\n                        row,\n                        column,\n                        prevValue,\n                        newVal,\n                        idx\n                      });\n                    } else {\n                      element.setAttribute('style', 'color: red');\n                      element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                      element.scrollIntoViewIfNeeded({\n                        behavior: 'smooth',\n                        inline: 'start'\n                      });\n                    }\n                  }\n                }\n              } else {\n                element.setAttribute('style', 'color: red');\n                element.textContent = `The new value's datatype (${typeof newVal}) doesn't match the databases's data type (${type}).`;\n                element.scrollIntoViewIfNeeded({\n                  behavior: 'smooth',\n                  inline: 'start'\n                });\n              }\n            }\n          } else {\n            element.textContent = prevValue;\n          }\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    }\n  }; // Handles the action chosen by the user, if applicable.\n\n\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } //Store a flag in storage to indicate that a new action has been initiated.\n\n\n    sessionStorage.setItem('action', true);\n  }; // Close the modal on click of the X.\n\n\n  const closeModal = () => {\n    setShowDetails(false);\n    clickCount.current = 0; // setIsChecked([]);\n  }; // Update the vpWidth variable.\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n\n      window.addEventListener('resize', handleResize);\n    }\n\n    return () => mounted = false;\n  }, [vpWidth]); // Send updates to the db for edited fields.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const element = document.getElementById(`${newValue.column}-${newValue.row}`);\n\n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        // Get the parameter's previous value.\n        getParamByName(newValue.id).then(res => {\n          var _res$getParamByName, _res$getParamByName2;\n\n          const prevEnabledDate = res === null || res === void 0 ? void 0 : (_res$getParamByName = res.getParamByName) === null || _res$getParamByName === void 0 ? void 0 : _res$getParamByName.EnabledDate;\n          const paramByNameError = res === null || res === void 0 ? void 0 : (_res$getParamByName2 = res.getParamByName) === null || _res$getParamByName2 === void 0 ? void 0 : _res$getParamByName2.Error; // Update the parameter's value in the AppParams table.\n\n          updateSettings('params', newValue.id, newValue.column, newValue.newVal).then(res => {\n            var _res$data, _res$data2, _res$data2$paramsUpda, _res$data3, _res$data3$paramsUpda, _res$data4, _res$data4$paramsUpda;\n\n            let value = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.paramsUpdate[newValue.column];\n            const valueType = res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$paramsUpda = _res$data2.paramsUpdate) === null || _res$data2$paramsUpda === void 0 ? void 0 : _res$data2$paramsUpda.ValueTypeId;\n            const error = res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$paramsUpda = _res$data3.paramsUpdate) === null || _res$data3$paramsUpda === void 0 ? void 0 : _res$data3$paramsUpda.Error;\n            const userId = JSON.parse(localStorage.getItem('user')).id;\n            const enabledDate = res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : (_res$data4$paramsUpda = _res$data4.paramsUpdate) === null || _res$data4$paramsUpda === void 0 ? void 0 : _res$data4$paramsUpda.EnabledDate;\n            if (typeof value === 'number') value = JSON.stringify(value);\n\n            if (value === newValue.newVal || newValue.column === 'EnabledDate') {\n              if (element) {\n                const modifiedAtElement = document.getElementById(`ModifiedAt-${newValue.row}`);\n                const modifiedByElement = document.getElementById(`ModifiedBy-${newValue.row}`);\n                element.removeAttribute('contentEditable'); // element.textContent = newValue.newVal ? newValue.newVal : 'None';\n\n                modifiedAtElement.textContent = new Date().toISOString().split('T')[0];\n                modifiedByElement.textContent = props.user.name;\n                if (newValue.column !== 'EnabledDate') element.setAttribute('data-default-value', newValue.newVal);\n                element.scrollIntoViewIfNeeded({\n                  behavior: 'smooth',\n                  inline: 'start'\n                });\n                element.classList.toggle('edited');\n                setTimeout(() => {\n                  element.classList.toggle('edited');\n                  updated.current = true;\n                }, 2000);\n              } // Log the change to the database.\n\n\n              logChange('AppParams', newValue.column, userId, newValue.prevValue, newValue.newVal, valueType).then(res => {\n                if (res.data) {\n                  var _res$data5, _res$data5$logChange;\n\n                  const changeDateTime = (_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : (_res$data5$logChange = _res$data5.logChange) === null || _res$data5$logChange === void 0 ? void 0 : _res$data5$logChange.DateTime;\n                  changeDate.current = changeDateTime;\n                } else if (res.errors) {\n                  console.error(res.errors);\n                }\n              }, err => {\n                console.error({\n                  err\n                });\n              });\n            } else if (error && null !== error.message) {\n              element.textContent = error.message + ' Please correct your input.';\n              element.setAttribute('style', 'color:red');\n            } else {\n              // Special logging for the date-enabled column.\n              if (newValue.column === 'EnabledDate' & !paramByNameError) {\n                logChange('AppParams', newValue.column, userId, prevEnabledDate ? new Date(parseInt(prevEnabledDate)).toISOString() : null, enabledDate ? new Date(parseInt(enabledDate)).toISOString() : null, 8).then(res => {\n                  var _res$logChange;\n\n                  const changeDateTime = res === null || res === void 0 ? void 0 : (_res$logChange = res.logChange) === null || _res$logChange === void 0 ? void 0 : _res$logChange.DateTime;\n                  changeDate.current = changeDateTime;\n                }, err => {\n                  console.error({\n                    err\n                  });\n                });\n              } else {\n                console.error({\n                  paramByNameError\n                });\n              }\n            }\n          }, err => {\n            console.error({\n              err\n            });\n          });\n        }, err => {\n          console.error(err);\n        });\n      }\n    }\n\n    return () => mounted = false;\n  }, [items, newValue, props, orderDetails, vpWidth]);\n  return props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this) : !props.isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading . . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [error.name ? error.name + ': ' : null, error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this) : props.role === 'Admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info no-actions\",\n      children: showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n        details: orderDetails,\n        closeModal: closeModal,\n        handleBlur: handleBlur,\n        handleClick: handleClick,\n        getClassNamesFor: getClassNamesFor,\n        caller: {\n          settings: 'params'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 24\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"params-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: headers ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort('EnabledDate'),\n              className: `${getClassNamesFor('EnabledDate')} desktop`,\n              children: \"Enabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this), headers.map((header, key) => vpWidth < 1280 ? header !== 'Value' && header !== 'Category' && header !== 'Sub Category' && header !== 'Value Type' && header !== 'Notes' && header !== 'Idx' && header !== 'User Id' ? /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: getClassNamesFor(header.split(' ').join('')),\n              children: header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 27\n            }, this) : null : /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: getClassNamesFor(header.split(' ').join('')),\n              children: header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header === 'Value Type' ? 'Type' : header\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map((item, key) => {\n          return item.Name !== 'BcAccessToken' ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"checkmark editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": \"\\u2713\",\n                id: `checkmark-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'EnabledDate', e) // params: id, row, column, event\n                ,\n                onClick: e => handleClick(e.target, key, 'EnabledDate', item.Name, item.EnabledDate, item) // params: event, row, column, id, enabled date\n                ,\n                children: item.EnabledDate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: \"\\u2713\"\n                }, void 0, false) : 'No'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"params-id\",\n                children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"#\",\n                  onClick: () => action('showDetails', item, key),\n                  children: vpWidth < 500 && item.Name && item.Name.length > 15 ? item.Name.substring(0, 12) + '...' : vpWidth <= 768 && item.Name && item.Name.length > 31 ? item.Name.substring(0, 28) + '...' : item.Name ? item.Name : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 27\n                }, this) : item.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this), item.Value && item.Value.includes('|') ? /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.Value.split('\\n').map(val => {\n                  const setting = val.split('|');\n                  const key = setting[0];\n                  let value = setting[1],\n                      result;\n                  if (value && value.includes('~')) value = value.replace('~', ', ');\n                  if (value) value = value.trimEnd();\n                  if (value && value[value.length - 1] === ',') value = value.substring(0, value.length - 1);\n                  result = key && value ? `${key}: ${value}\\n` : '';\n                  return result;\n                }) // id={`${item.Value}-${key}`}\n                ,\n                id: `Value-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'Value', e),\n                onClick: e => handleClick(e.target, key, 'Value', item.Name),\n                children: item.Value.split('\\n').map(val => {\n                  const setting = val.split('|');\n                  const key = setting[0];\n                  let value = setting[1];\n                  let result;\n                  if (value && value.includes('~')) value = value.replace('~', ', ');\n                  if (value) value = value.trimEnd();\n                  if (value && value[value.length - 1] === ',') value = value.substring(0, value.length - 1);\n                  result = key && value ? `${key}: ${value}\\n` : '';\n                  return result;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.Value // id={`${item.Value}-${key}`}\n                ,\n                id: `Value-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'Value', e),\n                onClick: e => handleClick(e.target, key, 'Value', item.Name),\n                children: item.Value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.Category // id={`${item.Category}-${key}`}\n                ,\n                id: `Category-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'Category', e),\n                onClick: e => handleClick(e.target, key, 'Category', item.Name),\n                children: item.Category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.SubCategory // id={`${item.SubCategory}-${key}`}\n                ,\n                id: `SubCategory-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'SubCategory', e),\n                onClick: e => handleClick(e.target, key, 'SubCategory', item.Name),\n                children: item.SubCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"desktop\",\n                children: item.ValueType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"notes editable desktop\",\n                suppressContentEditableWarning: \"true\",\n                \"data-default-value\": item.Notes // id={`${item.Notes}-${key}`}\n                ,\n                id: `Notes-${key}`,\n                onBlur: e => handleBlur(item.Name, key, 'Notes', e),\n                onClick: e => handleClick(e.target, key, 'Notes', item.Name),\n                children: item.Notes ? item.Notes : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"date\",\n                id: `ModifiedAt-${key}`,\n                children: item.ModifiedAt ? new Date(parseInt(item.ModifiedAt)).toISOString().split('T')[0] : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"by-user\",\n                id: `ModifiedBy-${key}`,\n                children: item.ModifiedBy ? item.ModifiedBy : item.UserId && isNaN(parseInt(item.UserId)) ? item.UserId : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this) : null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-denied\",\n    children: [\"Your profile's assigned role of \\\"\", props.role, \"\\\" does not allow you to access this page.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Params, \"5Zj56UAe9v4BCDRejs92GXj3M98=\", false, function () {\n  return [useSort];\n});\n\n_c = Params;\nexport default Params;\n\nvar _c;\n\n$RefreshReg$(_c, \"Params\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/settings/params.js"],"names":["React","useState","useEffect","useCallback","useRef","Link","useSort","getType","selectElementContents","logChange","updateSettings","getParamByName","formatHeaders","OrderDetails","Params","props","orderDetails","setOrderDetails","showDetails","setShowDetails","newValue","setNewValue","vpWidth","setVpWidth","window","innerWidth","dataType","changeDate","clickCount","clickLocation","updated","items","requestSort","sortConfig","paramsData","error","Array","isArray","length","message","getClassNamesFor","name","className","key","direction","undefined","headers","Object","keys","handleClick","event","row","column","id","enabledDate","item","idx","currentValue","textContent","defaultValue","dataset","element","document","getElementById","current","removeAttribute","setAttribute","Date","toISOString","prevVal","newVal","handleBlur","prevValue","target","table","then","res","JSON","stringify","columnName","ColumnName","type","DataType","typeNewValue","parseInt","Number","isNaN","MaxLength","test","scrollIntoViewIfNeeded","behavior","inline","err","console","action","path","scrollTo","top","sessionStorage","setItem","closeModal","mounted","handleResize","addEventListener","prevEnabledDate","EnabledDate","paramByNameError","Error","value","data","paramsUpdate","valueType","ValueTypeId","userId","parse","localStorage","getItem","modifiedAtElement","modifiedByElement","split","user","classList","toggle","setTimeout","changeDateTime","DateTime","errors","isLoaded","role","settings","map","header","join","Name","e","substring","Value","includes","val","setting","result","replace","trimEnd","Category","SubCategory","ValueType","Notes","ModifiedAt","ModifiedBy","UserId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport getType from '../../hooks/get-type';\nimport selectElementContents from '../../hooks/select-all';\nimport logChange from '../../hooks/log-change';\nimport { updateSettings, getParamByName } from '../../hooks/get-settings';\nimport formatHeaders from '../../hooks/format-headers';\nimport OrderDetails from '../../components/order-details';\n\nconst Params = props => {  \n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [newValue, setNewValue] = useState({});\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const clickCount = useRef(0);\n  const clickLocation = useRef('');\n  const updated = useRef(false);\n  let { items, requestSort, sortConfig } = useSort(props.paramsData ? props.paramsData : '', 'params');\n  const error = items && Array.isArray(items) && items.length === 1 && items[0].message ? items[0] : '';\n\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n\n    let className = 'Name' !== name && 'ValueType' !== name && 'ModifiedAt' !== name && 'ModifiedBy' !== name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n\n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['ValueTypeId', 'EnabledDate', 'CreatedAt', 'CreatedBy', 'UserId', 'Error']) : '';\n\n  const handleClick = (event, row, column, id, enabledDate = null, item, idx) => {    \n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue, element;\n\n    if ('âœ“' === defaultValue) element = document.getElementById(`checkmark-${row}`);\n    else element = document.getElementById(`${column}-${row}`);\n    \n    if (clickLocation.current !== event.id) clickCount.current = 0;\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    clickCount.current++;\n    clickLocation.current = event.id;\n\n    if ('Name' !== column) { // Editing the Name column is not allowed, it being the PK in the db table.\n      if (defaultValue !== currentValue) { // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n        element.textContent = defaultValue;\n        element.removeAttribute('style');\n      } else {\n        if ('EnabledDate' !== column) element.setAttribute('contentEditable', 'true');\n        else element.textContent = 'No';\n      }\n    }\n    \n    if ('EnabledDate' === column) { // Update the EnabledDate in the db with today's date/time (in YYYY-MM-DD HH:MM:SS).\n      currentValue = 'No' === currentValue ? new Date().toISOString() : 'disable';\n      defaultValue = 'disable' || 'No' === currentValue ? `checkmark-${row}` : defaultValue;\n      setNewValue({ id, row, column, prevVal: defaultValue, newVal: currentValue, enabledDate, idx });\n\n      if (vpWidth < 1280) {\n        item['EnabledDate'] = currentValue;\n        setOrderDetails(item);\n      }\n    }\n  }\n\n  // Handle user edits.\n  const handleBlur = (id, row, column, event, idx) => {    \n    const prevValue = event.target.dataset.defaultValue ? event.target.dataset.defaultValue : 'None';\n    const newVal = event.target.textContent ? event.target.textContent : 'None';\n    const table = 'AppParams';\n    const element = document.getElementById(`${column}-${row}`);\n\n    if (prevValue === newVal) {\n      element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(\n        res => {\n          dataType.current = res;\n\n          // Check the input against type and length.\n          if (JSON.stringify(dataType.current) !== '{}') {\n            if (newVal) {\n              const columnName = dataType.current.ColumnName;\n              if (columnName === column) {\n                const type = dataType.current.DataType;\n                let typeNewValue = columnName === 'ValueType' ? parseInt(newVal) : newVal;\n                typeNewValue = Number.isNaN(typeNewValue) ? typeNewValue : typeof typeNewValue;\n\n                if (type === typeNewValue) {\n                  if (dataType.current.MaxLength > newVal.length || !dataType.current.MaxLength) {\n                    if (prevValue !== newVal) {\n                      if (!/<\\/?[a-z][\\s\\S]*>/i.test(newVal)) { // Check that no html is being introduced.\n                        if (vpWidth > 1280) {                   \n                          items[row][column] = newVal ? newVal : 'None'; // For desktop.\n                        } else {\n                          if (idx) items[idx][column] = newVal ? newVal : 'None'; // For edits in the modal.\n                        }      \n                        element.textContent = newVal;\n                        setNewValue({ id, row, column, prevValue, newVal, idx });\n                      } else {\n                        element.setAttribute('style', 'color: red');\n                        element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                        element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                      }\n                    } \n                  }\n                } else {\n                  element.setAttribute('style', 'color: red');\n                  element.textContent = `The new value's datatype (${typeof newVal}) doesn't match the databases's data type (${type}).`;\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                }\n              }\n            } else {\n              element.textContent = prevValue;\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n  };\n\n  // Handles the action chosen by the user, if applicable.\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    \n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    clickCount.current = 0;\n    // setIsChecked([]);\n  };  \n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n\n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById(`${newValue.column}-${newValue.row}`);\n            \n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        // Get the parameter's previous value.\n        getParamByName(newValue.id).then(\n          res => {\n            const prevEnabledDate = res?.getParamByName?.EnabledDate;\n            const paramByNameError = res?.getParamByName?.Error;\n  \n            // Update the parameter's value in the AppParams table.\n            updateSettings('params', newValue.id, newValue.column, newValue.newVal).then(\n              res => {                \n                let value = res?.data?.paramsUpdate[newValue.column];\n                const valueType = res?.data?.paramsUpdate?.ValueTypeId;\n                const error = res?.data?.paramsUpdate?.Error;\n                const userId = JSON.parse(localStorage.getItem('user')).id;\n                const enabledDate = res?.data?.paramsUpdate?.EnabledDate;\n                \n                if (typeof value === 'number') value = JSON.stringify(value);\n                if (value === newValue.newVal || newValue.column === 'EnabledDate') {\n                  if (element) {\n                    const modifiedAtElement = document.getElementById(`ModifiedAt-${newValue.row}`);\n                    const modifiedByElement = document.getElementById(`ModifiedBy-${newValue.row}`);\n                    \n                    element.removeAttribute('contentEditable');\n                    // element.textContent = newValue.newVal ? newValue.newVal : 'None';\n                    modifiedAtElement.textContent = new Date().toISOString().split('T')[0];\n                    modifiedByElement.textContent = props.user.name;\n\n                    if (newValue.column !== 'EnabledDate') element.setAttribute('data-default-value', newValue.newVal);\n\n                    element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                    element.classList.toggle('edited');\n                    setTimeout(() => {\n                      element.classList.toggle('edited');\n                      updated.current = true;\n                    }, 2000);\n\n                  }\n                    \n                  // Log the change to the database.\n                  logChange('AppParams', newValue.column, userId, newValue.prevValue, newValue.newVal, valueType).then(\n                    res => {\n                      if (res.data) {\n                        const changeDateTime = res.data?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                      } else if (res.errors) {\n                        console.error(res.errors);\n                      }\n                    },\n                    err => { console.error({err}); }\n                  );\n                } else if (error && null !== error.message) {\n                  element.textContent = error.message + ' Please correct your input.';\n                  element.setAttribute('style', 'color:red');\n                } else { // Special logging for the date-enabled column.\n                  if (newValue.column === 'EnabledDate' & !paramByNameError) {\n                    logChange('AppParams', newValue.column, userId, prevEnabledDate ? new Date(parseInt(prevEnabledDate)).toISOString() : null, enabledDate ? new Date(parseInt(enabledDate)).toISOString() : null, 8).then(\n                      res => {\n                        const changeDateTime = res?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                      },\n                      err => { console.error({err}); }\n                    );\n                  } else {\n                    console.error({paramByNameError});\n                  }\n                }\n              },\n              err => { console.error({err}) }\n            );\n          },\n          err => { console.error(err); }\n        );\n      }\n    }\n\n    return () => mounted = false;\n  }, [items, newValue, props, orderDetails, vpWidth]);\n    \n  return props.error ? \n  ( \n    <div className=\"signin-error\">{props.error.message}</div> \n  ) \n  : !props.isLoaded ? \n  ( \n    <div className=\"loading\">Loading . . .</div> \n  ) \n  : error ?\n  (\n    <div>\n      <p>{error.name ? error.name + ': ' : null}{error.message}</p>\n    </div>\n  ) \n  : props.role === 'Admin' ?\n  (\n      <>\n        <div className=\"order-info no-actions\">\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} handleBlur={handleBlur} handleClick={handleClick} getClassNamesFor={getClassNamesFor} caller={{ settings: 'params' }} /> : null}\n        </div>\n        <table className=\"params-table\">\n          <thead>\n            <tr className='header-row'>\n              {headers ?\n                (\n                  <>\n                    <th               \n                      onClick={() => requestSort('EnabledDate')}\n                      className={`${getClassNamesFor('EnabledDate')} desktop`}\n                    >\n                      Enabled\n                    </th>\n                    {headers.map((header, key) => (\n                      vpWidth < 1280 ?\n                      (\n                        header !== 'Value' && header !== 'Category' && header !== 'Sub Category' && header !== 'Value Type' && header !== 'Notes' && header !== 'Idx' && header !== 'User Id' ?\n                        (\n                          <th\n                            key={key}\n                            onClick={() => requestSort(header.split(' ').join(''))}\n                            className={getClassNamesFor(header.split(' ').join(''))}\n                          >\n                            {header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header}\n                          </th>\n                        )\n                        :\n                        (\n                          null\n                        )\n                      )\n                      :\n                      (\n                        <th\n                          key={key}\n                          onClick={() => requestSort(header.split(' ').join(''))}\n                          className={getClassNamesFor(header.split(' ').join(''))}\n                        >\n                          {header === 'Modified At' ? 'Modified' : header === 'Modified By' ? 'By' : header === 'Value Type' ? 'Type' : header}\n                        </th>\n                      )\n                    ))}\n                  </>\n                )\n                : null\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, key) => {\n                return item.Name !== 'BcAccessToken' ? \n                (\n                  <tr key={key}>\n                    <>\n                      <td \n                        className=\"checkmark editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value=\"&#10003;\"\n                        id={`checkmark-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'EnabledDate', e)} // params: id, row, column, event\n                        onClick={(e) => handleClick(e.target, key, 'EnabledDate', item.Name, item.EnabledDate, item )} // params: event, row, column, id, enabled date\n                      >\n                        {item.EnabledDate ? <>&#10003;</> : 'No'}\n                      </td>\n                      <td className='params-id'>\n                        {vpWidth < 1280 ?\n                        (\n                          <Link to='#' onClick={() => action('showDetails', item, key)} >\n                            {vpWidth < 500 && item.Name && item.Name.length > 15 ? item.Name.substring(0, 12) + '...' : vpWidth <= 768 && item.Name && item.Name.length > 31 ? item.Name.substring(0, 28) + '...' : item.Name ? item.Name : null}\n                          </Link>\n                        )\n                        :\n                        (\n                          item.Name\n                        )}\n                      </td>\n                      {item.Value && item.Value.includes('|') ? \n                        (\n                          <td\n                            className=\"editable desktop\"\n                            suppressContentEditableWarning=\"true\" \n                            data-default-value={item.Value.split('\\n').map(val => {\n                              const setting = val.split('|');\n                              const key = setting[0];\n                              let value = setting[1], result;\n                              if (value && value.includes('~')) value = value.replace('~', ', ');                  \n                              if (value) value = value.trimEnd();\n                              if (value && value[value.length - 1] === ',') value = value.substring(0, value.length - 1);\n                              result = key && value ? `${key}: ${value}\\n` : '';\n                              return result;\n                            })}\n                            // id={`${item.Value}-${key}`}\n                            id={`Value-${key}`}\n                            onBlur={(e) => handleBlur(item.Name, key, 'Value', e)}\n                            onClick={(e) => handleClick(e.target, key, 'Value', item.Name)}\n                          >\n                            {item.Value.split('\\n').map(val => {\n                              const setting = val.split('|');\n                              const key = setting[0];\n                              let value = setting[1];\n                              let result;\n                              if (value && value.includes('~')) value = value.replace('~', ', ');                  \n                              if (value) value = value.trimEnd();\n                              if (value && value[value.length - 1] === ',') value = value.substring(0, value.length - 1);\n                              result = key && value ? `${key}: ${value}\\n` : '';\n                              return result;\n                            })}\n                          </td>\n                        ) : (\n                          <td\n                            className=\"editable desktop\"\n                            suppressContentEditableWarning=\"true\" \n                            data-default-value={item.Value}\n                            // id={`${item.Value}-${key}`}\n                            id={`Value-${key}`}\n                            onBlur={(e) => handleBlur(item.Name, key, 'Value', e)}\n                            onClick={(e) => handleClick(e.target, key, 'Value', item.Name)}\n                          >{item.Value}\n                          </td>\n                        )\n                      }\n                      <td\n                        className=\"editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.Category}\n                        // id={`${item.Category}-${key}`}\n                        id={`Category-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'Category', e)}\n                        onClick={(e) => handleClick(e.target, key, 'Category', item.Name)}\n                      >{item.Category}</td>\n                      <td\n                        className=\"editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.SubCategory}\n                        // id={`${item.SubCategory}-${key}`}\n                        id={`SubCategory-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'SubCategory', e)}\n                        onClick={(e) => handleClick(e.target, key, 'SubCategory', item.Name)}                  \n                      >{item.SubCategory}</td>\n                      <td className='desktop'>{item.ValueType}</td>\n                      <td \n                        className=\"notes editable desktop\"\n                        suppressContentEditableWarning=\"true\" \n                        data-default-value={item.Notes}\n                        // id={`${item.Notes}-${key}`}\n                        id={`Notes-${key}`}\n                        onBlur={(e) => handleBlur(item.Name, key, 'Notes', e)}\n                        onClick={(e) => handleClick(e.target, key, 'Notes', item.Name)}                  \n                      >\n                        {item.Notes ? item.Notes : 'None'}\n                      </td>\n                      <td className='date' id={`ModifiedAt-${key}`}>{item.ModifiedAt ? new Date(parseInt(item.ModifiedAt)).toISOString().split('T')[0] : 'N/A'}</td>\n                      <td className='by-user' id={`ModifiedBy-${key}`}>{item.ModifiedBy ? item.ModifiedBy : item.UserId && isNaN(parseInt(item.UserId)) ? item.UserId : 'N/A'}</td>\n                    </>\n                  </tr>\n              ) : null\n                    })}\n          </tbody>\n        </table>        \n      </>\n  ) \n  :\n  (\n    <div className=\"role-denied\">Your profile's assigned role of \"{props.role}\" does not allow you to access this page.</div>\n  )\n};\n\nexport default Params;\n"]},"metadata":{},"sourceType":"module"}