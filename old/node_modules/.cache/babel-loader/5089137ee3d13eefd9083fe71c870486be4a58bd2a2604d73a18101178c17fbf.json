{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/users/user.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport formatHeaders from '../../hooks/format-headers';\nimport useSort from '../../hooks/sort-data';\nimport Checkbox from '../../components/checkbox';\nimport User from '../../hooks/get-user';\nimport selectElementContents from '../../hooks/select-all';\nimport getType from '../../hooks/get-type';\nimport logChange from '../../hooks/log-change';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = props => {\n  _s();\n  const [tabs, setTabs] = useState([]);\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRoles, setUserRoles] = useState([]);\n  const [activeTab, setActiveTab] = useState('All Roles');\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedInUser, setLoggedInUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [newValue, setNewValue] = useState({});\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [roleName, setRoleName] = useState(null);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const messageRef = useRef('');\n  const clickLocation = useRef('');\n  const clickCount = useRef(0);\n  const prevElement = useRef('');\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const updated = useRef(false);\n  const user = new User();\n  let tableHeaders = props.users.length > 0 ? Object.keys(props.users[0]) : [],\n    formattedHeaders = [];\n  let {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(users, 'users');\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'Name' === name || 'Role' === name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n\n  // Format the table headers.\n  if (tableHeaders.length > 0) {\n    // Remove RoleId from the headers before formatting.\n    tableHeaders = tableHeaders.filter(header => header !== 'RoleId');\n    formattedHeaders = formatHeaders(tableHeaders, 'Error');\n  }\n\n  // // Handles the selection and formatting of the page's tabs.\n  const handleTabClick = (event, next) => {\n    let chosenButtonValue;\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n    setIsChecked([]);\n  };\n\n  // Handles the toggling of the select-all checkbox.\n  const handleSelectAll = event => {\n    const tab = event.target.value;\n    const activeItems = items.filter(item => item.RoleId === activeTab || 0 === activeTab);\n    if (tab === activeTab) setAllChecked(!allChecked);\n    setIsChecked(activeItems.map(item => item.Id));\n    setAllChecked(!allChecked);\n    if (allChecked) setIsChecked([]);\n  };\n\n  // Handles the toggling of individual checkboxes.\n  const handleSelect = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n\n  // Handles the action initiated by the user.\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } else if (isChecked.length !== 0) {\n      const ids = [];\n      const filteredRows = users.filter(row => isChecked.includes(row.Id));\n      filteredRows.forEach(row => ids.push(row.Id));\n\n      // This feature deletes the user.\n      if (ids.length > 0) {\n        user.deleteUser(path, ids).then(res => {\n          if (res.data) {\n            var _res$data, _res$data$deleteUser;\n            // IDs of deleted users are being returned but not currently used.\n            setError('');\n            setShowMessage(true);\n\n            // Log the user out if all users are deleted or if the signed-in user is deleted.\n            if (((_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$deleteUser = _res$data.deleteUser) === null || _res$data$deleteUser === void 0 ? void 0 : _res$data$deleteUser.length) === users.length) {\n              // All users were deleted.\n              user.signOut().then(() => {\n                localStorage.setItem('user', null);\n                props.liftData(0, 'user', false);\n              }, err => {\n                console.error(err);\n              });\n            } else {\n              // Not all users were deleted: if the user deleted herself, sign her out.\n              const match = ids.filter(id => id === loggedInUser.id);\n              if (match.length === 1) {\n                user.signOut().then(() => {\n                  localStorage.setItem('user', null);\n                  props.liftData(0, 'user', false);\n                }, err => {\n                  console.error(err);\n                });\n              }\n            }\n          } else if (res.name) {\n            console.error('Error: ', res.message);\n            setError(res.message);\n            setShowMessage(true);\n          }\n          props.recall(path);\n        }, err => {\n          console.error({\n            err\n          });\n          setError(err.message);\n        });\n      }\n      setIsChecked([]);\n      setAllChecked(false);\n    } else alert('Please tick a user.');\n\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n\n  // Generates the message to show the user after an action has been initiated.\n  const message = action => {\n    let pastTenseVerb;\n    if (action && action === 'Delete User') {\n      pastTenseVerb = 'deleted';\n    }\n    if (action && action === 'Add User') {\n      pastTenseVerb = 'added';\n    }\n    return pastTenseVerb;\n  };\n\n  // Helps manage the editing of editable fields.\n  const handleClick = (event, row, column) => {\n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue;\n    const element = document.getElementById(`${column}-${row}`);\n    if (clickLocation.current !== event.id) {\n      clickCount.current = 0;\n      if (element) {\n        var _prevElement$current, _prevElement$current2;\n        // Restore the element's previous value if unclicked.\n        const id = prevElement ? prevElement === null || prevElement === void 0 ? void 0 : (_prevElement$current = prevElement.current) === null || _prevElement$current === void 0 ? void 0 : _prevElement$current.id : '';\n        const value = id ? prevElement === null || prevElement === void 0 ? void 0 : (_prevElement$current2 = prevElement.current) === null || _prevElement$current2 === void 0 ? void 0 : _prevElement$current2.value : '';\n        const tempElement = id ? document.getElementById(id) : '';\n        if (tempElement && value) document.getElementById(id).innerHTML = value;\n        prevElement.current = '';\n      }\n    }\n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    if (defaultValue !== currentValue) {\n      // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n      element.textContent = defaultValue;\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('contentEditable', 'true');\n      updated.current = false;\n    }\n    clickCount.current++;\n    clickLocation.current = event.id;\n  };\n\n  // Handles user edits.\n  const handleBlur = (userId, row, column, event, idx, rowName) => {\n    var _event$target, _event$target$dataset, _event$target2, _event$target3;\n    let prevValue = 'Role' !== column ? event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$dataset = _event$target.dataset) === null || _event$target$dataset === void 0 ? void 0 : _event$target$dataset.defaultValue : prevElement.current;\n    const newValue = 'Role' !== column ? event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.textContent : event === null || event === void 0 ? void 0 : (_event$target3 = event.target) === null || _event$target3 === void 0 ? void 0 : _event$target3.textContent;\n    const table = 'Users';\n    const element = 'Role' !== column ? document.getElementById(`${column}-${row}`) : null;\n    if (prevValue === newValue) {\n      if (element) element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(res => {\n        dataType.current = res;\n\n        // Check the input against type and length.\n        if (JSON.stringify(dataType.current) !== '{}') {\n          if (newValue) {\n            const columnName = dataType.current.ColumnName;\n            if (columnName === column) {\n              const type = dataType.current.DataType;\n              let typeNewValue = 'Role' === column ? typeof tabs.indexOf(newValue) : typeof newValue;\n              if (type === typeNewValue) {\n                if (dataType.current.MaxLength > newValue.length || !dataType.current.MaxLength || -1 === dataType.current.MaxLength) {\n                  if (prevValue !== newValue) {\n                    if (!/<\\/?[a-z][\\s\\S]*>/i.test(newValue)) {\n                      // Check that no html is being introduced.\n                      items[row][column] = newValue ? newValue : 'None';\n                      setNewValue({\n                        id: userId,\n                        row,\n                        column,\n                        prevValue,\n                        newValue: newValue,\n                        idx,\n                        rowName\n                      });\n                      updated.current = false;\n                      if (element) {\n                        element.textContent = newValue ? newValue : 'None';\n                      }\n                    } else {\n                      element.setAttribute('style', 'color: red');\n                      element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                      element.scrollIntoViewIfNeeded({\n                        behavior: 'smooth',\n                        inline: 'start'\n                      });\n                    }\n                  }\n                }\n              } else {\n                element.setAttribute('style', 'color: red');\n                element.textContent = `The new value's datatype (${typeof newValue}) doesn't match the databases's data type (${type}).`;\n                element.scrollIntoViewIfNeeded({\n                  behavior: 'smooth',\n                  inline: 'start'\n                });\n              }\n            }\n          } else {\n            element.textContent = prevValue;\n          }\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    }\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    setIsChecked([]);\n    clickCount.current = 0;\n  };\n\n  // Toggle the roles' dropdown menu.\n  const toggleSelect = key => {\n    const options = document.getElementById(`select-role-${key}`).children;\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.toggle('show-option');\n          } else {\n            option.classList.toggle('fade-default');\n          }\n        }\n      });\n    }\n    setRoleName(null);\n  };\n\n  // Capture the user's role.\n  const handleRoleSelect = (event, idx, key, item, caller) => {\n    const roleName = event.target.textContent;\n    const options = document.getElementById(`select-role-${key}`).children;\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.remove('show-option');\n          } else {\n            option.classList.remove('fade-default');\n          }\n        }\n      });\n    }\n    setRoleName({\n      key,\n      roleName\n    });\n    prevElement.current = item.Role;\n    handleBlur(item.Id, caller === 'modal' ? idx : key, 'Role', event, idx, item.Email);\n  };\n\n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = newValue.column !== 'Role' ? document.getElementById(`${newValue.column}-${newValue.row}`) : document.getElementById(`user-role-${newValue.row}`);\n      let userRole;\n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        const operation = 'userUpdate';\n        const user = new User();\n        if ('Role' === newValue.column) {\n          userRoles.forEach(role => {\n            if (role.Role === newValue.newValue) userRole = role.Id;\n          });\n        }\n        user.updateUser(operation, newValue.id, newValue.column, userRole ? userRole : newValue.newValue).then(res => {\n          if (res.data) {\n            var _res$data$operation;\n            let value = res.data[operation] ? res.data[operation][newValue.column] : '';\n            const valueType = 10; // 10 === 'string' in the AppParamsValueType table.\n            const error = (_res$data$operation = res.data[operation]) === null || _res$data$operation === void 0 ? void 0 : _res$data$operation.Error;\n            if (typeof value === 'number') value = JSON.stringify(value);\n            if (value) {\n              if ('Role' === newValue.column) {\n                userRoles.forEach(role => {\n                  if (role.Id === value) value = role.Role;\n                });\n              }\n              if (value === newValue.newValue) {\n                if (element) {\n                  if (loggedInUser.id === newValue.id) {\n                    // The current user is being modified and needs to be updated in storage.\n                    if (newValue.column === 'Role') loggedInUser.role = newValue.newValue;else if (newValue.column === 'Name') loggedInUser.name = newValue.newValue;\n                    setLoggedInUser(loggedInUser);\n                    localStorage.setItem('user', JSON.stringify(loggedInUser));\n                  }\n                  element.removeAttribute('contentEditable');\n                  element.setAttribute('data-default-value', newValue.newValue);\n                  element.scrollIntoViewIfNeeded({\n                    behavior: 'smooth',\n                    inline: 'start'\n                  });\n                  element.classList.toggle('edited');\n                  setTimeout(() => {\n                    element.classList.toggle('edited');\n                    updated.current = true;\n                    if ('Role' === newValue.column) props.recall(); // Recall the API to get the right user tabs after a role change.\n                  }, 2000);\n                }\n                console.log({\n                  newValue\n                });\n\n                // Log the change to the database.\n                logChange('Users', newValue.rowName, newValue.column, newValue.id, newValue.prevValue, newValue.newValue, valueType).then(res => {\n                  if (res.data) {\n                    var _res$data2, _res$data2$logChange;\n                    const changeDateTime = (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$logChange = _res$data2.logChange) === null || _res$data2$logChange === void 0 ? void 0 : _res$data2$logChange.DateTime;\n                    changeDate.current = changeDateTime;\n                    setNewValue({});\n                  } else if (res.errors) {\n                    console.error(res.errors);\n                  }\n                }, err => {\n                  console.error({\n                    err\n                  });\n                });\n              }\n            } else if (error) {\n              element.textContent = error + ' Please correct your input.';\n              element.setAttribute('style', 'color:red');\n            }\n          } else if (res.name) {\n            setError(res.name);\n          } else if (res !== null && res !== void 0 && res.errors) {\n            let errorString = '';\n            if (res.errors.length > 0 && res.errors.length < 2) {\n              errorString = res.errors[0].message;\n            } else if (res.errors.length >= 2) {\n              res.errors.forEach((error, idx) => {\n                if (idx === 0) errorString += error.message;else if (idx === res.errors.length - 1) errorString += ', ' + error.message;else errorString += ', ' + error.message;\n              });\n            }\n            if (errorString) {\n              element.textContent = errorString + ' Please correct your input.';\n              element.setAttribute('style', 'color:red; white-space:pre-wrap');\n            }\n          }\n        }, err => {\n          console.error({\n            err\n          });\n        });\n      }\n    }\n    return () => mounted = false;\n  }, [loggedInUser, newValue, userRoles, props]);\n\n  // Get the tabs for the page.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (items.length > 0) {\n        // const tabsObject = {'All Roles': 0};\n        const tabsArray = ['All Roles'];\n        let tempTabs = [...items];\n\n        // Sort the array by role ID, so that the tabs will always be in the same order.\n        tempTabs.sort((a, b) => {\n          const one = parseInt(a.RoleId);\n          const two = parseInt(b.RoleId);\n          return one > two ? 1 : -1;\n        });\n\n        // Reduce the array of tempTabs to unique ones only.\n        tempTabs.forEach(item => {\n          // tabsObject[item.Role] = item.RoleId;\n          if (!tabsArray.includes(item.Role)) tabsArray.push(item.Role);\n        });\n\n        // setTabs(Object.entries(tabsObject));\n        setTabs(tabsArray);\n      }\n      ;\n    }\n    return () => mounted = false;\n  }, [items]);\n\n  // Populate and update users from props.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) if (props.users) setUsers(props.users);\n    return () => mounted = false;\n  }, [props.users]);\n\n  // Toggle allChecked.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (users && users.length !== 0 && isChecked.length === users.length) setAllChecked(true);else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, users]);\n\n  // Set the active tab, when it changes.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]);\n\n  // Set the active-tab count.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (Array.isArray(props.users)) {\n        let counter = 0;\n        props.users.forEach(user => {\n          if (user.Role === activeTab || activeTab === 'All Roles') counter++;\n        });\n        setActiveTabCount(counter);\n      }\n    }\n    return () => mounted = false;\n  }, [props.users, activeTab]);\n\n  // Show or hide optional actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';\n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : '';\n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n\n  // Set loggedInUser from local storage.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setLoggedInUser(JSON.parse(localStorage.getItem('user')));\n    }\n    return () => mounted = false;\n  }, []);\n\n  // Set the activeTabIndex variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const activeTabKeyValue = Object.entries(tabs).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n    return () => mounted = false;\n  }, [activeTab, tabs]);\n\n  // Set showMessage after a user has been added.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.action === 'Add User') setShowMessage(true);\n    }\n    return () => mounted = false;\n  }, [props.action]);\n\n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize);\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n\n  // Get the user's available roles for sign-up.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const user = new User(); // Must create a new user inside the useEffect, otherwise the code runs ad nauseum.\n      user.getUserRoles().then(res => {\n        if (res.data) {\n          var _res$data3;\n          const userRoles = (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.getUserRoles;\n          setUserRoles(userRoles);\n        } else if (res.name) {\n          setError(res.message);\n        }\n      }, err => {\n        console.error({\n          err\n        });\n      });\n    }\n    return () => mounted = false;\n  }, []);\n  return props.error ?\n  /*#__PURE__*/\n  // Render the sign-in error.\n  _jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 573,\n    columnNumber: 5\n  }, this) : !props.isLoaded ?\n  /*#__PURE__*/\n  // Render the loading message.\n  _jsxDEV(\"div\", {\n    className: \"loading unprocessed\",\n    children: \"Loading . . . \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 577,\n    columnNumber: 5\n  }, this) : (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.role) === 'Admin' ?\n  // If the user has the correct permissions, load the page.\n  items ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-actions user\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        activeTab: activeTab,\n        tabIndex: activeTabIndex,\n        tabs: tabs,\n        handleClick: handleTabClick,\n        caller: 'user'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [tabs.length > 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Tab: \", `${activeTabIndex + 1} of ${tabs.length}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 32\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Selected: \", isChecked.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Count: \", activeTabCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-links\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"link\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/login',\n              state: {\n                user: {\n                  id: '',\n                  action: 'Add User',\n                  role: activeTab !== 'All Roles' ? activeTab : ''\n                }\n              }\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 17\n          }, this), activeLink ? /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/users',\n              state: {\n                id: isChecked,\n                action: 'Delete User'\n              }\n            },\n            onClick: () => action('deleteUser'),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 19\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 13\n      }, this), !activeLink && error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 15\n      }, this) : '', (props.action === 'Delete User' || props.action === 'Add User') && showMessage ? !error ? props.message && !activeLink ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 19\n      }, this) : props.id && !activeLink ? !Array.isArray(props.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User #\", props.id, \" has been \", message(props.action), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 21\n      }, this) : props.id.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User #\", props.id[0], \" has been \", message(props.action), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following users have been \", message(props.action), \":\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.id.map((id, key) => props.id.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 31\n          }, this) : key === props.id.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 49\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 23\n      }, this) : '' :\n      // There was an error in the action.\n\n      props.id ? !Array.isArray(props.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following error occurred when user #\", props.id, \" was \", message(props.action), \": \", error, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 19\n      }, this) : props.id.length > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There was a \\\"\", error, \"\\\" error when the following IDs were \", message(props.action), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.id.map((id, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following error occurred when user #\", props.id[0], \" was \", message(props.action), \": \", error, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 21\n      }, this) : '' : '', showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n        details: orderDetails,\n        closeModal: closeModal,\n        handleBlur: handleBlur,\n        handleClick: handleClick,\n        toggleSelect: toggleSelect,\n        handleRoleSelect: handleRoleSelect,\n        getClassNamesFor: getClassNamesFor,\n        caller: {\n          users: 'user'\n        },\n        userRoles: userRoles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 26\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: [items.length !== 0 ? /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"checkbox-th\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: \"selectAll\",\n              handleClick: handleSelectAll,\n              isChecked: allChecked,\n              value: activeTab ? activeTab : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 17\n          }, this), formattedHeaders.map((header, key) => vpWidth < 1280 ? header !== 'Email' && header !== 'Date Registered' && header !== 'Last Login' && header !== 'Logged In' && header !== 'Failed Attempts' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 21\n          }, this) : null : /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Failed Attempts' ? 'Failed' : header === 'Date Registered' ? 'Registered' : header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map((item, key) => {\n          console.log({\n            item\n          });\n          return item.Role === activeTab || activeTab === 'All Roles' ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"select-one\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                type: \"checkbox\",\n                name: item.Id,\n                value: item.Id ? item.Id : '',\n                handleClick: handleSelect,\n                isChecked: isChecked.includes(item.Id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"user-link\",\n              children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: () => action('showDetails', item, key),\n                children: item.Id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 23\n              }, this) : item.Id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"editable\",\n              suppressContentEditableWarning: \"true\",\n              \"data-default-value\": item.Name,\n              id: `Name-${key}`,\n              onBlur: e => handleBlur(item.Id, key, 'Name', e, null, item.Email),\n              onClick: e => handleClick(e.target, key, 'Name'),\n              children: item.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.Email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"editable select-container\",\n              id: `select-role-${key}`,\n              name: \"role\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"role-option default\",\n                id: `user-role-${key}`,\n                \"data-default-value\": item.Role,\n                onClick: () => toggleSelect(key),\n                children: roleName && parseInt(roleName.key) === key ? roleName.roleName : item.Role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 21\n              }, this), userRoles.map((value, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"role-option\",\n                id: `Role-${idx}`,\n                \"data-value\": value.Id,\n                onClick: e => handleRoleSelect(e, idx, key, item),\n                children: value.Role\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.DateRegistered ? new Date(parseInt(item.DateRegistered)).toISOString().split('T')[0] : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.LastLogin ? new Date(parseInt(item.LastLogin)).toISOString().split('T')[0] : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.LoggedIn ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"desktop\",\n              children: item.FailedAttempts ? item.FailedAttempts : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Active ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 17\n          }, this) : null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 583,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No users have been registered for this service.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 843,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-denied\",\n    children: [\"Your profile's assigned role of \\\"\", loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.role, \"\\\" does not allow you to access this page.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 848,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"fsaA9fZTzGjm7sX77thlanQTloM=\", false, function () {\n  return [useSort];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Link","formatHeaders","useSort","Checkbox","User","selectElementContents","getType","logChange","OrderDetails","Tabs","jsxDEV","_jsxDEV","Users","props","_s","tabs","setTabs","allChecked","setAllChecked","isChecked","setIsChecked","users","setUsers","userRoles","setUserRoles","activeTab","setActiveTab","activeTabIndex","setActiveTabIndex","activeTabCount","setActiveTabCount","activeLink","setActiveLink","showMessage","setShowMessage","error","setError","loggedInUser","setLoggedInUser","JSON","parse","localStorage","getItem","newValue","setNewValue","orderDetails","setOrderDetails","showDetails","setShowDetails","roleName","setRoleName","vpWidth","setVpWidth","window","innerWidth","messageRef","clickLocation","clickCount","prevElement","dataType","changeDate","updated","user","tableHeaders","length","Object","keys","formattedHeaders","items","requestSort","sortConfig","getClassNamesFor","name","className","key","direction","undefined","filter","header","handleTabClick","event","next","chosenButtonValue","preventDefault","target","value","handleClick","handleSelectAll","tab","activeItems","item","RoleId","map","Id","handleSelect","checked","action","path","idx","scrollTo","top","behavior","ids","filteredRows","row","includes","forEach","push","deleteUser","then","res","data","_res$data","_res$data$deleteUser","signOut","setItem","liftData","err","console","match","id","message","recall","alert","sessionStorage","pastTenseVerb","column","currentValue","textContent","defaultValue","dataset","element","document","getElementById","current","_prevElement$current","_prevElement$current2","tempElement","innerHTML","removeAttribute","setAttribute","handleBlur","userId","rowName","_event$target","_event$target$dataset","_event$target2","_event$target3","prevValue","table","stringify","columnName","ColumnName","type","DataType","typeNewValue","indexOf","MaxLength","test","scrollIntoViewIfNeeded","inline","closeModal","toggleSelect","options","children","values","option","classList","toggle","handleRoleSelect","caller","remove","Role","Email","mounted","userRole","operation","role","updateUser","_res$data$operation","valueType","Error","setTimeout","log","_res$data2","_res$data2$logChange","changeDateTime","DateTime","errors","errorString","tabsArray","tempTabs","sort","a","b","one","parseInt","two","Array","isArray","counter","getAttribute","replace","activeTabKeyValue","entries","job","handleResize","addEventListener","getUserRoles","_res$data3","fileName","_jsxFileName","lineNumber","columnNumber","isLoaded","tabIndex","to","pathname","state","onClick","ref","details","split","join","suppressContentEditableWarning","Name","onBlur","e","DateRegistered","Date","toISOString","LastLogin","LoggedIn","FailedAttempts","Active","_c","$RefreshReg$"],"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/users/user.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport formatHeaders from '../../hooks/format-headers';\nimport useSort from '../../hooks/sort-data';\nimport Checkbox from '../../components/checkbox';\nimport User from '../../hooks/get-user';\nimport selectElementContents from '../../hooks/select-all';\nimport getType from '../../hooks/get-type';\nimport logChange from '../../hooks/log-change';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\n\nconst Users = (props) => {\n  const [tabs, setTabs] = useState([]);\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRoles, setUserRoles] = useState([]);\n  const [activeTab, setActiveTab] = useState('All Roles');\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedInUser, setLoggedInUser] = useState(JSON.parse(localStorage.getItem('user')));\n  const [newValue, setNewValue] = useState({});\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [roleName, setRoleName] = useState(null);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const messageRef = useRef('');\n  const clickLocation = useRef('');\n  const clickCount = useRef(0);\n  const prevElement = useRef('');\n  const dataType = useRef({}); // => dataType.current = {ColumnName, DataType, MaxLength}\n  const changeDate = useRef('');\n  const updated = useRef(false);\n  const user = new User();\n  let tableHeaders = props.users.length > 0 ? Object.keys(props.users[0]) : [], formattedHeaders = [];\n  let { items, requestSort, sortConfig } = useSort(users, 'users');\n  const getClassNamesFor = useCallback(name => {\n    if (!sortConfig) return;\n    let className = 'Name' === name || 'Role' === name ? 'header-editable' : '';\n    className = sortConfig.key === name ? sortConfig.direction + ' ' + className : className;\n    return className ? className : undefined;\n  }, [sortConfig]);\n\n  // Format the table headers.\n  if (tableHeaders.length > 0) {\n    // Remove RoleId from the headers before formatting.\n    tableHeaders = tableHeaders.filter(header => header !== 'RoleId');\n    formattedHeaders = formatHeaders(tableHeaders, 'Error');\n  }\n\n  // // Handles the selection and formatting of the page's tabs.\n  const handleTabClick = (event, next) => {\n    let chosenButtonValue;\n\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n    setIsChecked([]);\n  };\n  \n  // Handles the toggling of the select-all checkbox.\n  const handleSelectAll = event => {\n    const tab = event.target.value;\n    const activeItems = items.filter(item => item.RoleId === activeTab || 0 === activeTab);\n    \n    if (tab === activeTab) setAllChecked(!allChecked);\n    setIsChecked(activeItems.map(item => item.Id));\n    setAllChecked(!allChecked);\n    if (allChecked) setIsChecked([]);\n  };\n\n  // Handles the toggling of individual checkboxes.\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n  \n  // Handles the action initiated by the user.\n  const action = (path, item, idx) => {\n    if (path === 'showDetails') {\n      item.idx = idx;\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      const ids = [];\n      const filteredRows = users.filter(row => isChecked.includes(row.Id));\n      filteredRows.forEach(row => ids.push(row.Id));\n\n      // This feature deletes the user.\n      if (ids.length > 0) {\n        user.deleteUser(path, ids).then(\n          res => {\n            if (res.data) {// IDs of deleted users are being returned but not currently used.\n              setError('');\n              setShowMessage(true);\n\n              // Log the user out if all users are deleted or if the signed-in user is deleted.\n              if (res.data?.deleteUser?.length === users.length) { // All users were deleted.\n                user.signOut().then(\n                  () => {\n                    localStorage.setItem('user', null);\n                    props.liftData(0, 'user', false);\n                  },\n                  err => { console.error(err); }\n                )\n              } else { // Not all users were deleted: if the user deleted herself, sign her out.\n                const match = ids.filter(id => id === loggedInUser.id);\n                \n                if (match.length === 1) {\n                  user.signOut().then(\n                    () => { \n                      localStorage.setItem('user', null);\n                      props.liftData(0, 'user', false);  \n                     },\n                    err => { console.error(err); }\n                  )\n                }\n              }\n\n            } else if (res.name) {\n              console.error('Error: ', res.message);\n              setError(res.message);\n              setShowMessage(true);\n            }\n\n            props.recall(path);\n          },\n          err => {\n            console.error({err});\n            setError(err.message);\n          }\n        );\n      }\n\n      setIsChecked([]);\n      setAllChecked(false);\n    } else alert('Please tick a user.');\n    \n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n\n  // Generates the message to show the user after an action has been initiated.\n  const message = (action) => {\n    let pastTenseVerb;\n    if (action && action === 'Delete User') {\n      pastTenseVerb = 'deleted';\n    }\n    if (action && action === 'Add User') {\n      pastTenseVerb = 'added';\n    }\n    return pastTenseVerb;\n  };\n\n  // Helps manage the editing of editable fields.\n  const handleClick = (event, row, column) => {\n    let currentValue = event.textContent;\n    let defaultValue = event.dataset.defaultValue;\n    const element = document.getElementById(`${column}-${row}`);\n    \n    if (clickLocation.current !== event.id) {\n      clickCount.current = 0;\n      if (element) { // Restore the element's previous value if unclicked.\n        const id = prevElement ? prevElement?.current?.id : '';\n        const value = id ? prevElement?.current?.value : '';\n        const tempElement = id ? document.getElementById(id) : '';\n        if (tempElement && value) document.getElementById(id).innerHTML = value;\n        prevElement.current = '';\n      }\n    }\n    \n    if (clickCount.current <= 1 && vpWidth >= 1024) selectElementContents(element); // Selects all content in the field.\n    if (defaultValue !== currentValue) { // Replace errors in entries with the previous text; also, check unchecked boxes for the DateEnabled field.\n      element.textContent = defaultValue;\n      element.removeAttribute('style');\n    } else {\n      element.setAttribute('contentEditable', 'true');\n      updated.current = false;\n    }\n\n    clickCount.current++;\n    clickLocation.current = event.id;\n  };\n\n  // Handles user edits.\n  const handleBlur = (userId, row, column, event, idx, rowName) => {\n    let prevValue = 'Role' !== column ? event?.target?.dataset?.defaultValue : prevElement.current;\n    const newValue = 'Role' !== column ? event?.target?.textContent : event?.target?.textContent;\n    const table = 'Users';\n    const element = 'Role' !== column ? document.getElementById(`${column}-${row}`) : null;\n\n    if (prevValue === newValue) {\n      if (element) element.removeAttribute('contentEditable');\n      return;\n    }\n\n    // Get the column's configuration from the DB.\n    if (table && column) {\n      getType(table, column).then(\n        res => {\n          dataType.current = res;\n\n          // Check the input against type and length.\n          if (JSON.stringify(dataType.current) !== '{}') {\n            if (newValue) {\n              const columnName = dataType.current.ColumnName;\n              if (columnName === column) {\n                const type = dataType.current.DataType;\n                let typeNewValue = 'Role' === column ? typeof tabs.indexOf(newValue) : typeof newValue;\n                                        \n                if (type === typeNewValue) {\n                  if (dataType.current.MaxLength > newValue.length || !dataType.current.MaxLength || -1 === dataType.current.MaxLength) {\n                    if (prevValue !== newValue) {\n                      if (!/<\\/?[a-z][\\s\\S]*>/i.test(newValue)) { // Check that no html is being introduced.\n                        items[row][column] = newValue ? newValue : 'None'; \n                        setNewValue({ \n                          id: userId, \n                          row, \n                          column, \n                          prevValue, \n                          newValue: newValue, \n                          idx,\n                          rowName\n                        });\n                        updated.current = false;\n\n                        if (element) {\n                          element.textContent = newValue ? newValue : 'None';\n                        }\n                      } else {\n                        element.setAttribute('style', 'color: red');\n                        element.textContent = 'There is html in the new value. Please revise your input and resubmit.';\n                        element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                      }\n                    } \n                  }\n                } else {\n                  element.setAttribute('style', 'color: red');\n                  element.textContent = `The new value's datatype (${typeof newValue}) doesn't match the databases's data type (${type}).`;\n                  element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                }\n              }\n            } else {\n              element.textContent = prevValue;\n            }\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    setIsChecked([]);\n    clickCount.current = 0;\n  };\n\n  // Toggle the roles' dropdown menu.\n  const toggleSelect = (key) => {\n    const options = document.getElementById(`select-role-${key}`).children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.toggle('show-option');\n          } else {\n            option.classList.toggle('fade-default')\n          }\n        }\n      });\n    }\n\n    setRoleName(null);\n  };\n  \n  // Capture the user's role.\n  const handleRoleSelect = (event, idx, key, item, caller) => {\n    const roleName = event.target.textContent;\n    const options = document.getElementById(`select-role-${key}`).children;\n\n    if (options) {\n      Object.values(options).forEach(option => {\n        if (option.id) {\n          if (!option.id.includes('user-role')) {\n            option.classList.remove('show-option');\n          } else {\n            option.classList.remove('fade-default')\n          }\n        }\n      });\n    }\n\n    setRoleName({key, roleName});\n    prevElement.current = item.Role;\n    handleBlur(item.Id, caller === 'modal' ? idx : key, 'Role', event, idx, item.Email);\n  };\n  \n  // Send updates to the db for edited fields.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = newValue.column !== 'Role' ? document.getElementById(`${newValue.column}-${newValue.row}`) : document.getElementById(`user-role-${newValue.row}`);\n      let userRole;\n      \n      if (JSON.stringify(newValue) !== '{}' && !updated.current) {\n        const operation = 'userUpdate';\n        const user = new User();\n\n        if ('Role' === newValue.column) {\n          userRoles.forEach(role => {\n            if (role.Role === newValue.newValue) userRole = role.Id;\n          });\n        }\n        \n        user.updateUser(operation, newValue.id, newValue.column, userRole ? userRole : newValue.newValue).then(\n          res => {\n            if (res.data) {\n              let value = res.data[operation] ? res.data[operation][newValue.column] : '';\n              const valueType = 10; // 10 === 'string' in the AppParamsValueType table.\n              const error = res.data[operation]?.Error;\n    \n              if (typeof value === 'number') value = JSON.stringify(value);\n              if (value) {\n                if ('Role' === newValue.column) {\n                  userRoles.forEach(role => {\n                    if (role.Id === value) value = role.Role;\n                  });\n                }\n                \n                if (value === newValue.newValue) {\n                  if (element) {\n                    if (loggedInUser.id === newValue.id) { // The current user is being modified and needs to be updated in storage.\n                      if (newValue.column === 'Role') loggedInUser.role = newValue.newValue;\n                      else if (newValue.column === 'Name') loggedInUser.name = newValue.newValue;\n\n                      setLoggedInUser(loggedInUser);\n                      localStorage.setItem('user', JSON.stringify(loggedInUser));\n                    }\n                    \n                    element.removeAttribute('contentEditable');\n                    element.setAttribute('data-default-value', newValue.newValue);\n                    element.scrollIntoViewIfNeeded({behavior:'smooth', inline:'start'});\n                    element.classList.toggle('edited');\n                    \n                    setTimeout(() => {\n                      element.classList.toggle('edited');\n                      updated.current = true;\n\n                      if ('Role' === newValue.column) props.recall(); // Recall the API to get the right user tabs after a role change.\n                    }, 2000);\n                  }\n\n                  console.log({newValue});\n\n                  // Log the change to the database.\n                  logChange('Users', newValue.rowName, newValue.column, newValue.id, newValue.prevValue, newValue.newValue, valueType).then(\n                    res => {\n                      if (res.data) {\n                        const changeDateTime = res.data?.logChange?.DateTime;\n                        changeDate.current = changeDateTime;\n                        setNewValue({}); \n                      } else if (res.errors) {\n                        console.error(res.errors);\n                      }\n                    },\n                    err => { console.error({err}); }\n                  );\n                }\n              } else if (error) {\n                element.textContent = error + ' Please correct your input.';\n                element.setAttribute('style', 'color:red');\n              }\n            } else if (res.name) {\n              setError(res.name);\n            } else if (res?.errors) {\n              let errorString = '';\n\n              if (res.errors.length > 0 && res.errors.length < 2) {\n                errorString = res.errors[0].message;\n              } else if (res.errors.length >= 2) {\n                res.errors.forEach((error, idx) => {\n                  if (idx === 0) errorString += error.message;\n                  else if (idx === res.errors.length - 1) errorString += ', ' + error.message;\n                  else errorString += ', ' + error.message;\n                });\n              }\n\n              if (errorString) {\n                element.textContent = errorString + ' Please correct your input.';\n                element.setAttribute('style', 'color:red; white-space:pre-wrap');\n              }\n            }\n          },\n          err => { console.error({err}) }\n        );\n      }\n    }\n    \n    return () => mounted = false;\n  }, [loggedInUser, newValue, userRoles, props]);\n\n  // Get the tabs for the page.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (items.length > 0) {\n        // const tabsObject = {'All Roles': 0};\n        const tabsArray = ['All Roles'];\n        let tempTabs = [...items];\n                \n        // Sort the array by role ID, so that the tabs will always be in the same order.\n        tempTabs.sort((a, b) => {\n          const one = parseInt(a.RoleId);\n          const two = parseInt(b.RoleId);\n        \n          return one > two ? 1 : -1;\n        });\n  \n        // Reduce the array of tempTabs to unique ones only.\n        tempTabs.forEach(item => {\n          // tabsObject[item.Role] = item.RoleId;\n          if (!tabsArray.includes(item.Role)) tabsArray.push(item.Role);\n        });\n  \n        // setTabs(Object.entries(tabsObject));\n        setTabs(tabsArray);\n\n      };\n    }\n    return () => mounted = false;\n  }, [items]);\n  \n  // Populate and update users from props.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) if (props.users) setUsers(props.users);\n    return () => mounted = false;\n  }, [props.users]);\n  \n  // Toggle allChecked.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (users && users.length !== 0 && isChecked.length === users.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, users]);\n  \n  // Set the active tab, when it changes.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]);\n  \n  // Set the active-tab count.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (Array.isArray(props.users)) {\n        let counter = 0;\n        props.users.forEach(user => {\n          if (user.Role === activeTab || activeTab === 'All Roles') counter++;\n        });\n        setActiveTabCount(counter);\n      }\n    }\n    return () => mounted = false;\n  }, [props.users, activeTab]);\n  \n  // Show or hide optional actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';        \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n  \n  // Set loggedInUser from local storage.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setLoggedInUser(JSON.parse(localStorage.getItem('user')));\n    }\n    return () => mounted = false;\n  }, []);\n\n  // Set the activeTabIndex variable.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const activeTabKeyValue = Object.entries(tabs).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n\n    return () => mounted = false;\n  }, [activeTab, tabs]);\n\n  // Set showMessage after a user has been added.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.action === 'Add User') setShowMessage(true)\n    }\n    return () => mounted = false;\n  }, [props.action]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n  \n  // Get the user's available roles for sign-up.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const user = new User(); // Must create a new user inside the useEffect, otherwise the code runs ad nauseum.\n      user.getUserRoles().then(\n        res => {\n          if (res.data) {\n            const userRoles = res.data?.getUserRoles;\n            setUserRoles(userRoles);\n          } else if (res.name) {\n            setError(res.message);\n          }\n        },\n        err => { console.error({err}); }\n      );\n    }\n    return () => mounted = false;\n  }, []);\n  \n  return props.error ? \n  ( // Render the sign-in error.\n    <div className=\"signin-error\">{props.error.message}</div>\n  ) \n  : !props.isLoaded ? \n  (  // Render the loading message.\n    <div className=\"loading unprocessed\">Loading . . . </div>\n  ) \n  : loggedInUser?.role === 'Admin' ?\n  ( // If the user has the correct permissions, load the page.\n    items ?\n    (\n      <div className='user-container'>\n        <div className=\"order-actions user\">\n          <Tabs activeTab={activeTab} tabIndex={activeTabIndex} tabs={tabs} handleClick={handleTabClick} caller={'user'} />\n        </div>\n        <div className=\"order-info\">\n          <div className='stats'>\n            {tabs.length > 1 ? <p className=\"order-info-number-display\">Tab: {`${activeTabIndex + 1} of ${tabs.length}`}</p> : null}\n            <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n            <p className=\"order-info-number-display\">Count: {activeTabCount}</p>\n          </div>\n            <div className='action-links'>\n              <form className='link'>\n                <Link\n                  to={{\n                    pathname: '/login',\n                    state: {\n                      user: {\n                        id: '',\n                        action: 'Add User',\n                        role: activeTab !== 'All Roles' ? activeTab : ''\n                      }\n                    },\n                  }}\n                  >\n                  Add\n                </Link>\n                {activeLink ? (\n                  <Link\n                    to={{\n                      pathname: '/users',\n                      state: {\n                        id: isChecked,\n                        action: 'Delete User',\n                      },\n                    }}\n                    onClick={() => action('deleteUser')}\n                  >\n                    Delete\n                  </Link>\n                ) : (\n                  ''\n                )}\n              </form>\n            </div>\n            {!activeLink && error ? (\n              <div>Error: {error}</div>\n            ) : (\n              ''\n            )}\n            {(props.action === 'Delete User' || props.action === 'Add User') && showMessage ? \n            (\n              !error ? \n              (\n                props.message && !activeLink ?\n                (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>{props.message}</p>\n                  </div>\n                ) : props.id && !activeLink ? \n                (\n                  !Array.isArray(props.id) ? \n                  (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>User #{props.id} has been {message(props.action)}.</p>\n                    </div>\n                  ) \n                  : \n                  (\n                    props.id.length === 1 ? \n                    (\n                      <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                        <p>User #{props.id[0]} has been {message(props.action)}.</p>\n                      </div>\n                    ) \n                    : \n                    (\n                      <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                        <p>The following users have been {message(props.action)}:&nbsp;</p>\n                        <div className='orders-in-array'>\n                          {props.id.map((id, key) => (\n                            props.id.length === 1 ?\n                            (\n                              <p key={key}>{id}</p>\n                            )\n                            : key === props.id.length - 1 ?\n                            (\n                              <p key={key}>{id}.</p>\n                            )\n                            :\n                            (\n                              <p key={key}>{id},<span>&nbsp;</span></p>\n                            )\n                            ))}\n                        </div>\n                      </div>\n                    )\n                  )\n                ) : ( \n                  '' \n                )\n              ) \n              : // There was an error in the action.\n              ( \n              props.id ? \n              (\n                !Array.isArray(props.id) ? \n                (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>The following error occurred when user #{props.id} was {message(props.action)}: {error}.</p>\n                  </div>\n                ) : (\n                  props.id.length > 1 ?\n                  (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>There was a \"{error}\" error when the following IDs were {message(props.action)}:</p>\n                      <div className='orders-in-array'>\n                        {props.id.map((id, key) => (\n                          <p key={key}>{id}</p>))}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>The following error occurred when user #{props.id[0]} was {message(props.action)}: {error}.</p>\n                    </div>\n                  )\n                )\n              ) : (\n                ''\n              )\n            )\n          ) : (\n            ''\n          )}\n          {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} handleBlur={handleBlur} handleClick={handleClick} toggleSelect={toggleSelect} handleRoleSelect={handleRoleSelect} getClassNamesFor={getClassNamesFor} caller={{ users: 'user' }} userRoles={userRoles} /> : null}\n        </div>\n        <table>\n          <thead>\n            <tr className=\"header-row\">\n              {items.length !== 0 ? (\n                <th className='checkbox-th'>\n                  <Checkbox\n                    type='checkbox'\n                    name='selectAll'\n                    handleClick={handleSelectAll}\n                    isChecked={allChecked}\n                    value={activeTab ? activeTab : ''}\n                  />\n                </th>\n              ) : (\n                <th className='hidden-checkbox'></th>\n              )}\n              {formattedHeaders.map((header, key) => (\n                vpWidth < 1280 ?\n                (\n                  header !== 'Email' && header !== 'Date Registered' && header !== 'Last Login' && header !== 'Logged In' && header !== 'Failed Attempts' ?\n                  (\n                    <th\n                      key={key}\n                      onClick={() => requestSort(header.split(' ').join(''))}\n                      className={getClassNamesFor(header.split(' ').join(''))}\n                    >\n                      {header}\n                    </th>\n                  )\n                  :\n                  (\n                    null\n                  )\n                )\n                :\n                (\n                  <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header === 'Failed Attempts' ? 'Failed' : header === 'Date Registered' ? 'Registered' : header}\n                  </th>\n                )\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((item, key) => {\n              console.log({item});\n              return item.Role === activeTab || activeTab === 'All Roles' ? \n              (\n                <tr key={key}>\n                  <td className='select-one'>\n                    <Checkbox\n                      type='checkbox'\n                      name={item.Id}\n                      value={item.Id ? item.Id : ''}\n                      handleClick={handleSelect}\n                      isChecked={isChecked.includes(item.Id)}\n                    />\n                  </td>\n                  <td className='user-link'>\n                    {vpWidth < 1280 ? (\n                      <Link to='#' onClick={() => action('showDetails', item, key)} >\n                        {item.Id}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.Id\n                    )}\n                  </td>\n                  <td\n                    className=\"editable\"\n                    suppressContentEditableWarning=\"true\"\n                    data-default-value={item.Name}\n                    id={`Name-${key}`}\n                    onBlur={(e) => handleBlur(item.Id, key, 'Name', e, null, item.Email)}\n                    onClick={(e) => handleClick(e.target, key, 'Name')}\n                  >\n                    {item.Name}\n                  </td>\n                  <td className='desktop'>{item.Email}</td>\n                  <td className='editable select-container' id={`select-role-${key}`} name='role'>\n                    <p \n                      className='role-option default' \n                      id={`user-role-${key}`}\n                      data-default-value={item.Role}\n                      onClick={() => toggleSelect(key)}\n                    >\n                      {roleName && parseInt(roleName.key) === key ? roleName.roleName : item.Role}\n                    </p>\n                    {userRoles.map((value, idx) => (\n                      <p \n                        className='role-option' \n                        id={`Role-${idx}`}\n                        key={idx} \n                        data-value={value.Id} \n                        onClick={(e) => handleRoleSelect(e, idx, key, item)}\n                      >\n                        {value.Role}\n                      </p>\n                    ))}\n                  </td>\n                  <td className='desktop'>\n                    {item.DateRegistered ? new Date(parseInt(item.DateRegistered)).toISOString().split('T')[0] : 'N/A'}\n                  </td>\n                  <td className='desktop'>\n                    {item.LastLogin ? new Date(parseInt(item.LastLogin)).toISOString().split('T')[0] : 'N/A'}\n                  </td>\n                  <td className='desktop'>{item.LoggedIn ? 'Yes' : 'No'}</td>\n                  <td className='desktop'>{item.FailedAttempts ? item.FailedAttempts : 0}</td>\n                  <td>{item.Active ? 'Yes' : 'No'}</td>\n                </tr>\n              ) : (\n                null\n              )\n              })}\n          </tbody>\n        </table>\n      </div>\n    ) \n    : \n    ( \n      <p>No users have been registered for this service.</p>\n    )\n  ) \n  : \n  (\n    <div className=\"role-denied\">Your profile's assigned role of \"{loggedInUser?.role}\" does not allow you to access this page.</div>\n  )\n}\n\nexport default Users;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}