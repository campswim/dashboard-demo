{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-orders/ignored.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport { userAction } from '../../hooks/get-order';\nimport formatHeaders from '../../hooks/format-headers';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Ignored = props => {\n  _s();\n\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState([]);\n  const [error, setError] = useState(null);\n  const [ignored, setIgnored] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [noLink, setNoLink] = useState(false);\n  const [chars, setChars] = useState(999);\n  const [delayed, setDelayed] = useState(true);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0); // Call the sorting hook.\n\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(ignored, 'ignored'); // Determine whether the class is ascending or descending.\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  }; // Format the headers.\n\n\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), 'CurrencyCode') : ''; // Handle user actions.\n\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } else if (isChecked.length !== 0) {\n      const ids = [];\n      const filteredOrders = ignored.filter(order => isChecked.includes(order.OrderNumber));\n      filteredOrders.forEach(order => ids.push({\n        [order.Type]: order.OrderNumber\n      }));\n      userAction('ignored', path, ids).then(res => {\n        if (res) {\n          setResponse(res === null || res === void 0 ? void 0 : res.data[path]);\n          setStatus(res === null || res === void 0 ? void 0 : res.status);\n          setError(null);\n          showMessage.current = true;\n        }\n      }, err => {\n        console.error({\n          err\n        });\n        setError(err.message);\n        showMessage.current = false;\n      });\n      setIsChecked([]);\n      setAllChecked(false);\n      props.recall('ignoredOrders');\n    } else alert('Please tick an order.'); // Deactivate action buttons if a user's profile has restrictions that match.\n\n\n    if ((props === null || props === void 0 ? void 0 : props.restrictedActions) === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }\n  }; // Handle the toggling of the select-all checkbox.\n\n\n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(ignored.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n  }; // Handle the toggling of individual checkboxes.\n\n\n  const handleSelect = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n\n  const showError = event => {\n    const id = event.target.attributes.name.nodeValue;\n    const errorElement = document.getElementById(id);\n    if (errorElement) errorElement.setAttribute('id', 'show-error');\n  };\n\n  const message = action => {\n    let pastTenseVerb;\n    if (action && action === 'Unignore') pastTenseVerb = 'unignored';\n    return pastTenseVerb;\n  }; // Close the modal on click of the X.\n\n\n  const closeModal = () => {\n    setShowDetails(false); // setIsChecked([]);\n\n    clickCount.current = 0;\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.data) setIgnored(props.data.ignoredOrders);\n    }\n\n    return () => mounted = false;\n  }, [props.data]); // Toggle allChecked.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (ignored && ignored.length !== 0 && isChecked.length === ignored.length) setAllChecked(true);else setAllChecked(false);\n    }\n\n    return () => mounted = false;\n  }, [isChecked, ignored]); // Show or hide optional actions.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';\n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : '';\n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n\n    return () => mounted = false;\n  }, [isChecked]); // Delay the loading message by a second to avoid flashes of the screen when the loading is quick but not enough to trick the eye.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      setTimeout(() => {\n        setDelayed(false);\n      }, 300);\n    }\n\n    return () => mounted = false;\n  }); // Hide the message of the action's result after a new tab has been chosen.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n\n    return () => mounted = false;\n  }); // Hide checkboxes if a user is not allowed any actions.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props === null || props === void 0 ? void 0 : props.restrictedActions) {\n        if (props.restrictedActions === 'All') {\n          // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n\n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n\n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        }\n      }\n    }\n\n    return () => mounted = false;\n  }, [props === null || props === void 0 ? void 0 : props.restrictedActions, items]); // Update the vpWidth and vpHeight variables.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n\n      window.addEventListener('resize', handleResize);\n    }\n\n    return () => mounted = false;\n  }, [vpWidth]); // Determine the width of the browser window and set toggles accordingly.\n\n  useLayoutEffect(() => {\n    let mounted = true; // const browserWidth = window.innerWidth;\n\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    };\n\n    setChars(width < 768 ? 12 : width < 1023 ? 24 : width < 1280 ? 48 : 999);\n    items.forEach(item => {\n      if (item.ErrorMessage) setNoLink(item.ErrorMessage.length < chars ? true : false);\n    });\n    window.onresize = handleResize;\n\n    if (mounted) {//   if (browserWidth < 768) {\n      //     setToggleShorterError(true);\n      //     setShortenDates(true);\n      //   } else {\n      //     setToggleShorterError(false);\n      //     setShortenDates(false);\n      //   }\n    }\n\n    return () => mounted = false;\n  }, [width, items, chars]);\n  return props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this) : !props.isLoaded ? delayed ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading . . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info\",\n      children: [items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Selected: \", isChecked.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Count: \", items.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this) : null, activeLink ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-links\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"link\",\n          children: props && props.restrictedActions ? getActions('ignored', props.restrictedActions, isChecked, takeAction) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this) : status && status !== 200 && response ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this) : null, props.callerId === 'ignored' ? !error ? props.order ? showMessage.current && props.action && !activeLink && props.action === 'Unignore' ? typeof props.order === 'number' || props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order \", props.order, \" has been \", message(props.action), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following orders have been \", message(props.action), \":\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.order.map((id, key) => props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 27\n          }, this) : key === props.order.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 45\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 19\n      }, this) : null : null : props.order ? typeof props.order === 'number' || props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following error occurred when order \", props.order, \" was \", message(props.action), \": \", error, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There was a \\\"\", error, \"\\\" error when the following orders were \", message(props.action), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.order.map((id, key) => props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this) : key === props.order.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 43\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }, this) : null : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"unpushed-table-large\",\n      id: \"tab\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: [items.length !== 0 ? /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"checkbox-th\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: \"selectAll\",\n              handleClick: handleSelectAll,\n              isChecked: allChecked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), headers ? headers.map((header, key) => vpWidth < 1280 ? header !== 'Order Date' && header !== 'User' && header !== 'Message' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Ignored Date' ? 'Ignored' : header.replace('Order', '')\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }, this) : null : /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Ignored Date' ? 'Ignored' : header === 'User' ? 'By User' : header.replace('Order', '')\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 21\n          }, this)) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.length !== 0 ? items.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"select-one\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: item.OrderNumber,\n              value: item.OrderNumber,\n              handleClick: handleSelect,\n              isChecked: isChecked.includes(item.OrderNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.Type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"order-number order-link\",\n            children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              onClick: () => takeAction('showDetails', item, key),\n              children: item.OrderNumber ? item.OrderNumber : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 21\n            }, this) : item.OrderNumber ? item.OrderNumber : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"order-date desktop\",\n            children: new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(item.OrderTotal, item.CurrencyCode)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(parseInt(item.IgnoredDate)).toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ignored-by desktop\",\n            children: item.User\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"unpushed-error-message desktop\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `error-message ${noLink}`,\n              title: item.Message.length > chars ? \"Click to view the error.\" : null,\n              onClick: item.Message.length > chars ? showError : null,\n              name: item.OrderNumber,\n              children: [item.Message.includes('\\r\\n') ? `${item.Message.split('\\r\\n').join(' ').slice(0, chars)}` : `${item.Message.slice(0, chars)}`, item.Message.length > chars ? ' (...)' : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n      details: orderDetails,\n      closeModal: closeModal,\n      getClassNamesFor: getClassNamesFor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Ignored, \"IwPO8FGo20496vcTzccpVHVxyE4=\", false, function () {\n  return [useSort];\n});\n\n_c = Ignored;\nexport default Ignored;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ignored\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-orders/ignored.js"],"names":["React","useEffect","useLayoutEffect","useState","useRef","Link","Checkbox","useSort","formatCurrency","userAction","formatHeaders","getActions","OrderDetails","Ignored","props","allChecked","setAllChecked","isChecked","setIsChecked","status","setStatus","response","setResponse","error","setError","ignored","setIgnored","activeLink","setActiveLink","width","setWidth","window","innerWidth","noLink","setNoLink","chars","setChars","delayed","setDelayed","orderDetails","setOrderDetails","showDetails","setShowDetails","vpWidth","setVpWidth","showMessage","messageRef","clickCount","items","requestSort","sortConfig","getClassNamesFor","name","key","direction","undefined","headers","length","Object","keys","takeAction","path","item","sessionStorage","setItem","scrollTo","top","behavior","ids","filteredOrders","filter","order","includes","OrderNumber","forEach","push","Type","then","res","data","current","err","console","message","recall","alert","restrictedActions","toLowerCase","handleSelectAll","map","handleSelect","event","value","checked","target","showError","id","attributes","nodeValue","errorElement","document","getElementById","setAttribute","action","pastTenseVerb","closeModal","mounted","ignoredOrders","element","className","getAttribute","replace","setTimeout","click","headerCheckbox","getElementsByClassName","rowCheckbox","checkbox","classList","add","handleResize","addEventListener","ErrorMessage","onresize","isLoaded","callerId","header","split","join","Date","parseInt","OrderDate","toISOString","OrderTotal","CurrencyCode","IgnoredDate","User","Message","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport { userAction } from '../../hooks/get-order';\nimport formatHeaders from '../../hooks/format-headers';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\n\nconst Ignored = props => {  \n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState([]);\n  const [error, setError] = useState(null);\n  const [ignored, setIgnored] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [noLink, setNoLink] = useState(false);\n  const [chars, setChars] = useState(999);\n  const [delayed, setDelayed] = useState(true);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0);\n\n  // Call the sorting hook.\n  const { items, requestSort, sortConfig } = useSort(ignored, 'ignored');\n\n  // Determine whether the class is ascending or descending.\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), 'CurrencyCode') : '';\n\n  // Handle user actions.\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n    \n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      const ids = [];\n      const filteredOrders = ignored.filter(order => isChecked.includes(order.OrderNumber));\n      filteredOrders.forEach(order => ids.push({[order.Type]: order.OrderNumber}));\n\n      userAction('ignored', path, ids).then(\n        res => {\n          if (res) {\n            setResponse(res?.data[path]);\n            setStatus(res?.status);\n            setError(null);\n            showMessage.current = true;\n          }\n        },\n        err => {\n          console.error({err});\n          setError(err.message);\n          showMessage.current = false;\n        }\n        );\n        setIsChecked([]);\n        setAllChecked(false);\n        props.recall('ignoredOrders');\n    } else alert('Please tick an order.');\n\n    // Deactivate action buttons if a user's profile has restrictions that match.\n    if (props?.restrictedActions === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }    \n  };\n  \n  // Handle the toggling of the select-all checkbox.\n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(ignored.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n  };\n\n  // Handle the toggling of individual checkboxes.\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n\n  const showError = event => {\n    const id = event.target.attributes.name.nodeValue;\n    const errorElement = document.getElementById(id);\n    if (errorElement) errorElement.setAttribute('id', 'show-error');\n  };\n\n  const message = (action) => {\n    let pastTenseVerb;\n    if (action && action === 'Unignore') pastTenseVerb = 'unignored';\n    return pastTenseVerb;\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    // setIsChecked([]);\n    clickCount.current = 0;\n  };\n  \n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.data) setIgnored(props.data.ignoredOrders);\n    }\n    return () => mounted = false;\n  }, [props.data]);\n\n  // Toggle allChecked.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (ignored && ignored.length !== 0 && isChecked.length === ignored.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, ignored]);\n\n  // Show or hide optional actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';  \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n\n  // Delay the loading message by a second to avoid flashes of the screen when the loading is quick but not enough to trick the eye.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      setTimeout(() => {\n        setDelayed(false);\n      }, 300);\n    }\n    return () => mounted = false;\n  });\n\n  // Hide the message of the action's result after a new tab has been chosen.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n    return () => mounted = false;\n  });\n\n  // Hide checkboxes if a user is not allowed any actions.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props?.restrictedActions) {\n        if (props.restrictedActions === 'All') { // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n    \n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n    \n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        } \n      }\n    }\n\n    return () => mounted = false;\n  }, [props?.restrictedActions, items]);  \n  \n  // Update the vpWidth and vpHeight variables.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n\n  // Determine the width of the browser window and set toggles accordingly.\n  useLayoutEffect(() => {\n    let mounted = true;\n    // const browserWidth = window.innerWidth;\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    };\n\n    setChars(width < 768 ? 12 : width < 1023 ? 24 : width < 1280 ? 48 : 999);\n    items.forEach(item => {\n      if (item.ErrorMessage) setNoLink(item.ErrorMessage.length < chars ? true : false);\n    });\n\n    window.onresize = handleResize;\n\n    if (mounted) {\n    //   if (browserWidth < 768) {\n    //     setToggleShorterError(true);\n    //     setShortenDates(true);\n    //   } else {\n    //     setToggleShorterError(false);\n    //     setShortenDates(false);\n    //   }\n    }\n    return () => mounted = false;\n  }, [width, items, chars]);\n  \n  return props.error ? \n  (\n    <div className=\"signin-error\">{props.error.message}</div>\n  ) : !props.isLoaded ?\n  (\n    delayed ? \n    (\n      null\n    ) : (\n      <div className=\"loading\">Loading . . .</div>\n    )\n  )\n  :\n  (\n    <>\n      <div className='order-info'>\n        {items.length > 0 ? \n        (\n          <div className=\"stats\">\n            <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n            <p className=\"order-info-number-display\">Count: {items.length}</p>\n          </div>\n        )\n        :\n        (\n          null\n        )}\n        {activeLink ? (\n          <div className='action-links'>\n            <form className='link'>\n              {props && props.restrictedActions ? getActions('ignored', props.restrictedActions, isChecked, takeAction) : null}\n            </form>\n          </div>\n        ) : status && status !== 200 && response ? (\n          <div>Error: {error}</div>\n        ) : (\n          null\n        )}\n        {props.callerId === 'ignored' ? (\n          !error ? (\n            props.order ? (\n              showMessage.current && props.action && !activeLink && (props.action === 'Unignore') ? (\n                typeof props.order === 'number' || props.order.length === 1 ? (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>Order {props.order} has been {message(props.action)}.</p>\n                  </div>\n                ) : (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>The following orders have been {message(props.action)}:&nbsp;</p>\n                    <div className='orders-in-array'>\n                      {props.order.map((id, key) => (\n                        props.order.length === 1 ? \n                        ( \n                          <p key={key}>{id}</p>\n                        )\n                        : key === props.order.length - 1 ?\n                        (\n                          <p key={key}>{id}.</p>\n                        )\n                        :\n                        (\n                          <p key={key}>{id},<span>&nbsp;</span></p>\n                        )                          \n                      ))}\n                    </div>\n                  </div>\n                )\n              ) : (\n                null\n              )\n            ) : (\n              null\n            )\n          ) : (\n            props.order ? (\n              typeof props.order === 'number' || props.order.length === 1 ? (\n                <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                  <p>The following error occurred when order {props.order} was {message(props.action)}: {error}.</p>\n                </div>\n              ) : (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>There was a \"{error}\" error when the following orders were {message(props.action)}:</p>\n                  <div className='orders-in-array'>\n                    {props.order.map((id, key) => (\n                      props.order.length === 1 ? \n                      ( \n                        <p key={key}>{id}</p>\n                      )\n                      : key === props.order.length - 1 ?\n                      (\n                        <p key={key}>{id}.</p>\n                      )\n                      :\n                      (\n                        <p key={key}>{id},<span>&nbsp;</span></p>\n                      )                          \n                    ))}\n                  </div>\n                </div>\n              )\n            ) : (\n              null\n            )\n          )\n        ) : (\n          null\n        )}\n      </div>\n        \n      <table className=\"unpushed-table-large\" id=\"tab\">\n        <thead>\n          <tr className='header-row'>\n            {items.length !== 0 ? (\n              <th className='checkbox-th'>\n                <Checkbox\n                  type='checkbox'\n                  name='selectAll'\n                  handleClick={handleSelectAll}\n                  isChecked={allChecked}\n                />\n              </th>\n            ) : (\n              <th className='hidden-checkbox'></th>\n            )}\n            {headers ? \n            (\n              headers.map((header, key) => (\n                vpWidth < 1280 ?\n                (\n                  header !== 'Order Date' && header !== 'User' && header !== 'Message' ?\n                  (\n                    <th\n                      key={key}\n                      onClick={() => requestSort(header.split(' ').join(''))}\n                      className={getClassNamesFor(header.split(' ').join(''))}\n                    >\n                      {header === 'Ignored Date' ? 'Ignored' : header.replace('Order', '')}\n                    </th>\n                  )\n                  :\n                  (\n                    null\n                  )\n                )\n                :\n                (\n                    <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header === 'Ignored Date' ? 'Ignored' : header === 'User' ? 'By User' : header.replace('Order', '')}\n                  </th>\n                )\n              ))\n            )\n            : \n              null\n            }\n          </tr>\n        </thead>\n        <tbody>\n        {items.length !== 0 ? (\n          items.map((item, key) => (\n              <tr key={key}>\n                <td className='select-one'>\n                  <Checkbox\n                    type='checkbox'\n                    name={item.OrderNumber}\n                    value={item.OrderNumber}\n                    handleClick={handleSelect}\n                    isChecked={isChecked.includes(item.OrderNumber)}\n                  />\n                </td>\n                <td>{item.Type}</td>\n                <td className=\"order-number order-link\">\n                  {vpWidth < 1280 ?\n                  (\n                    <Link\n                      to='#'\n                      onClick={() => takeAction('showDetails', item, key)}\n                    >\n                      {item.OrderNumber ? item.OrderNumber : 'None'}\n                    </Link>\n                  )\n                  :\n                  (\n                    item.OrderNumber ? item.OrderNumber : 'None'\n                  )}\n                </td>\n                <td className=\"order-date desktop\">{new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]}</td>\n                <td>{formatCurrency(item.OrderTotal, item.CurrencyCode)}</td>\n                <td>{new Date(parseInt(item.IgnoredDate)).toISOString().split('T')[0]}</td>\n                <td className=\"ignored-by desktop\">{item.User}</td>\n                <td className=\"unpushed-error-message desktop\">\n                  <span className={`error-message ${noLink}`} title={item.Message.length > chars ? \"Click to view the error.\" : null} onClick={item.Message.length > chars ? showError : null} name={item.OrderNumber}>\n                    {item.Message.includes('\\r\\n') ? `${item.Message.split('\\r\\n').join(' ').slice(0, chars)}` : `${item.Message.slice(0, chars)}`}\n                    {item.Message.length > chars ? ' (...)' : null}\n                  </span>\n                </td>\n              </tr>\n          ))\n        ) : (\n            <tr>\n              <td className='hidden-checkbox'></td>\n              <td>None</td>\n            </tr>\n        )}\n        </tbody>\n      </table>\n      {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> : null}\n    </>\n  )\n};\n\nexport default Ignored;\n"]},"metadata":{},"sourceType":"module"}