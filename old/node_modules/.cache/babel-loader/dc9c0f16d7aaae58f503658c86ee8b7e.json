{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-processes/unprocessed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data'; // import Checkbox from '../../components/checkbox';\n\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\nimport formatHeaders from '../../hooks/format-headers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Unprocessed = props => {\n  _s();\n\n  const [activeTab, setActiveTab] = useState(null);\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [jobNamesUnique, setJobNamesUnique] = useState([]);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth); // The following two constants handle the sorting algorithm.\n\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(props.jobs, 'jobs');\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  }; // Format the headers.\n\n\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['Id', 'Name']) : ''; // Handles the selection and formatting of the page's tabs.\n\n  const handleClick = (event, next) => {\n    let chosenButtonValue;\n\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n  }; // Handles the action chosen by the user, if applicable.\n\n\n  const action = (path, item) => {\n    if (path === 'showDetails') {\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } //Store a flag in storage to indicate that a new action has been initiated.\n\n\n    sessionStorage.setItem('action', true);\n  }; // Close the modal on click of the X.\n\n\n  const closeModal = () => setShowDetails(false); // Set the active tab, when it changes.\n\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]); // Create the page's tabs for each unique job.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props && props.jobs) {\n        props.jobs.forEach(job => {\n          const jobsName = formatHeaders(job.Name);\n          if (!jobNamesUnique.includes(jobsName)) setJobNamesUnique([...jobNamesUnique, jobsName]);\n        });\n      }\n    }\n\n    return () => mounted = false;\n  }, [jobNamesUnique, props, activeTab]); // Set the default active tab and each tab's count and tab's index.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (!activeTab && jobNamesUnique && jobNamesUnique.length > 0) {\n        setActiveTab(jobNamesUnique[0]);\n      }\n\n      if (props.jobs) {\n        let counter = 0;\n        props.jobs.forEach(job => {\n          if (formatHeaders(job.Name) === formatHeaders(activeTab)) {\n            counter++;\n          }\n        });\n        setActiveTabCount(counter);\n      }\n\n      const activeTabKeyValue = Object.entries(jobNamesUnique).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n\n    return () => mounted = false;\n  }, [activeTab, activeTabIndex, jobNamesUnique, props.jobs]); // Update the vpWidth variable.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n\n      window.addEventListener('resize', handleResize);\n    }\n\n    return () => mounted = false;\n  }, [vpWidth]);\n  return props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this) : !props.isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading unprocessed\",\n    children: \"Loading . . . \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this) : props ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unprocessed-jobs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-actions unprocessed\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        activeTab: activeTab,\n        tabIndex: activeTabIndex,\n        tabs: jobNamesUnique,\n        handleClick: handleClick,\n        caller: \"unprocessed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info no-actions\",\n      children: [items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [jobNamesUnique.length > 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Tab: \", `${activeTabIndex + 1} of ${jobNamesUnique.length}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 42\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Order Count: \", activeTabCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : null, activeLink ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-links\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"link\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: () => action('showDetails'),\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : null, showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n        details: orderDetails,\n        closeModal: closeModal,\n        getClassNamesFor: getClassNamesFor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"unprocessed-jobs-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: headers ? headers.map((header, key) => vpWidth < 1280 ? header !== 'Line Number' && header !== 'At' & header !== 'Message' && header !== 'Exception' && header !== 'Additional Data' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Order Number' ? 'Order' : header === 'Category' ? 'Cat' : header === 'External System' ? 'Sys' : header === 'Data Direction' ? 'Data' : header === 'Message' ? 'Error' : header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this) : null : /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Order Number' ? 'Order' : header === 'Line Number' ? 'Line' : header === 'External System' ? 'System' : header === 'Data Direction' ? 'Data' : header === 'Message' ? 'Error' : header === 'Additional Data' ? 'Additional' : header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.length > 0 ? items.map((item, key) => {\n          return formatHeaders(item.Name) === formatHeaders(activeTab) ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-number order-link\",\n              children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: () => action('showDetails', item),\n                children: item.OrderNumber ? item.OrderNumber : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 23\n              }, this) : item.OrderNumber ? item.OrderNumber : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"line-number desktop\",\n              children: item.LineNumber ? item.LineNumber : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-category\",\n              children: item.Category ? item.Category : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"external-system\",\n              children: item.ExternalSystem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"data-direction\",\n              children: item.DataDirection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-date desktop\",\n              children: new Date(parseInt(item.At)).toISOString().split('T')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-message desktop\",\n              children: item.Message ? item.Message : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-exception desktop\",\n              children: item.Exception ? item.Exception : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-additional-data desktop\",\n              children: item.AdditionalData ? item.AdditionalData : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this) : null;\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this) : '';\n};\n\n_s(Unprocessed, \"4I+GIso4zebNuDA2XgYN2mwvK7I=\", false, function () {\n  return [useSort];\n});\n\n_c = Unprocessed;\nexport default Unprocessed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Unprocessed\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-processes/unprocessed.js"],"names":["React","useState","useEffect","Link","useSort","OrderDetails","Tabs","formatHeaders","Unprocessed","props","activeTab","setActiveTab","activeTabIndex","setActiveTabIndex","activeTabCount","setActiveTabCount","activeLink","setActiveLink","orderDetails","setOrderDetails","showDetails","setShowDetails","jobNamesUnique","setJobNamesUnique","vpWidth","setVpWidth","window","innerWidth","items","requestSort","sortConfig","jobs","getClassNamesFor","name","key","direction","undefined","headers","length","Object","keys","handleClick","event","next","chosenButtonValue","preventDefault","target","value","action","path","item","scrollTo","top","behavior","sessionStorage","setItem","closeModal","mounted","forEach","job","jobsName","Name","includes","counter","activeTabKeyValue","entries","filter","parseInt","handleResize","addEventListener","error","message","isLoaded","map","header","split","join","OrderNumber","LineNumber","Category","ExternalSystem","DataDirection","Date","At","toISOString","Message","Exception","AdditionalData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\n// import Checkbox from '../../components/checkbox';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\nimport formatHeaders from '../../hooks/format-headers';\n\nconst Unprocessed = props => {\n  const [activeTab, setActiveTab] = useState(null); \n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [jobNamesUnique, setJobNamesUnique] = useState([]);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n\n  // The following two constants handle the sorting algorithm.\n  const { items, requestSort, sortConfig } = useSort(props.jobs, 'jobs');\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  \n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['Id', 'Name']) : '';\n\n  // Handles the selection and formatting of the page's tabs.\n  const handleClick = (event, next) => {\n    let chosenButtonValue;\n\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n  };\n  \n  // Handles the action chosen by the user, if applicable.\n  const action = (path, item) => {\n    if (path === 'showDetails') {\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => setShowDetails(false);\n    \n  // Set the active tab, when it changes.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]);\n    \n  // Create the page's tabs for each unique job.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props && props.jobs) {\n        props.jobs.forEach(job => {\n          const jobsName = formatHeaders(job.Name);\n          if (!jobNamesUnique.includes(jobsName)) setJobNamesUnique([...jobNamesUnique, jobsName]);\n        });\n      }\n    }\n\n    return () => mounted = false;\n  }, [jobNamesUnique, props, activeTab]);\n\n  // Set the default active tab and each tab's count and tab's index.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (!activeTab && jobNamesUnique && jobNamesUnique.length > 0) {\n        setActiveTab(jobNamesUnique[0]);\n      }\n        \n      if (props.jobs) {\n        let counter = 0;\n\n        props.jobs.forEach(job => {\n          if (formatHeaders(job.Name) === formatHeaders(activeTab)) {\n            counter++;\n          }\n        });\n\n        setActiveTabCount(counter);\n      }\n  \n      const activeTabKeyValue = Object.entries(jobNamesUnique).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n\n    return () => mounted = false;\n  }, [activeTab, activeTabIndex, jobNamesUnique, props.jobs]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n    \n  return props.error ? \n  (\n    <div className=\"signin-error\">{props.error.message}</div>\n  ) : !props.isLoaded ? \n  ( \n    <div className=\"loading unprocessed\">Loading . . . </div>\n  ) : props ? (\n    <div className=\"unprocessed-jobs-container\">\n      <div className=\"order-actions unprocessed\">\n        <Tabs activeTab={activeTab} tabIndex={activeTabIndex} tabs={jobNamesUnique} handleClick={handleClick} caller='unprocessed' />\n      </div>\n      <div className=\"order-info no-actions\">\n        {items.length > 0 ? \n        (\n          <div className=\"stats\">\n            {jobNamesUnique.length > 1 ? <p className=\"order-info-number-display\">Tab: {`${activeTabIndex + 1} of ${jobNamesUnique.length}`}</p> : null}\n            <p className=\"order-info-number-display\">Order Count: {activeTabCount}</p>\n          </div>\n        )\n        :\n        (\n          null\n        )}\n        {activeLink ? \n        (\n          <div className=\"action-links\">\n            <form className=\"link\">\n              <Link to='#' onClick={() => action('showDetails')}>\n                Details\n              </Link>\n            </form>\n          </div>\n        ) \n        : \n        (\n          null\n        )}\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> : null}\n      </div>\n\n      <table className=\"unprocessed-jobs-table\">\n        <thead>\n          <tr className=\"header-row\">\n            {headers ? \n            (\n              headers.map((header, key) => (\n                vpWidth < 1280 ?\n                (\n                  header !== 'Line Number' && header !== 'At' & header !== 'Message' && header !== 'Exception' && header !== 'Additional Data' ?\n                  (\n                    <th\n                      key={key}\n                      onClick={() => requestSort(header.split(' ').join(''))}\n                      className={getClassNamesFor(header.split(' ').join(''))}\n                    >\n                      {header === 'Order Number' ? 'Order' : header === 'Category' ? 'Cat' : header === 'External System' ? 'Sys' : header === 'Data Direction' ? 'Data' : header === 'Message' ? 'Error' : header}\n                    </th>\n                  )\n                  : \n                  (\n                    null\n                  )\n                )\n                :\n                (\n                  <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header === 'Order Number' ? 'Order' : header === 'Line Number' ? 'Line' : header === 'External System' ? 'System' : header === 'Data Direction' ? 'Data' : header === 'Message' ? 'Error' : header === 'Additional Data' ? 'Additional': header}\n                  </th>\n                )\n              ))\n            )\n            : \n              null\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {items.length > 0 ? (\n            items.map((item, key) => {\n              return formatHeaders(item.Name) === formatHeaders(activeTab) ? \n              (\n                <tr key={key}>\n                  <td className=\"order-number order-link\">\n                    {vpWidth < 1280 ?\n                    (\n                      <Link to='#' onClick={() => action('showDetails', item)} >\n                        {item.OrderNumber ? item.OrderNumber : 'None'}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.OrderNumber ? item.OrderNumber : 'None'\n                    )}\n                  </td>\n                  <td className=\"line-number desktop\">{item.LineNumber ? item.LineNumber : 'N/A'}</td>\n                  <td className=\"order-category\">{item.Category ? item.Category : 'N/A'}</td>\n                  <td className=\"external-system\">{item.ExternalSystem}</td>\n                  <td className=\"data-direction\">{item.DataDirection}</td>\n                  <td className=\"order-date desktop\">{new Date(parseInt(item.At)).toISOString().split('T')[0]}</td>\n                  <td className=\"order-message desktop\">{item.Message ? item.Message : 'None'}</td>\n                  <td className=\"order-exception desktop\">{item.Exception ? item.Exception : 'None'}</td>\n                  <td className=\"order-additional-data desktop\">{item.AdditionalData ? item.AdditionalData : 'None'}</td>\n                </tr>\n              ) : \n              (\n                null\n              )\n              })\n          ) : (\n            <tr>\n              <td className=\"hidden-checkbox\"></td>\n              <td>None</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  ) : (\n    ''\n  )\n};\n\nexport default Unprocessed;\n"]},"metadata":{},"sourceType":"module"}