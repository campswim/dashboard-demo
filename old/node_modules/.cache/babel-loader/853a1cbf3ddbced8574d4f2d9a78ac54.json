{"ast":null,"code":"import apiCall from './api-call';\nexport async function getOrders(query) {\n  if (!query) return;\n  const operation = query;\n  query = `query ${operation} {${operation} `;\n  query += 'failedPushes' === operation ? `{OrderNumber Market Warehouse CurrencyCode OrderTotalAmount OrderTypeDescription CustomerNumber OrderDate StagingImportDate ErrorCode ErrorMessage}}` : 'failedPulls' === operation ? `{Id OrderNumber OrderDate OrderTotal CurrencyCode At Message Exception}}` : `{Type OrderNumber OrderDate OrderTotal CurrencyCode IgnoredDate User Message}}`;\n  const result = await apiCall(operation, query).then(res => {\n    return res;\n  }, err => {\n    return err;\n  });\n  return result;\n}\nexport async function getUnpushedOrders(status) {\n  const operation = 'unpushed';\n  const query = `query ${operation} {${operation} {Market, OrderTotalAmount, PushStatusId, Error}}`;\n  const variables = {\n    status\n  };\n  const result = await apiCall(operation, query, variables).then(res => {\n    return res;\n  }, err => {\n    return err;\n  });\n  return result;\n}\nexport async function userAction(tab, operation, ids) {\n  if (!operation || !ids) return;\n  const query = tab === 'unpushed' ? `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {OrderNumber}}` : tab === 'unpulled' ? `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {Id, OrderNumber, OrderDate, OrderTotal, CurrencyCode, Message, At, IgnoredAt, Exception}}` : tab === 'ignored' ? `mutation ${operation}($ids: [IgnoredObject]!) {${operation}(ids: $ids) {OrderNumber}}` : '';\n  const variables = {\n    ids\n  };\n  return await apiCall(operation, query, variables).then(res => {\n    return res;\n  }, err => console.err(err));\n}","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/hooks/get-order.js"],"names":["apiCall","getOrders","query","operation","result","then","res","err","getUnpushedOrders","status","variables","userAction","tab","ids","console"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AAEA,OAAO,eAAeC,SAAf,CAAyBC,KAAzB,EAAgC;AACrC,MAAI,CAACA,KAAL,EAAY;AACZ,QAAMC,SAAS,GAAGD,KAAlB;AACAA,EAAAA,KAAK,GAAI,SAAQC,SAAU,KAAIA,SAAU,GAAzC;AACAD,EAAAA,KAAK,IAAI,mBAAmBC,SAAnB,GAAgC,sJAAhC,GAAwL,kBAAkBA,SAAlB,GAA+B,0EAA/B,GAA4G,gFAA7S;AACA,QAAMC,MAAM,GAAG,MAAMJ,OAAO,CAACG,SAAD,EAAYD,KAAZ,CAAP,CAA0BG,IAA1B,CACnBC,GAAG,IAAI;AAAE,WAAOA,GAAP;AAAa,GADH,EAEnBC,GAAG,IAAI;AAAE,WAAOA,GAAP;AAAa,GAFH,CAArB;AAKA,SAAOH,MAAP;AACD;AAED,OAAO,eAAeI,iBAAf,CAAiCC,MAAjC,EAAyC;AAC9C,QAAMN,SAAS,GAAG,UAAlB;AACA,QAAMD,KAAK,GAAI,SAAQC,SAAU,KAAIA,SAAU,mDAA/C;AACA,QAAMO,SAAS,GAAG;AAAED,IAAAA;AAAF,GAAlB;AACA,QAAML,MAAM,GAAG,MAAMJ,OAAO,CAACG,SAAD,EAAYD,KAAZ,EAAmBQ,SAAnB,CAAP,CAAqCL,IAArC,CACnBC,GAAG,IAAI;AAAE,WAAOA,GAAP;AAAa,GADH,EAEnBC,GAAG,IAAI;AAAE,WAAOA,GAAP;AAAa,GAFH,CAArB;AAKA,SAAOH,MAAP;AACD;AAED,OAAO,eAAeO,UAAf,CAA0BC,GAA1B,EAA+BT,SAA/B,EAA0CU,GAA1C,EAA+C;AACpD,MAAI,CAACV,SAAD,IAAc,CAACU,GAAnB,EAAwB;AACxB,QAAMX,KAAK,GAAGU,GAAG,KAAK,UAAR,GAAsB,YAAWT,SAAU,sBAAqBA,SAAU,4BAA1E,GAAwGS,GAAG,KAAK,UAAR,GAAsB,YAAWT,SAAU,sBAAqBA,SAAU,wGAA1E,GAAoLS,GAAG,KAAK,SAAR,GAAqB,YAAWT,SAAU,6BAA4BA,SAAU,4BAAhF,GAA8G,EAAxZ;AACA,QAAMO,SAAS,GAAG;AAAEG,IAAAA;AAAF,GAAlB;AACA,SAAO,MAAMb,OAAO,CAACG,SAAD,EAAYD,KAAZ,EAAmBQ,SAAnB,CAAP,CAAqCL,IAArC,CACXC,GAAG,IAAI;AAAE,WAAOA,GAAP;AAAa,GADX,EAEXC,GAAG,IAAIO,OAAO,CAACP,GAAR,CAAYA,GAAZ,CAFI,CAAb;AAID","sourcesContent":["import apiCall from './api-call';\n\nexport async function getOrders(query) {\n  if (!query) return;\n  const operation = query;\n  query = `query ${operation} {${operation} `;\n  query += 'failedPushes' === operation ? `{OrderNumber Market Warehouse CurrencyCode OrderTotalAmount OrderTypeDescription CustomerNumber OrderDate StagingImportDate ErrorCode ErrorMessage}}` : 'failedPulls' === operation ? `{Id OrderNumber OrderDate OrderTotal CurrencyCode At Message Exception}}` : `{Type OrderNumber OrderDate OrderTotal CurrencyCode IgnoredDate User Message}}`;\n  const result = await apiCall(operation, query).then(\n    res => { return res; },\n    err => { return err; }\n  );\n\n  return result;\n}\n\nexport async function getUnpushedOrders(status) {\n  const operation = 'unpushed';\n  const query = `query ${operation} {${operation} {Market, OrderTotalAmount, PushStatusId, Error}}`;\n  const variables = { status }\n  const result = await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => { return err; }\n  );\n\n  return result;\n}\n\nexport async function userAction(tab, operation, ids) {\n  if (!operation || !ids) return;\n  const query = tab === 'unpushed' ? `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {OrderNumber}}` : tab === 'unpulled' ? `mutation ${operation}($ids: [String]!) {${operation}(ids: $ids) {Id, OrderNumber, OrderDate, OrderTotal, CurrencyCode, Message, At, IgnoredAt, Exception}}` : tab === 'ignored' ? `mutation ${operation}($ids: [IgnoredObject]!) {${operation}(ids: $ids) {OrderNumber}}` : '';\n  const variables = { ids };\n  return await apiCall(operation, query, variables).then(\n    res => { return res; },\n    err => console.err(err)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}