{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/home/failed-payments/failed-payment.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../../hooks/sort-data';\nimport formatHeaders from '../../../hooks/format-headers';\nimport formatCurrency from '../../../hooks/format-currency';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FailedJobs = props => {\n  _s();\n  console.log({\n    props\n  });\n\n  // Get the table's headers from the data's keys.\n  const headers = props.data && JSON.stringify(props.data) !== '{}' ? formatHeaders(Object.keys(Object.values(props.data)[0]), 'CurrencyCode') : [];\n  // The following two constants handle the sorting algorithm.\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(props.data && JSON.stringify(props.data) !== '{}' ? Object.values(props.data) : [], 'jobs-summary');\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  return props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : !props.isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading . . . \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dash-failed-processes desktop\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"unprocessed-jobs-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"header-row\",\n            children: headers ? headers.map((header, key) => /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => requestSort(header.split(' ').join('')),\n              className: getClassNamesFor(header.split(' ').join('')),\n              children: header\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.length > 0 ? items.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: '/failed-processes',\n                  state: {\n                    job: item.Type\n                  }\n                },\n                children: item.Type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.Count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(item.AggregateAmount, item.CurrencyCode)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.ErrorReasons.map((reason, idx) => {\n                return item.ErrorReasons.length === 1 || idx === item.ErrorReasons.length - 1 ? reason : `${reason}, `;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dash-failed-processes mobile\",\n      children: items.length > 0 ? items.map((item, i) => /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headers ? headers.map((header, j) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 23\n            }, this), header !== 'Name' ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item[header.split(' ').join('')]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"jobs-link\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: {\n                  pathname: '/failed-payments',\n                  state: {\n                    type: item.Name\n                  }\n                },\n                children: item.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)]\n          }, j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FailedJobs, \"QPHcTATq20H/OpQ1sh37sgXRvZQ=\", false, function () {\n  return [useSort];\n});\n_c = FailedJobs;\nexport default FailedJobs;\nvar _c;\n$RefreshReg$(_c, \"FailedJobs\");","map":{"version":3,"names":["React","Link","useSort","formatHeaders","formatCurrency","jsxDEV","_jsxDEV","Fragment","_Fragment","FailedJobs","props","_s","console","log","headers","data","JSON","stringify","Object","keys","values","items","requestSort","sortConfig","getClassNamesFor","name","key","direction","undefined","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoaded","map","header","onClick","split","join","length","item","to","pathname","state","job","Type","Count","AggregateAmount","CurrencyCode","ErrorReasons","reason","idx","i","j","type","Name","_c","$RefreshReg$"],"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/home/failed-payments/failed-payment.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../../hooks/sort-data';\nimport formatHeaders from '../../../hooks/format-headers';\nimport formatCurrency from '../../../hooks/format-currency';\n\nconst FailedJobs = props => {\n\n  console.log({props});\n  \n  // Get the table's headers from the data's keys.\n  const headers = props.data && JSON.stringify(props.data) !== '{}' ? formatHeaders(Object.keys(Object.values(props.data)[0]), 'CurrencyCode') : [];\n  // The following two constants handle the sorting algorithm.\n  const { items, requestSort, sortConfig } = useSort(props.data && JSON.stringify(props.data) !== '{}' ? Object.values(props.data) : [], 'jobs-summary');\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n    \n  return props.error ? \n  (\n    <div className=\"signin-error\">{props.error}</div>\n  )\n  : !props.isLoaded ?\n  (\n    <div className=\"loading\">Loading . . . </div>\n  )\n  :\n  (\n    <>\n      <div className=\"dash-failed-processes desktop\">\n        <table className=\"unprocessed-jobs-table\">\n          <thead>\n            <tr className=\"header-row\">\n\n              {headers ? \n              (\n                headers.map((header, key) => (\n                  <th\n                    key={key}\n                    onClick={() => requestSort(header.split(' ').join(''))}\n                    className={getClassNamesFor(header.split(' ').join(''))}\n                  >\n                    {header}\n                  </th>\n                ))\n              )\n              :\n              (\n                null\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {items.length > 0 ?\n            (\n              items.map((item, key) => (\n                <tr key={key}>\n                  <td>\n                    <Link\n                      to={{\n                        pathname: '/failed-processes',\n                        state: { job: item.Type },\n                      }}\n                    >\n                      {item.Type}\n                    </Link>\n                  </td>\n                  <td>{item.Count}</td>\n                  <td>{formatCurrency(item.AggregateAmount, item.CurrencyCode)}</td>\n                  <td>\n                    {item.ErrorReasons.map((reason, idx) => {\n                      return item.ErrorReasons.length === 1 || idx === item.ErrorReasons.length - 1 ? reason : `${reason}, `;\n                    }\n                  )}</td>\n                </tr>\n              )) \n            )\n            :\n            (\n              <tr><td>None</td></tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      { /* Display the table vertically for mobile. */ }\n      <div className=\"dash-failed-processes mobile\">\n        {items.length > 0 ? \n        (\n          items.map((item, i) => (\n            <table key={i}>\n              <thead>\n                {headers ?\n                (\n                  headers.map((header, j) => (\n                    <tr key={j}>\n                      <th >{header}</th>\n                        {header !== 'Name' ? \n                      (\n                        <td>\n                          {item[header.split(' ').join('')]}\n                        </td>\n                      )\n                      :\n                      (\n                        <td className='jobs-link'>\n                          <Link\n                            to={{\n                              pathname: '/failed-payments',\n                              state: { \n                                type: item.Name,\n                              },\n                            }}\n                          >\n                            {item.Name}\n                          </Link>\n                        </td>\n                      )}\n                    </tr>\n                  ))\n                )\n                :\n                (\n                  null\n                )}\n              </thead>\n            </table>\n          ))\n        )\n        :\n        (\n          null\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default FailedJobs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}