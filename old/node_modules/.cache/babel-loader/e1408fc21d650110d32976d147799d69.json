{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-orders/unpushed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport formatHeaders from '../../hooks/format-headers';\nimport { userAction } from '../../hooks/get-order';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UnPushed = props => {\n  _s();\n\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [unpushed, setUnpushed] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [chars, setChars] = useState(999);\n  const [width, setWidth] = useState(window.innerWidth); // const [shortenDates, setShortenDates] = useState(false);\n\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0); // Call the sorting hook.\n\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(unpushed, 'unpushed'); // Determine class is ascending or descending.\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  }; // Format the headers.\n\n\n  const headers = unpushed && unpushed.length > 0 ? formatHeaders(Object.keys(unpushed[0]), 'CurrencyCode') : ''; // Handle the user's selected action.\n\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } else if (isChecked.length !== 0) {\n      if (path) {\n        userAction('unpushed', path, isChecked).then(res => {\n          if (res) {\n            setResponse(res.data[path]);\n            setStatus(res.status);\n            setError(null);\n            showMessage.current = true;\n          }\n        }, err => {\n          if (err) {\n            console.error(err);\n            setError(err.message);\n            showMessage.current = false;\n          }\n        });\n        setIsChecked([]);\n        setAllChecked(false);\n        props.recall('failedPushes');\n      }\n    } else alert('Please tick an order.'); // Deactivate action buttons if a user's profile has restrictions that match.\n\n\n    if ((props === null || props === void 0 ? void 0 : props.restrictedActions) === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }\n  };\n\n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(unpushed.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n    sessionStorage.clear();\n  };\n\n  const handleSelect = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n    sessionStorage.clear();\n  };\n\n  const toggleError = id => {\n    const errorElement = document.getElementById(id);\n    if (errorElement) errorElement.classList.toggle('show-error');\n  };\n\n  const clickSniffer = event => {\n    let id;\n    const errorElement = document.getElementById('show-error');\n\n    if (errorElement && !event.target.attributes.name) {\n      id = errorElement.attributes.name.nodeValue;\n      errorElement.setAttribute('id', id);\n    }\n\n    return () => {\n      // Unbind the event listener on clean up.\n      document.removeEventListener(\"mousedown\", clickSniffer);\n    };\n  }; // Display a message to the user indicating which action has been taken and on what ID number.\n\n\n  const message = action => {\n    let pastTenseVerb = null;\n\n    if (action) {\n      if (action === 'Repush') pastTenseVerb = 'repushed';\n      if (action === 'Ignore') pastTenseVerb = 'ignored';\n      if (action === 'Delete') pastTenseVerb = 'deleted';\n    }\n\n    return pastTenseVerb;\n  }; // Close the modal on click of the X.\n\n\n  const closeModal = () => {\n    setShowDetails(false); // setIsChecked([]);\n\n    clickCount.current = 0;\n  }; // Display long or short versions of the date based on browser width.\n  // const shortOrderDates = document.getElementsByClassName('unpushed order-dates true');\n  // const longOrderDates = document.getElementsByClassName('unpushed order-dates false');\n  // if (items.length > 0) {\n  //   if (shortenDates && shortOrderDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //   } else if (!shortenDates && longOrderDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longOrderDates[i];\n  //       const stagingImportDate = new Date(parseInt(items[i].StagingImportDate)).toISOString();\n  //       if (cell) cell.textContent = `${stagingImportDate.split('T')[0]} at ${stagingImportDate.split('T')[1].substring(0, 5)}`;\n  //     };\n  //   }\n  // }\n\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) setUnpushed(props.data.failedPushes);\n    return () => mounted = false;\n  }, [props.data]); // Toggle allChecked.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (unpushed && unpushed.length !== 0 && isChecked.length === unpushed.length) setAllChecked(true);else setAllChecked(false);\n    }\n\n    return () => mounted = false;\n  }, [isChecked, unpushed]); // Show or hide optional actions.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';\n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : '';\n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n\n    return () => mounted = false;\n  }, [isChecked]); // Bind the event listener.\n\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) document.addEventListener(\"mousedown\", clickSniffer);\n    return () => mounted = false;\n  }); // Hide the message of the action's result after a new tab has been chosen.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n\n    return () => mounted = false;\n  }, [props.click]); // Hide checkboxes if a user is not allowed any actions.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props === null || props === void 0 ? void 0 : props.restrictedActions) {\n        if (props.restrictedActions === 'All') {\n          // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n\n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n\n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        }\n      }\n    }\n\n    return () => mounted = false;\n  }, [props === null || props === void 0 ? void 0 : props.restrictedActions, items]); // Update the vpWidth variable.\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n\n      window.addEventListener('resize', handleResize);\n    }\n\n    return () => mounted = false;\n  }, [vpWidth]); // Determine the width of the browser window and set toggles accordingly.\n\n  useLayoutEffect(() => {\n    let mounted = true;\n\n    const handleResize = () => setWidth(window.innerWidth);\n\n    if (mounted) {\n      // if (width < 1280) setShortenDates(true);\n      setChars(width < 768 ? 7 : width < 1023 ? 24 : width < 1280 ? 48 : 999);\n      window.onresize = handleResize;\n    }\n\n    return () => mounted = false;\n  }, [width, chars, items]);\n  return props.getQuery === 'failedPushes' ? props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 7\n  }, this) : !props.isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading . . .\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info\",\n      children: [items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Selected: \", isChecked.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Count: \", items.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }, this) : null, activeLink ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-links\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"link\",\n          children: props && props.restrictedActions ? getActions('unpushed', props.restrictedActions, isChecked, takeAction) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this) : status && status !== 200 && response ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this) : '', props.callerId === 'unpushed' ? !error ? props.order ? showMessage.current && props.action && !activeLink && (props.action === 'Repush' || props.action === 'Ignore' || props.action === 'Delete') ? typeof props.order === 'number' || props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order \", props.order, \" has been \", message(props.action), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following orders have been \", message(props.action), \":\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.order.map((id, key) => props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this) : key === props.order.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 47\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this) : '' : '' : props.order ? typeof props.order === 'number' || props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following error occurred when order \", props.order, \" was \", message(props.action), \": \", error, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There was a \\\"\", error, \"\\\" error when the following orders were \", message(props.action), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.order.map((id, key) => props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 27\n          }, this) : key === props.order.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 45\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }, this) : null : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"unpushed-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: [items.length !== 0 ? /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"checkbox-th\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: \"selectAll\",\n              handleClick: handleSelectAll,\n              isChecked: allChecked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this), headers ? headers.map((header, key) => vpWidth < 1280 ? header !== 'Market' && header !== 'Error Code' && header !== 'Staging Import Date' && header !== 'Customer Number' && header !== 'Order Type Description' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Order Number' ? header.replace('Number', '') : header === 'Customer Number' ? header.replace('Number', '') : header === 'Warehouse' ? 'WHouse' : header.replace('Order', '').replace('Amount', '').replace('Description', '').replace('Message', '')\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 23\n          }, this) : null : header !== 'Error Code' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Order Number' ? header.replace('Number', '') : header === 'Customer Number' ? header.replace('Number', '') : header.replace('Order', '').replace('Amount', '').replace('Description', '').replace('Message', '').replace('Staging', '')\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 23\n          }, this) : null) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props && items.length > 0 ? items.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"select-one\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: item.OrderNumber,\n              value: item.OrderNumber,\n              handleClick: handleSelect,\n              isChecked: isChecked.includes(item.OrderNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"order-number order-link\",\n            children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              onClick: () => takeAction('showDetails', item, key),\n              children: item.OrderNumber ? item.OrderNumber : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 23\n            }, this) : item.OrderNumber ? item.OrderNumber : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"reduceable-td desktop\",\n            children: item.Market\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"warehouse mobile\",\n            children: [item.Warehouse.split('-')[0], \"-\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 83\n            }, this), item.Warehouse.split('-')[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"warehouse desktop\",\n            children: item.Warehouse ? item.Warehouse : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(item.OrderTotalAmount, item.CurrencyCode)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"order-type desktop\",\n            children: item.OrderTypeDescription ? item.OrderTypeDescription : 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"reduceable-td desktop\",\n            children: item.CustomerNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"order-date\",\n            children: new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `unpushed order-dates desktop`,\n            children: new Date(parseInt(item.StagingImportDate)).toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"unpushed-error-message\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `error-message-button ${item.ErrorMessage.length < chars ? true : false}`,\n              title: item.ErrorMessage.length > chars ? \"Click to view the error.\" : '',\n              onClick: item.ErrorMessage.length > chars ? () => toggleError(item.OrderNumber) : null,\n              name: item.OrderNumber,\n              children: [item.ErrorMessage.includes('\\r\\n') ? `${item.ErrorMessage.split('\\r\\n').join(' ').slice(0, chars)}` : `${item.ErrorMessage.slice(0, chars)}`, item.ErrorMessage.length > chars ? '...' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            name: item.OrderNumber,\n            id: item.OrderNumber,\n            className: \"error-message-unpulled\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-close-container\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"x-close\",\n                onClick: () => toggleError(item.OrderNumber),\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.ErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 19\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this), showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n      details: orderDetails,\n      closeModal: closeModal,\n      getClassNamesFor: getClassNamesFor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 24\n    }, this) : null]\n  }, void 0, true) : '';\n};\n\n_s(UnPushed, \"Qf1y6XnyhxUEMLm/KjN4z5jpDcQ=\", false, function () {\n  return [useSort];\n});\n\n_c = UnPushed;\nexport default UnPushed;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnPushed\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-orders/unpushed.js"],"names":["React","useEffect","useLayoutEffect","useState","useRef","Link","Checkbox","useSort","formatCurrency","formatHeaders","userAction","getActions","OrderDetails","UnPushed","props","allChecked","setAllChecked","isChecked","setIsChecked","status","setStatus","response","setResponse","error","setError","unpushed","setUnpushed","activeLink","setActiveLink","chars","setChars","width","setWidth","window","innerWidth","orderDetails","setOrderDetails","showDetails","setShowDetails","vpWidth","setVpWidth","showMessage","messageRef","clickCount","items","requestSort","sortConfig","getClassNamesFor","name","key","direction","undefined","headers","length","Object","keys","takeAction","path","item","sessionStorage","setItem","scrollTo","top","behavior","then","res","data","current","err","console","message","recall","alert","restrictedActions","includes","toLowerCase","handleSelectAll","map","OrderNumber","clear","handleSelect","event","value","checked","target","filter","toggleError","id","errorElement","document","getElementById","classList","toggle","clickSniffer","attributes","nodeValue","setAttribute","removeEventListener","action","pastTenseVerb","closeModal","mounted","failedPushes","element","className","getAttribute","replace","addEventListener","click","headerCheckbox","getElementsByClassName","rowCheckbox","checkbox","add","handleResize","onresize","getQuery","isLoaded","callerId","order","header","split","join","Market","Warehouse","OrderTotalAmount","CurrencyCode","OrderTypeDescription","CustomerNumber","Date","parseInt","OrderDate","toISOString","StagingImportDate","ErrorMessage","slice"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Checkbox from '../../components/checkbox';\nimport useSort from '../../hooks/sort-data';\nimport formatCurrency from '../../hooks/format-currency';\nimport formatHeaders from '../../hooks/format-headers';\nimport { userAction } from '../../hooks/get-order';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\n\nconst UnPushed = props => {\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [status, setStatus] = useState(null);\n  const [response, setResponse] = useState(null);\n  const [error, setError] = useState(null);\n  const [unpushed, setUnpushed] = useState([]);\n  const [activeLink, setActiveLink] = useState(false);\n  const [chars, setChars] = useState(999);\n  const [width, setWidth] = useState(window.innerWidth);\n  // const [shortenDates, setShortenDates] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const clickCount = useRef(0);\n\n  // Call the sorting hook.\n  const { items, requestSort, sortConfig } = useSort(unpushed, 'unpushed');\n  \n  // Determine class is ascending or descending.\n  const getClassNamesFor = name => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  // Format the headers.\n  const headers = unpushed && unpushed.length > 0 ? formatHeaders(Object.keys(unpushed[0]), 'CurrencyCode') : '';\n\n  // Handle the user's selected action.\n  const takeAction = (path, item) => {\n    // Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n\n    if (path === 'showDetails') {\n      setOrderDetails(item);\n      setShowDetails(true);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length !== 0) {\n      if (path) {\n        userAction('unpushed', path, isChecked)\n        .then(\n          res => {\n            if (res) {\n              setResponse(res.data[path]);\n              setStatus(res.status);\n              setError(null);\n              showMessage.current = true;\n            }\n          },\n          err => {\n            if (err) {\n              console.error(err);\n              setError(err.message);\n              showMessage.current = false;\n            }\n          }\n        );\n        setIsChecked([]);\n        setAllChecked(false);\n        props.recall('failedPushes');\n      }\n    } else alert('Please tick an order.');\n    \n    // Deactivate action buttons if a user's profile has restrictions that match.\n    if (props?.restrictedActions === 'All' || path.includes(props.restrictedActions.toLowerCase())) {\n      setError('This feature is inaccessible for your user type');\n      props.recall('failedPushes');\n    }  \n  };\n  \n  const handleSelectAll = () => {\n    setAllChecked(!allChecked);\n    setIsChecked(unpushed.map(item => item.OrderNumber));\n    if (allChecked) setIsChecked([]);\n    sessionStorage.clear();\n  };\n\n  const handleSelect = event => {\n    const { value, checked } = event.target;\n    setIsChecked([...isChecked, value]);\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n    sessionStorage.clear();\n  };\n\n  const toggleError = id => {\n    const errorElement = document.getElementById(id);\n    if (errorElement) errorElement.classList.toggle('show-error');\n  };\n\n  const clickSniffer = event => {\n    let id;\n    const errorElement = document.getElementById('show-error');\n    if (errorElement && !event.target.attributes.name) {\n      id = errorElement.attributes.name.nodeValue;\n      errorElement.setAttribute('id', id);\n    } \n    return () => {\n      // Unbind the event listener on clean up.\n      document.removeEventListener(\"mousedown\", clickSniffer);\n    };\n  }\n\n  // Display a message to the user indicating which action has been taken and on what ID number.\n  const message = (action) => {\n    let pastTenseVerb = null;\n    if (action) {\n      if (action === 'Repush') pastTenseVerb = 'repushed';\n      if (action === 'Ignore') pastTenseVerb = 'ignored';\n      if (action === 'Delete') pastTenseVerb = 'deleted';\n    }\n    return pastTenseVerb;\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => {\n    setShowDetails(false);\n    // setIsChecked([]);\n    clickCount.current = 0;\n  };\n  \n  // Display long or short versions of the date based on browser width.\n  // const shortOrderDates = document.getElementsByClassName('unpushed order-dates true');\n  // const longOrderDates = document.getElementsByClassName('unpushed order-dates false');\n\n  // if (items.length > 0) {\n  //   if (shortenDates && shortOrderDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = shortOrderDates[i];\n  //       const orderDate = new Date(parseInt(items[i].OrderDate)).toISOString();\n  //       if (cell) cell.textContent = orderDate.split('T')[0];\n  //     };\n  //   } else if (!shortenDates && longOrderDates.length > 0) {\n  //     for (let i = 0; i < items.length; i++) {\n  //       const cell = longOrderDates[i];\n  //       const stagingImportDate = new Date(parseInt(items[i].StagingImportDate)).toISOString();\n  //       if (cell) cell.textContent = `${stagingImportDate.split('T')[0]} at ${stagingImportDate.split('T')[1].substring(0, 5)}`;\n  //     };\n  //   }\n  // }\n  \n  useEffect(() => {\n    let mounted = true;\n    if (mounted) setUnpushed(props.data.failedPushes);\n    return () => mounted = false;\n  }, [props.data]);\n\n  // Toggle allChecked.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (unpushed && unpushed.length !== 0 && isChecked.length === unpushed.length) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, unpushed]);\n\n  // Show or hide optional actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';  \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n\n  // Bind the event listener.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) document.addEventListener(\"mousedown\", clickSniffer);\n    return () => mounted = false;\n  });\n\n  // Hide the message of the action's result after a new tab has been chosen.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.click) showMessage.current = false;\n    }\n    return () => mounted = false;\n  }, [props.click]);\n\n  // Hide checkboxes if a user is not allowed any actions.\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (props?.restrictedActions) {\n        if (props.restrictedActions === 'All') { // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n    \n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n    \n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        } \n      }\n    }\n\n    return () => mounted = false;\n  }, [props?.restrictedActions, items]);  \n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n  \n  // Determine the width of the browser window and set toggles accordingly.\n  useLayoutEffect(() => {\n    let mounted = true;\n    const handleResize = () => setWidth(window.innerWidth);\n    if (mounted) {\n      // if (width < 1280) setShortenDates(true);\n      setChars(width < 768 ? 7 : width < 1023 ? 24 : width < 1280 ? 48 : 999);  \n      window.onresize = handleResize;\n    }\n\n    return () => mounted = false;    \n  }, [width, chars, items]);\n  \n  return props.getQuery === 'failedPushes' ?\n  (\n    props.error ? \n    (\n      <div className=\"signin-error\">{props.error.message}</div>\n    ) : !props.isLoaded ? \n    ( \n      <div className=\"loading\">Loading . . .</div>\n    ) : (\n      <>\n        <div className='order-info'>\n          {items.length > 0 ? \n          (\n            <div className='stats'>\n              <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n              <p className=\"order-info-number-display\">Count: {items.length}</p>\n            </div>\n          )\n          :\n          (\n            null\n          )}\n          {activeLink ? (\n            <div className='action-links'>\n              <form className='link'>\n                {props && props.restrictedActions ? getActions('unpushed', props.restrictedActions, isChecked, takeAction) : null}\n              </form>\n            </div>\n          ) : status && status !== 200 && response ? (\n            <div>Error: {error}</div>\n          ) : (\n            ''\n          )}\n          {props.callerId === 'unpushed' ? \n          (\n            !error ? \n            (\n              props.order ? (\n                showMessage.current && props.action && !activeLink && (props.action === 'Repush' || props.action === 'Ignore' || props.action === 'Delete') ? (\n                  typeof props.order === 'number' || props.order.length === 1 ? (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>Order {props.order} has been {message(props.action)}.</p>\n                    </div>\n                  ) : (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>The following orders have been {message(props.action)}:&nbsp;</p>\n                      <div className='orders-in-array'>\n                        {props.order.map((id, key) => (\n                          props.order.length === 1 ? \n                          ( \n                            <p key={key}>{id}</p>\n                          )\n                          : key === props.order.length - 1 ?\n                          (\n                            <p key={key}>{id}.</p>\n                          )\n                          :\n                          (\n                            <p key={key}>{id},<span>&nbsp;</span></p>\n                          )                          \n                        ))}\n                      </div>\n                    </div>\n                  )\n                ) : (\n                  ''\n                )\n              ) : (\n                ''\n              )\n            ) \n            : \n            (\n              props.order ? (\n                typeof props.order === 'number' || props.order.length === 1 ? \n                (\n                  <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                    <p>The following error occurred when order {props.order} was {message(props.action)}: {error}.</p>\n                  </div>\n                ) \n                : \n                (\n                    <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n                      <p>There was a \"{error}\" error when the following orders were {message(props.action)}:</p>\n                    <div className='orders-in-array'>\n                      {props.order.map((id, key) => (\n                        props.order.length === 1 ? \n                        ( \n                          <p key={key}>{id}</p>\n                        )\n                        : key === props.order.length - 1 ?\n                        (\n                          <p key={key}>{id}.</p>\n                        )\n                        :\n                        (\n                          <p key={key}>{id},<span>&nbsp;</span></p>\n                        )                          \n                      ))}\n                    </div>\n                  </div>\n                )\n              ) : (\n                null\n              )\n            )\n          ) : (\n            null\n          )}\n        </div>\n          \n        <table className=\"unpushed-table\">\n          <thead>\n            <tr className='header-row'>\n              {items.length !== 0 ? (\n                <th className='checkbox-th'>\n                  <Checkbox\n                    type='checkbox'\n                    name='selectAll'\n                    handleClick={handleSelectAll}\n                    isChecked={allChecked}\n                  />\n                </th>\n              ) : (\n                <th className='hidden-checkbox'></th>\n              )}\n              {headers ? \n              (\n                headers.map((header, key) => (\n                  vpWidth < 1280 ?\n                  (\n                    header !== 'Market' && header !== 'Error Code' && header !== 'Staging Import Date' && header !== 'Customer Number' && header !== 'Order Type Description' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header === 'Order Number' ? header.replace('Number', '') : header === 'Customer Number' ? header.replace('Number', '') : header === 'Warehouse' ? 'WHouse' : header.replace('Order', '').replace('Amount', '').replace('Description', '').replace('Message', '')}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                  :\n                  (\n                    header !== 'Error Code' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header === 'Order Number' ? header.replace('Number', '') : header === 'Customer Number' ? header.replace('Number', '') : header.replace('Order', '').replace('Amount', '').replace('Description', '').replace('Message', '').replace('Staging', '')}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                ))\n              )\n              : \n                null\n              }\n            </tr>\n          </thead>\n          <tbody>\n          {props && items.length > 0 ? (\n            items.map((item, key) => (\n                <tr key={key}>\n                  <td className='select-one'>\n                    <Checkbox\n                      type='checkbox'\n                      name={item.OrderNumber}\n                      value={item.OrderNumber}\n                      handleClick={handleSelect}\n                      isChecked={isChecked.includes(item.OrderNumber)}\n                    />\n                  </td>\n                  <td className='order-number order-link'>\n                    {vpWidth < 1280 ?\n                    (\n                      <Link\n                        to='#'\n                        onClick={() => takeAction('showDetails', item, key)}\n                      >\n                        {item.OrderNumber ? item.OrderNumber : 'None'}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.OrderNumber ? item.OrderNumber : 'None'\n                    )}\n                  </td>\n                  <td className=\"reduceable-td desktop\">{item.Market}</td>\n                  <td className=\"warehouse mobile\">{item.Warehouse.split('-')[0]}-<br />{item.Warehouse.split('-')[1]}</td>\n                  <td className=\"warehouse desktop\">{item.Warehouse ? item.Warehouse : 'None'}</td>\n                  <td>{formatCurrency(item.OrderTotalAmount, item.CurrencyCode)}</td>\n                  <td className=\"order-type desktop\">{item.OrderTypeDescription ? item.OrderTypeDescription : 'None'}</td>\n                  <td className=\"reduceable-td desktop\">{item.CustomerNumber}</td>\n                  <td className=\"order-date\">{new Date(parseInt(item.OrderDate)).toISOString().split('T')[0]}</td>\n                  <td className={`unpushed order-dates desktop`}>\n                    {new Date(parseInt(item.StagingImportDate)).toISOString().split('T')[0]}\n                  </td>\n                  {/* <td className=\"error-code desktop\">{item.ErrorCode ? item.ErrorCode : 'None'}</td> */}\n\n                  <td className=\"unpushed-error-message\">\n                    <span \n                      className={`error-message-button ${item.ErrorMessage.length < chars ? true : false}`} \n                      title={item.ErrorMessage.length > chars ? \"Click to view the error.\" : ''} \n                      onClick={item.ErrorMessage.length > chars ? () => toggleError(item.OrderNumber) : null} \n                      name={item.OrderNumber}\n                    >\n                      {item.ErrorMessage.includes('\\r\\n') ? `${item.ErrorMessage.split('\\r\\n').join(' ').slice(0, chars)}` : `${item.ErrorMessage.slice(0, chars)}`}{item.ErrorMessage.length > chars ? '...' : ''}\n                    </span>\n                  </td>\n                  <td \n                    name={item.OrderNumber} \n                    id={item.OrderNumber} \n                    className='error-message-unpulled'\n                  >\n                    <div className='x-close-container'>\n                      <span className=\"x-close\" onClick={() => toggleError(item.OrderNumber)}>x</span>\n                    </div>\n                    <p>{item.ErrorMessage}</p>\n                  </td>\n\n                </tr>\n            ))\n          ) : (\n              <tr>\n                <td className='hidden-checkbox'></td>\n                <td>None</td>\n              </tr>\n          )}\n          </tbody>\n        </table>\n\n        {/* <table>\n          <thead>\n            <tr className='header-row error-message-unpushed'>\n              <th\n                onClick={() => requestSort('errorMessage')}\n                className={getClassNamesFor('errorMessage')}\n              >\n                Message\n              </th>\n            </tr>\n          </thead>\n          {items.length !== 0 ? (\n          <tbody >\n            {items.map((item, key) => (\n              <tr key={key}>\n                <td name={item.OrderNumber} id={item.OrderNumber} className='error-message-unpushed'>\n                  <span onClick={toggleError} className=\"x-close\">X</span>\n                  {item.ErrorMessage.includes('\\r\\n') ? `${item.ErrorMessage.split('\\r\\n').join(' ')}` : item.ErrorMessage}\n                </td>\n              </tr>\n                )\n                )}\n          </tbody>\n          ) : (\n            <tbody hidden><tr><td></td></tr></tbody>\n          )}\n        </table> */}\n        {showDetails ? <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> : null}\n      </>\n    )\n  ) : (\n    ''\n  );\n};\n\nexport default UnPushed;\n"]},"metadata":{},"sourceType":"module"}