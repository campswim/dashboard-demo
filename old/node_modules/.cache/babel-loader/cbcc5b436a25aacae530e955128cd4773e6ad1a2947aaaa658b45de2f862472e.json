{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-payments/failed-payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport Checkbox from '../../components/checkbox';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\nimport formatHeaders from '../../hooks/format-headers';\nimport formatCurrency from '../../hooks/format-currency';\nimport { userAction } from '../../hooks/get-order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FailedPayment = props => {\n  _s();\n  var _props$order;\n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [isCheckedOrderNums, setIsCheckedOrderNums] = useState([]);\n  const [dismissed, setDismissed] = useState([]);\n  const [activeTab, setActiveTab] = useState(null);\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [jobNamesUnique, setJobNamesUnique] = useState([]);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const [error, setError] = useState(null);\n  const [displayDismissed, setDisplayDismissed] = useState(true);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const click = useRef(false);\n  const toggleAll = useRef(0);\n  const dismissedCount = useRef(0);\n  const queryPath = useRef('');\n  const itemsFiltered = useRef([]);\n\n  // The following two constants handle the sorting algorithm.\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(props.payments, 'payments');\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['CurrencyCode']) : '';\n\n  // Handles the selection and formatting of the page's tabs.\n  const handleClick = (event, next) => {\n    let chosenButtonValue;\n    click.current = true;\n    setIsCheckedOrderNums([]);\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n  };\n\n  // Handles the action chosen by the user.\n  const takeAction = (path, item) => {\n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n    queryPath.current = path;\n    if (path === 'showDetails') {\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    } else if (isChecked.length > 0) {\n      if (path) {\n        if (activeTabCount === isChecked.length) {\n          if (path === 'reinstatePaymentError') dismissedCount.current = 0;\n        }\n        if (path === 'dismissPaymentError') dismissedCount.current = isChecked.length;\n        userAction('failedPayments', path, isChecked).then(res => {\n          if (res !== null && res !== void 0 && res.data[path]) {\n            const result = res.data[path];\n            setError(null);\n            if (path === 'reinstatePaymentError') {\n              item.forEach(id => {\n                const dismissedAtTableCell = document.getElementById(`${id}-dismissed-at`);\n                const dismissedByTableCell = document.getElementById(`${id}-dismissed-by`);\n                dismissedAtTableCell.textContent = 'N/A';\n                dismissedByTableCell.textContent = 'N/A';\n              });\n              dismissedCount.current = dismissedCount.current - res.data[path].length;\n              props.reload(props.activeTab);\n            } else if (path === 'dismissPaymentError') {\n              item.forEach(id => {\n                const dismissedAtTableCell = document.getElementById(`${id}-dismissed-at`);\n                const dismissedByTableCell = document.getElementById(`${id}-dismissed-by`);\n                const dismissed = result.filter(item => item.PaymentId === id);\n                dismissedAtTableCell.textContent = new Date(parseInt(dismissed[0].DismissedAt)).toISOString().split('T')[0];\n                dismissedByTableCell.textContent = dismissed[0].DismissedBy;\n              });\n              dismissedCount.current = dismissedCount.current + res.data[path].length;\n              props.reload(props.activeTab);\n            }\n          } else if (res !== null && res !== void 0 && res.errors) {\n            let errorString = '';\n            res.errors.forEach((error, idx) => {\n              if (res.errors.length === 1) errorString = error.message;else {\n                if (idx === 0) errorString += error.message + '; ';else if (idx === res.errors.length - 1) errorString += error.message;else errorString += error.message + '; ';\n              }\n            });\n            if (errorString) setError(errorString);\n          }\n        }, err => {\n          setError(err);\n        });\n        showMessage.current = true;\n        setIsChecked([]);\n        setIsCheckedOrderNums([]);\n        setDismissed([]);\n        toggleAll.current = 0;\n        props.handleClick(activeTab);\n      }\n    }\n  };\n\n  // Handle the toggling of the select-all checkbox.\n  const handleSelectAll = () => {\n    const tabItems = itemsFiltered.current.filter(item => formatHeaders(item.PaymentType) === formatHeaders(activeTab) || activeTab === 'All');\n    const dismissedTabItems = tabItems.filter(item => item.DismissedAt);\n    const notDismissedTabItems = tabItems.filter(item => !item.DismissedAt);\n    showMessage.current = false;\n    dismissedCount.current = dismissedTabItems.length;\n\n    // Set the toggleAll reference variable.\n    if (displayDismissed && isChecked.length > 0 && toggleAll.current === 0) toggleAll.current = 1;\n    if (displayDismissed && tabItems.length === dismissedTabItems.length && toggleAll.current === 2) toggleAll.current = 0;\n    if (displayDismissed && tabItems.length === dismissedTabItems.length && !allChecked) toggleAll.current = 1;\n    if (dismissedTabItems.length > 0 && displayDismissed) {\n      toggleAll.current++;\n      if (toggleAll.current === 2) {\n        setIsChecked(dismissedTabItems.map(item => item.PaymentId));\n        setDismissed(dismissedTabItems.map(item => item.PaymentId));\n        setIsCheckedOrderNums(dismissedTabItems.map(item => item.OrderNumber));\n      } else if (toggleAll.current === 1) {\n        setIsChecked(notDismissedTabItems.map(item => item.PaymentId));\n        setIsCheckedOrderNums(notDismissedTabItems.map(item => item.OrderNumber));\n      } else {\n        setIsChecked([]);\n        setDismissed([]);\n        setIsCheckedOrderNums([]);\n        toggleAll.current = 0;\n      }\n    } else if (dismissedTabItems.length === tabItems.length) {\n      if (allChecked) {\n        setIsChecked([]);\n        setIsCheckedOrderNums([]);\n      } else {\n        setIsChecked(dismissedTabItems.map(item => item.PaymentId));\n        setIsCheckedOrderNums(dismissedTabItems.map(item => item.OrderNumber));\n      }\n    } else {\n      if (allChecked) {\n        setIsChecked([]);\n        setIsCheckedOrderNums([]);\n      } else {\n        setIsChecked(tabItems.filter(item => !item.DismissedAt).map(item => item.PaymentId));\n        setIsCheckedOrderNums(tabItems.filter(item => !item.DismissedAt).map(item => item.OrderNumber));\n      }\n    }\n  };\n\n  // Handle the toggling of a single item's checkbox.\n  const handleSelect = event => {\n    const {\n      name,\n      value,\n      checked,\n      dataset\n    } = event.target;\n    const isDismissed = dataset.dismissed ? true : false;\n    setError(null);\n\n    // Set the isChecked state variable based on whether the list is one of dismissed errors or not.\n    if (!isDismissed) {\n      if (dismissed.length > 0) {\n        setIsChecked([]);\n        setDismissed([]);\n        setIsCheckedOrderNums([]);\n        setIsChecked([value]);\n        setIsCheckedOrderNums([name]);\n      } else {\n        setIsChecked([...isChecked, value]);\n        setIsCheckedOrderNums([...isCheckedOrderNums, name]);\n      }\n    } else {\n      if (dismissed.length <= 0) {\n        setIsChecked([]);\n        setIsCheckedOrderNums([]);\n        setDismissed([{\n          [value]: isDismissed\n        }]);\n        setIsChecked([value]);\n        setIsCheckedOrderNums([name]);\n      } else {\n        setDismissed([...dismissed, {\n          [value]: isDismissed\n        }]);\n        setIsChecked([...isChecked, value]);\n        setIsCheckedOrderNums([...isCheckedOrderNums, name]);\n      }\n    }\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n\n  // Close the modal on click of the X.\n  const closeModal = () => setShowDetails(false);\n\n  // Set the verb to display in the message for the action links.\n  const message = action => {\n    let pastTenseVerb = null;\n    if (action) {\n      if (action === 'Dismiss') pastTenseVerb = 'dismissed';\n      if (action === 'Reinstate') pastTenseVerb = 'reinstated';\n      // else if (action === 'Reinstate') pastTenseVerb = 'reinstated';\n    }\n    return pastTenseVerb;\n  };\n\n  // Set the active tab, when it changes.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]);\n\n  // Create the page's tabs for each unique payment type.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props && props.payments) {\n        props.payments.forEach(type => {\n          let paymentType = type.PaymentType.split(' ').join(''),\n            jobNamesUniqueSorted = [],\n            tempArray = [];\n          const parenthetical = paymentType.includes('(') ? paymentType.split('(')[1] : '';\n          paymentType = formatHeaders(paymentType.split('(')[0]);\n          paymentType += parenthetical ? ` (${parenthetical}` : '';\n          if (!jobNamesUnique.includes(paymentType)) {\n            tempArray.push(paymentType);\n          }\n          tempArray.sort();\n          jobNamesUniqueSorted = tempArray.unshift('All');\n          console.log({\n            jobNamesUniqueSorted,\n            tempArray\n          });\n          setJobNamesUnique(jobNamesUniqueSorted);\n        });\n      }\n    }\n    return () => mounted = false;\n  }, [jobNamesUnique, props, activeTab]);\n\n  // Set the default active tab and each tab's count and tab's index.\n  useEffect(() => {\n    let mounted = true;\n    const hiddenRowCount = document.getElementsByClassName('hide-dismissed').length;\n    if (mounted) {\n      if (!activeTab && jobNamesUnique && jobNamesUnique.length > 0) {\n        setActiveTab(jobNamesUnique[0]);\n      }\n      if (props.payments) {\n        let counter = 0;\n        if (itemsFiltered.current.length > 0) {\n          itemsFiltered.current.forEach(payment => {\n            if (formatHeaders(payment.PaymentType) === formatHeaders(activeTab) || activeTab === 'All') {\n              counter++;\n            }\n          });\n          setActiveTabCount(!displayDismissed ? counter - hiddenRowCount : counter);\n        }\n      }\n      const activeTabKeyValue = Object.entries(jobNamesUnique).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n    return () => mounted = false;\n  }, [activeTab, activeTabIndex, jobNamesUnique, props.payments, displayDismissed]);\n\n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      };\n      window.addEventListener('resize', handleResize);\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n\n  // Hide checkboxes if a user is not allowed any actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props !== null && props !== void 0 && props.restrictedActions) {\n        if (props.restrictedActions === 'All') {\n          // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        }\n      }\n    }\n    return () => mounted = false;\n  }, [props === null || props === void 0 ? void 0 : props.restrictedActions, items]);\n\n  // Manage the value of the allChecked state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (isChecked.length === activeTabCount && activeTabCount > 0) setAllChecked(true);else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, activeTabCount]);\n\n  // Show or hide optional actions: toggle the activeLink state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';\n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : '';\n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n\n  // Hide the message of the action's result after a new tab has been chosen.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (click.current) {\n        showMessage.current = false;\n        click.current = false;\n      }\n    }\n    return () => mounted = false;\n  });\n\n  // Filter out duplicate-payment errors. (This is mainly for the PaymentTrackingHistory, which is being used for development only.)\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (items && items.length > 0) {\n        itemsFiltered.current = items.filter((item, index, self) => index === self.findIndex(t => t.PaymentId === item.PaymentId));\n      }\n    }\n    return () => mounted = false;\n  }, [items]);\n\n  // Automatically scroll the active tab into view.\n  useEffect(() => {\n    const activeButtonElements = document.getElementsByClassName('active-button');\n    if (activeButtonElements) {\n      Array.from(activeButtonElements).forEach(el => {\n        el.scrollIntoView(true);\n      });\n      document.body.scrollTop = document.documentElement.scrollTop = 0;\n    }\n  });\n  return props.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-error\",\n    children: props.error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 5\n  }, this) : !props.isLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading unprocessed\",\n    children: \"Loading . . . \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this) : props ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unprocessed-jobs-container\",\n    children: [items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-actions unprocessed\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        activeTab: activeTab,\n        tabIndex: activeTabIndex,\n        tabs: jobNamesUnique,\n        handleClick: handleClick,\n        caller: \"payments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }, this) : null, dismissedCount.current > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-link\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        onClick: () => setDisplayDismissed(!displayDismissed),\n        children: [displayDismissed ? 'Hide' : 'Show', \" Dismissed Errors\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-info no-actions\",\n      children: [items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Selected: \", isChecked.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), jobNamesUnique.length > 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Tab: \", `${activeTabIndex + 1} of ${jobNamesUnique.length}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 42\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"order-info-number-display\",\n          children: [\"Row Count: \", activeTabCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this) : null, showDetails ? /*#__PURE__*/_jsxDEV(OrderDetails, {\n        details: orderDetails,\n        closeModal: closeModal,\n        getClassNamesFor: getClassNamesFor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this) : null, activeLink && props.restrictedActions !== 'All' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-links\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"link\",\n          children: props && props.restrictedActions ? getActions('paymentError', props.restrictedActions, isChecked, takeAction, isCheckedOrderNums, dismissed) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this) : null, showMessage.current && !error ? props.order && (typeof props.order === 'number' || Array.isArray(props.order) && ((_props$order = props.order) === null || _props$order === void 0 ? void 0 : _props$order.length) === 1) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The processing error of order \\\"\", Array.isArray(props.order) ? props.order[0] : props.order, \"\\\" has been \", message(props.action), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The following orders' processing errors have been \", message(props.action), \":\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.order ? props.order.map((id, key) => {\n            return props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: id\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 23\n            }, this) : key === props.order.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [id, \".\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 41\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 23\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 13\n      }, this) : null, error ? props.order ? typeof props.order === 'number' || props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [\"The following error occurred when order \\\"\", Array.isArray(props.order) ? props.order[0] : props.order, \"\\\" was \", message(props.action), \": \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"retried-order-set\",\n        id: \"retried-order-message\",\n        ref: messageRef,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"There was a '\", error, \"' error when the following orders were \", message(props.action), \":\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"orders-in-array\",\n          children: props.order.map((id, key) => props.order.length === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: id\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 21\n          }, this) : key === props.order.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \".\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [id, \",\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 39\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 13\n      }, this) : null : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"unprocessed-jobs-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: [items.length !== 0 ? props.restrictedActions && props.restrictedActions === 'All' ? null : /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"checkbox-th\",\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              type: \"checkbox\",\n              name: \"selectAll\",\n              handleClick: handleSelectAll,\n              isChecked: allChecked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 17\n          }, this), headers ? headers.map((header, key) => vpWidth < 1280 ? header !== 'Payment Id' && header !== 'Payment Type' & header !== 'Attempted At' && header !== 'Card Number' && header !== 'Payment Date' && header !== 'Dismissed At' && header !== 'Dismissed By' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header === 'Order Number' ? 'Order' : header === 'Payment Amount' ? 'Amount' : header === 'Error Reason' ? 'Error' : header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 21\n          }, this) : null : activeTab === 'Credit Card' ? header !== 'Payment Type' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 23\n          }, this) : null : activeTab === 'All' ? header !== 'Card Number' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 23\n          }, this) : null : header !== 'Card Number' && header !== 'Payment Type' ? /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort(header.split(' ').join('')),\n            className: getClassNamesFor(header.split(' ').join('')),\n            children: header\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 23\n          }, this) : null) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.length > 0 ? itemsFiltered.current.map((item, key) => {\n          return formatHeaders(item.PaymentType) === formatHeaders(activeTab) || activeTab === 'All' ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: !displayDismissed && item.DismissedAt ? 'hide-dismissed' : '',\n            children: [props.restrictedActions && props.restrictedActions === 'All' ? null : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"select-one\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                type: \"checkbox\",\n                name: item.OrderNumber,\n                value: item.PaymentId,\n                dismissed: item.DismissedAt,\n                handleClick: handleSelect,\n                isChecked: isChecked.includes(item.PaymentId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-number order-link\",\n              children: vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: () => takeAction('showDetails', item),\n                children: item.OrderNumber ? item.OrderNumber : 'None'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 23\n              }, this) : item.OrderNumber ? item.OrderNumber : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"payment-id desktop\",\n              children: item.PaymentId ? item.PaymentId : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 19\n            }, this), activeTab === 'All' ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"payment-type desktop\",\n              children: item.PaymentType ? item.PaymentType : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 21\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"payment-amount\",\n              children: formatCurrency(item.PaymentAmount, item.CurrencyCode)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"payment-date desktop\",\n              children: new Date(parseInt(item.PaymentDate)).toISOString().split('T')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"payment-attempt-date desktop\",\n              children: new Date(parseInt(item.AttemptedAt)).toISOString().split('T')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 19\n            }, this), activeTab === 'Credit Card' ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"payment-card-number desktop\",\n              children: item.CardNumber ? item.CardNumber : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 50\n            }, this) : null, vpWidth < 1280 ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"payment-error whitespace-prewrap\",\n              children: item.ErrorReason && item.ErrorReason.length > 24 ? item.ErrorReason.slice(0, 25) + '...' : item.ErrorReason && item.ErrorReason.length <= 24 ? item.ErrorReason : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"payment-error whitespace-prewrap\",\n              children: item.ErrorReason ? item.ErrorReason : 'None'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-error-dismissed-at desktop\",\n              id: `${item.PaymentId}-dismissed-at`,\n              children: item.DismissedAt ? new Date(parseInt(item.DismissedAt)).toISOString().split('T')[0] : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"order-error-dismissed-by desktop\",\n              id: `${item.PaymentId}-dismissed-by`,\n              children: item.DismissedBy ? item.DismissedBy : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 17\n          }, this) : null;\n        }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"hidden-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this) : '';\n};\n_s(FailedPayment, \"LGegHC2Rq8BFY8ErMteQojw/q6M=\", false, function () {\n  return [useSort];\n});\n_c = FailedPayment;\nexport default FailedPayment;\nvar _c;\n$RefreshReg$(_c, \"FailedPayment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useSort","Checkbox","getActions","OrderDetails","Tabs","formatHeaders","formatCurrency","userAction","jsxDEV","_jsxDEV","FailedPayment","props","_s","_props$order","allChecked","setAllChecked","isChecked","setIsChecked","isCheckedOrderNums","setIsCheckedOrderNums","dismissed","setDismissed","activeTab","setActiveTab","activeTabIndex","setActiveTabIndex","activeTabCount","setActiveTabCount","activeLink","setActiveLink","orderDetails","setOrderDetails","showDetails","setShowDetails","jobNamesUnique","setJobNamesUnique","vpWidth","setVpWidth","window","innerWidth","error","setError","displayDismissed","setDisplayDismissed","showMessage","messageRef","click","toggleAll","dismissedCount","queryPath","itemsFiltered","items","requestSort","sortConfig","payments","getClassNamesFor","name","key","direction","undefined","headers","length","Object","keys","handleClick","event","next","chosenButtonValue","current","preventDefault","target","value","takeAction","path","item","sessionStorage","setItem","scrollTo","top","behavior","then","res","data","result","forEach","id","dismissedAtTableCell","document","getElementById","dismissedByTableCell","textContent","reload","filter","PaymentId","Date","parseInt","DismissedAt","toISOString","split","DismissedBy","errors","errorString","idx","message","err","handleSelectAll","tabItems","PaymentType","dismissedTabItems","notDismissedTabItems","map","OrderNumber","handleSelect","checked","dataset","isDismissed","closeModal","action","pastTenseVerb","mounted","type","paymentType","join","jobNamesUniqueSorted","tempArray","parenthetical","includes","push","sort","unshift","console","log","hiddenRowCount","getElementsByClassName","counter","payment","activeTabKeyValue","entries","job","handleResize","addEventListener","restrictedActions","headerCheckbox","rowCheckbox","checkbox","classList","add","element","className","getAttribute","setAttribute","replace","index","self","findIndex","t","activeButtonElements","Array","from","el","scrollIntoView","body","scrollTop","documentElement","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoaded","tabIndex","tabs","caller","to","onClick","details","order","isArray","ref","header","PaymentAmount","CurrencyCode","PaymentDate","AttemptedAt","CardNumber","ErrorReason","slice","_c","$RefreshReg$"],"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/failed-payments/failed-payment.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport useSort from '../../hooks/sort-data';\nimport Checkbox from '../../components/checkbox';\nimport getActions from '../../hooks/get-actions';\nimport OrderDetails from '../../components/order-details';\nimport Tabs from '../../components/tabs';\nimport formatHeaders from '../../hooks/format-headers';\nimport formatCurrency from '../../hooks/format-currency';\nimport { userAction } from '../../hooks/get-order';\n\nconst FailedPayment = props => {  \n  const [allChecked, setAllChecked] = useState(false);\n  const [isChecked, setIsChecked] = useState([]);\n  const [isCheckedOrderNums, setIsCheckedOrderNums] = useState([]);\n  const [dismissed, setDismissed] = useState([]);\n  const [activeTab, setActiveTab] = useState(null); \n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [activeTabCount, setActiveTabCount] = useState(0);\n  const [activeLink, setActiveLink] = useState(false);\n  const [orderDetails, setOrderDetails] = useState({});\n  const [showDetails, setShowDetails] = useState(false);\n  const [jobNamesUnique, setJobNamesUnique] = useState([]);\n  const [vpWidth, setVpWidth] = useState(window.innerWidth);\n  const [error, setError] = useState(null);\n  const [displayDismissed, setDisplayDismissed] = useState(true);\n  const showMessage = useRef(false);\n  const messageRef = useRef(null);\n  const click = useRef(false);\n  const toggleAll = useRef(0);\n  const dismissedCount = useRef(0);\n  const queryPath = useRef('');\n  const itemsFiltered = useRef([]);\n\n  // The following two constants handle the sorting algorithm.\n  const { items, requestSort, sortConfig } = useSort(props.payments, 'payments');  \n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  \n  // Format the headers.\n  const headers = items && items.length > 0 ? formatHeaders(Object.keys(items[0]), ['CurrencyCode']) : '';\n  \n  // Handles the selection and formatting of the page's tabs.\n  const handleClick = (event, next) => {\n    let chosenButtonValue;\n    click.current = true;\n    setIsCheckedOrderNums([]);\n\n    if (event) {\n      event.preventDefault();\n      chosenButtonValue = event.target.value;\n    } else chosenButtonValue = next;\n    setActiveTab(chosenButtonValue);\n    setActiveLink(false);\n    props.handleClick(chosenButtonValue);\n  };\n  \n  // Handles the action chosen by the user.\n  const takeAction = (path, item) => {    \n    //Store a flag in storage to indicate that a new action has been initiated.\n    sessionStorage.setItem('action', true);\n    queryPath.current = path;\n\n    if (path === 'showDetails') {\n      setShowDetails(true);\n      setOrderDetails(item);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    } else if (isChecked.length > 0) {\n      if (path) {\n        if (activeTabCount === isChecked.length) {\n          if (path === 'reinstatePaymentError') dismissedCount.current = 0;\n        }\n        if (path === 'dismissPaymentError') dismissedCount.current = isChecked.length;\n        \n        userAction('failedPayments', path, isChecked).then(\n          res => {\n            if (res?.data[path]) {\n              const result = res.data[path];\n\n              setError(null);\n              \n              if (path === 'reinstatePaymentError') {\n                item.forEach(id => {\n                  const dismissedAtTableCell = document.getElementById(`${id}-dismissed-at`);\n                  const dismissedByTableCell = document.getElementById(`${id}-dismissed-by`);\n\n                  dismissedAtTableCell.textContent = 'N/A';\n                  dismissedByTableCell.textContent = 'N/A';\n                });\n\n                dismissedCount.current = dismissedCount.current - res.data[path].length;\n                props.reload(props.activeTab);\n              } else if (path === 'dismissPaymentError') {\n                item.forEach(id => {\n                  const dismissedAtTableCell = document.getElementById(`${id}-dismissed-at`);\n                  const dismissedByTableCell = document.getElementById(`${id}-dismissed-by`);\n                  const dismissed = result.filter(item => item.PaymentId === id);\n                  \n                  dismissedAtTableCell.textContent = new Date(parseInt(dismissed[0].DismissedAt)).toISOString().split('T')[0];\n                  dismissedByTableCell.textContent = dismissed[0].DismissedBy;\n                })\n\n                dismissedCount.current = dismissedCount.current + res.data[path].length;\n                props.reload(props.activeTab);\n              }\n\n            } else if (res?.errors) {\n              let errorString = '';\n              res.errors.forEach((error, idx) => {\n                if (res.errors.length === 1) errorString = error.message;\n                else {\n                  if (idx === 0) errorString += error.message + '; ';\n                  else if (idx === res.errors.length - 1) errorString += error.message;\n                  else errorString += error.message + '; ';\n                }\n              });\n              \n              if (errorString) setError(errorString);\n            }\n          },\n          err => {\n            setError(err);\n          }\n        );\n\n        showMessage.current = true;\n        setIsChecked([]);\n        setIsCheckedOrderNums([]);\n        setDismissed([]);\n        toggleAll.current = 0;\n        props.handleClick(activeTab);\n      }\n    }\n  };\n\n  // Handle the toggling of the select-all checkbox.\n  const handleSelectAll = () => {\n    const tabItems = itemsFiltered.current.filter(item => formatHeaders(item.PaymentType) === formatHeaders(activeTab) || activeTab === 'All');\n    const dismissedTabItems = tabItems.filter(item => item.DismissedAt);\n    const notDismissedTabItems = tabItems.filter(item => !item.DismissedAt);\n    \n    showMessage.current = false;\n    dismissedCount.current = dismissedTabItems.length;\n\n    // Set the toggleAll reference variable.\n    if (displayDismissed && isChecked.length > 0 && toggleAll.current === 0) toggleAll.current = 1;\n    if (displayDismissed && tabItems.length === dismissedTabItems.length && toggleAll.current === 2) toggleAll.current = 0;\n    if (displayDismissed && tabItems.length === dismissedTabItems.length && !allChecked) toggleAll.current = 1;\n\n    if (dismissedTabItems.length > 0 && displayDismissed) {\n      toggleAll.current++;\n\n      if (toggleAll.current === 2) {\n        setIsChecked(dismissedTabItems.map(item => item.PaymentId));\n        setDismissed(dismissedTabItems.map(item => item.PaymentId));\n        setIsCheckedOrderNums(dismissedTabItems.map(item => item.OrderNumber));\n      }\n      else if (toggleAll.current === 1) {\n        setIsChecked(notDismissedTabItems.map(item => item.PaymentId));\n        setIsCheckedOrderNums(notDismissedTabItems.map(item => item.OrderNumber));\n      } else {\n        setIsChecked([]);\n        setDismissed([]);\n        setIsCheckedOrderNums([]);\n        toggleAll.current = 0;\n      }\n    } else if (dismissedTabItems.length === tabItems.length) {\n      if (allChecked) {\n        setIsChecked([]);\n        setIsCheckedOrderNums([]);\n      } else {\n        setIsChecked(dismissedTabItems.map(item => item.PaymentId));\n        setIsCheckedOrderNums(dismissedTabItems.map(item => item.OrderNumber));\n      }\n    } else {\n      if (allChecked) {\n        setIsChecked([]);\n        setIsCheckedOrderNums([]);\n      } else {\n        setIsChecked(tabItems.filter(item => !item.DismissedAt).map(item => item.PaymentId));\n        setIsCheckedOrderNums(tabItems.filter(item => !item.DismissedAt).map(item => item.OrderNumber));\n      }\n    }\n  };\n  \n  // Handle the toggling of a single item's checkbox.\n  const handleSelect = event => {    \n    const { name, value, checked, dataset } = event.target;\n    const isDismissed = dataset.dismissed ? true : false;\n\n    setError(null);\n\n    // Set the isChecked state variable based on whether the list is one of dismissed errors or not.\n    if (!isDismissed) {\n      if (dismissed.length > 0) {\n        setIsChecked([]);\n        setDismissed([]);\n        setIsCheckedOrderNums([]);\n        setIsChecked([value]);\n        setIsCheckedOrderNums([name]);\n      } else {\n        setIsChecked([...isChecked, value]);\n        setIsCheckedOrderNums([...isCheckedOrderNums, name]);\n      }\n    } else {\n      if (dismissed.length <= 0) {\n        setIsChecked([]);\n        setIsCheckedOrderNums([]);\n        setDismissed([{ [value]: isDismissed }]);\n        setIsChecked([value]);\n        setIsCheckedOrderNums([name]);\n      } else {\n        setDismissed([...dismissed, { [value]: isDismissed }]);\n        setIsChecked([...isChecked, value]);\n        setIsCheckedOrderNums([...isCheckedOrderNums, name]);\n      }\n    }\n    if (!checked) setIsChecked(isChecked.filter(item => item !== value));\n  };\n  \n  // Close the modal on click of the X.\n  const closeModal = () => setShowDetails(false);\n  \n  // Set the verb to display in the message for the action links.\n  const message = (action) => {\n    let pastTenseVerb = null;\n    if (action) {\n      if (action === 'Dismiss') pastTenseVerb = 'dismissed';\n      if (action === 'Reinstate') pastTenseVerb = 'reinstated';\n      // else if (action === 'Reinstate') pastTenseVerb = 'reinstated';\n    }\n    return pastTenseVerb;\n  };\n  \n  // Set the active tab, when it changes.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props.activeTab && activeTab !== props.activeTab) {\n        setActiveTab(props.activeTab);\n      }\n    }\n    return () => mounted = false;\n  }, [activeTab, props.activeTab]);\n    \n  // Create the page's tabs for each unique payment type.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props && props.payments) {        \n        props.payments.forEach(type => {\n          let paymentType = type.PaymentType.split(' ').join(''), jobNamesUniqueSorted = [], tempArray = [];\n          const parenthetical = paymentType.includes('(') ? paymentType.split('(')[1] : '';\n          paymentType = formatHeaders(paymentType.split('(')[0]);\n          paymentType += parenthetical ? ` (${parenthetical}` : '';\n          \n          if (!jobNamesUnique.includes(paymentType)) {\n            tempArray.push(paymentType);\n          }\n          \n          tempArray.sort();\n          jobNamesUniqueSorted = tempArray.unshift('All');\n\n          console.log({jobNamesUniqueSorted, tempArray});\n\n          setJobNamesUnique(jobNamesUniqueSorted);\n        });\n      }\n    }\n    return () => mounted = false;\n  }, [jobNamesUnique, props, activeTab]);\n\n  // Set the default active tab and each tab's count and tab's index.\n  useEffect(() => {\n    let mounted = true;\n    const hiddenRowCount = document.getElementsByClassName('hide-dismissed').length;\n\n    if (mounted) {\n      if (!activeTab && jobNamesUnique && jobNamesUnique.length > 0) {\n        setActiveTab(jobNamesUnique[0]);\n      }\n        \n      if (props.payments) {\n        let counter = 0;\n\n        if (itemsFiltered.current.length > 0) {\n          itemsFiltered.current.forEach(payment => {\n            if (formatHeaders(payment.PaymentType) === formatHeaders(activeTab) || activeTab === 'All') {\n              counter++;\n            }\n          });\n\n          setActiveTabCount(!displayDismissed ? counter - hiddenRowCount : counter);\n        }\n      }\n  \n      const activeTabKeyValue = Object.entries(jobNamesUnique).filter(job => job[1] === formatHeaders(activeTab));\n      if (activeTabKeyValue && activeTabKeyValue.length > 0) setActiveTabIndex(parseInt(activeTabKeyValue[0][0]));\n    }\n\n    return () => mounted = false;\n  }, [activeTab, activeTabIndex, jobNamesUnique, props.payments, displayDismissed]);\n  \n  // Update the vpWidth variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const handleResize = () => {\n        setVpWidth(window.innerWidth);\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => mounted = false;\n  }, [vpWidth]);\n  \n  // Hide checkboxes if a user is not allowed any actions.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (props?.restrictedActions) {\n        if (props.restrictedActions === 'All') { // Hide the checkboxes, so that a user can't choose any items, thereby blocking her from taking any action on the items.      \n          const headerCheckbox = document.getElementsByClassName('checkbox-th');\n          const rowCheckbox = document.getElementsByClassName('select-one');\n    \n          for (let checkbox of headerCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n    \n          for (let checkbox of rowCheckbox) {\n            checkbox.classList.add('hidden-checkbox');\n          }\n        } \n      }\n    }\n    return () => mounted = false;\n  }, [props?.restrictedActions, items]);\n  \n  // Manage the value of the allChecked state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      \n      if (isChecked.length === activeTabCount && activeTabCount > 0) setAllChecked(true);\n      else setAllChecked(false);\n    }\n    return () => mounted = false;\n  }, [isChecked, activeTabCount]);\n  \n  // Show or hide optional actions: toggle the activeLink state variable.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      const element = document.getElementById('retried-order-message');\n      if (isChecked.length > 0) {\n        const className = element ? element.getAttribute('class') : '';  \n        if (className && !className.includes('hidden')) element.setAttribute('class', `${className}-hidden`);\n        setActiveLink(true);\n      } else {\n        const className = element ? element.getAttribute('class').replace('-hidden', '') : ''; \n        if (className) element.setAttribute('class', className);\n        setActiveLink(false);\n      }\n    }\n    return () => mounted = false;\n  }, [isChecked]);\n  \n  // Hide the message of the action's result after a new tab has been chosen.\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (click.current) {\n        showMessage.current = false;\n        click.current = false;\n      }\n    }\n    return () => mounted = false;\n  });\n  \n  // Filter out duplicate-payment errors. (This is mainly for the PaymentTrackingHistory, which is being used for development only.)\n  useEffect(() => {\n    let mounted = true;\n    if (mounted) {\n      if (items && items.length > 0) {\n        itemsFiltered.current = items.filter((item, index, self) => \n          index === self.findIndex(t => t.PaymentId === item.PaymentId)\n        );\n      }\n    }\n    return () => mounted = false;\n  }, [items]);\n  \n  // Automatically scroll the active tab into view.\n  useEffect(() => {\n    const activeButtonElements = document.getElementsByClassName('active-button');\n\n    if (activeButtonElements) {\n      Array.from(activeButtonElements).forEach(el => {\n        el.scrollIntoView(true);\n      });\n\n      document.body.scrollTop = document.documentElement.scrollTop = 0;\n    }\n  });\n  \n  return props.error ?\n  (\n    <div className=\"signin-error\">{props.error.message}</div>\n  ) \n  : !props.isLoaded ? \n  ( \n    <div className=\"loading unprocessed\">Loading . . . </div>\n  ) \n  : props ? \n  (\n    <div className=\"unprocessed-jobs-container\">\n      {items.length > 0 ? \n      (\n        <div className=\"order-actions unprocessed\">\n          <Tabs\n            activeTab={activeTab} \n            tabIndex={activeTabIndex} \n            tabs={jobNamesUnique}\n            handleClick={handleClick} \n            caller='payments' \n          />\n        </div>\n      )\n      :\n      (\n        null\n      )}\n      {dismissedCount.current > 0 ? \n      (\n        <div className=\"toggle-link\">\n          <Link to='#' onClick={() => setDisplayDismissed(!displayDismissed)} >\n            {displayDismissed ? 'Hide' : 'Show'} Dismissed Errors\n          </Link>\n        </div>\n      )\n      :\n      (\n        null\n      )}\n      <div className=\"order-info no-actions\">\n        {items.length > 0 ? \n        (\n          <div className=\"stats\">\n            <p className=\"order-info-number-display\">Selected: {isChecked.length}</p>\n            {jobNamesUnique.length > 1 ? <p className=\"order-info-number-display\">Tab: {`${activeTabIndex + 1} of ${jobNamesUnique.length}`}</p> : null}\n            <p className=\"order-info-number-display\">Row Count: {activeTabCount}</p>\n          </div>\n        )\n        :\n        (\n          null\n        )}\n        {showDetails ? \n        (\n          <OrderDetails details={orderDetails} closeModal={closeModal} getClassNamesFor={getClassNamesFor} /> \n        )\n        :\n        (\n          null\n        )\n        }\n        {activeLink && props.restrictedActions !== 'All' ?\n        (\n          <div className='action-links'>\n            <form className='link'>\n              {props && props.restrictedActions ? getActions('paymentError', props.restrictedActions, isChecked, takeAction, isCheckedOrderNums, dismissed) : null}\n            </form>\n          </div>\n        ) \n        : \n        (\n          null\n        )}\n        {(showMessage.current) && !error ?\n        (\n          props.order && (typeof props.order === 'number' || (Array.isArray(props.order) && props.order?.length === 1)) ? \n          (\n            <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n              <p>The processing error of order \"{Array.isArray(props.order) ? props.order[0] : props.order}\" has been {message(props.action)}.</p>\n            </div>\n          ) \n          : \n          (\n            <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n              <p>The following orders' processing errors have been {message(props.action)}:&nbsp;</p>\n              <div className='orders-in-array'>\n                {props.order ? \n                (\n                  props.order.map((id, key) => {\n                    return props.order.length === 1 ? \n                    ( \n                      <p key={key}>{id}</p>\n                    )\n                    : key === props.order.length - 1 ?\n                    (\n                      <p key={key}>{id}.</p>\n                    )\n                    :\n                    (\n                      <p key={key}>{id},<span>&nbsp;</span></p>\n                    )                          \n                    })\n                  )\n                  :\n                  (\n                    null\n                  )}\n              </div>\n            </div>\n          )\n        )\n        :\n        (\n          null\n        )}\n        {error ?\n        (\n          props.order ? \n          (\n            typeof props.order === 'number' || props.order.length === 1 ? (\n            <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n              The following error occurred when order \"{Array.isArray(props.order) ? props.order[0] : props.order}\" was {message(props.action)}: {error}\n            </div>\n          ) \n          : \n          (\n            <div className=\"retried-order-set\" id=\"retried-order-message\" ref={messageRef}>\n              <p>There was a '{error}' error when the following orders were {message(props.action)}:&nbsp;</p>\n              <div className='orders-in-array'>\n                {props.order.map((id, key) => (\n                  props.order.length === 1 ? \n                  ( \n                    <p key={key}>{id}</p>\n                  )\n                  : key === props.order.length - 1 ?\n                  (\n                    <p key={key}>{id}.</p>\n                  )\n                  :\n                  (\n                    <p key={key}>{id},<span>&nbsp;</span></p>\n                  )                          \n                ))}\n              </div>\n            </div>\n          )\n          ) \n          : \n          (\n            null\n          )\n        )\n        :\n        (\n          null\n        )}\n      </div>\n\n      <table className=\"unprocessed-jobs-table\">\n        <thead>\n          <tr className=\"header-row\">\n          {items.length !== 0 ? (\n            props.restrictedActions && props.restrictedActions === 'All' ?\n            (\n              null\n            )\n            :\n            (\n              <th className='checkbox-th'>\n                <Checkbox\n                  type='checkbox'\n                  name='selectAll'\n                  handleClick={handleSelectAll}\n                  isChecked={allChecked}\n                />\n              </th>\n            )\n              ) : (\n                <th className='hidden-checkbox'></th>\n              )}\n            {headers ?\n            (\n              headers.map((header, key) => (\n                vpWidth < 1280 ?\n                (\n                  header !== 'Payment Id' && header !== 'Payment Type' & header !== 'Attempted At' && header !== 'Card Number' && header !== 'Payment Date' && header !== 'Dismissed At' && header !== 'Dismissed By' ?\n                  (\n                    <th\n                      key={key}\n                      onClick={() => requestSort(header.split(' ').join(''))}\n                      className={getClassNamesFor(header.split(' ').join(''))}\n                    >\n                      {header === 'Order Number' ? 'Order' : header === 'Payment Amount' ? 'Amount' : header === 'Error Reason' ? 'Error' : header}\n                    </th>\n                  )\n                  : \n                  (\n                    null\n                  )\n                )\n                :\n                (\n                  activeTab === 'Credit Card' ?\n                  (\n                    header !== 'Payment Type' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                  : activeTab === 'All' ?\n                  (\n                    header !== 'Card Number' ?\n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                  :\n                  (\n                    header !== 'Card Number' && header !== 'Payment Type' ? \n                    (\n                      <th\n                        key={key}\n                        onClick={() => requestSort(header.split(' ').join(''))}\n                        className={getClassNamesFor(header.split(' ').join(''))}\n                      >\n                        {header}\n                      </th>\n                    )\n                    :\n                    (\n                      null\n                    )\n                  )\n                )\n              ))\n            )\n            : \n              null\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {items.length > 0 ? (\n            itemsFiltered.current.map((item, key) => {\n              return formatHeaders(item.PaymentType) === formatHeaders(activeTab) || activeTab === 'All' ? \n              (\n                <tr key={key} className={!displayDismissed && item.DismissedAt ? 'hide-dismissed' : '' }>\n                  {props.restrictedActions && props.restrictedActions === 'All' ?\n                  (\n                    null\n                  )\n                  :\n                  (\n                    <td className='select-one'>\n                      <Checkbox\n                        type='checkbox'\n                        name={item.OrderNumber}\n                        value={item.PaymentId}\n                        dismissed={item.DismissedAt}\n                        handleClick={handleSelect}\n                        isChecked={isChecked.includes(item.PaymentId)}\n                      />\n                    </td>\n                    )}\n                  <td className=\"order-number order-link\">\n                    {vpWidth < 1280 ?\n                    (\n                      <Link to='#' onClick={() => takeAction('showDetails', item)} >\n                        {item.OrderNumber ? item.OrderNumber : 'None'}\n                      </Link>\n                    )\n                    :\n                    (\n                      item.OrderNumber ? item.OrderNumber : 'None'\n                    )}\n                  </td>\n                  <td className=\"payment-id desktop\">{item.PaymentId ? item.PaymentId : 'N/A'}</td>\n                  {activeTab === 'All' ?\n                  (\n                    <td className=\"payment-type desktop\">{item.PaymentType ? item.PaymentType : 'N/A'}</td>\n                  )\n                  :\n                  (\n                    null\n                  )}\n                  <td className=\"payment-amount\">{formatCurrency(item.PaymentAmount, item.CurrencyCode)}</td>\n                  <td className=\"payment-date desktop\">{new Date(parseInt(item.PaymentDate)).toISOString().split('T')[0]}</td>\n                  <td className=\"payment-attempt-date desktop\">{new Date(parseInt(item.AttemptedAt)).toISOString().split('T')[0]}</td>\n                  {activeTab === 'Credit Card' ? <td className=\"payment-card-number desktop\">{item.CardNumber ? item.CardNumber : 'None'}</td> : null}\n                  {vpWidth < 1280 ?\n                  (\n                    <td className=\"payment-error whitespace-prewrap\">{item.ErrorReason && item.ErrorReason.length > 24? item.ErrorReason.slice(0,25) + '...' : item.ErrorReason && item.ErrorReason.length <= 24 ? item.ErrorReason : 'None'}</td>\n                  )\n                  :\n                  (\n                    <td className=\"payment-error whitespace-prewrap\">{item.ErrorReason ? item.ErrorReason : 'None'}</td>\n                  )}\n                  <td className=\"order-error-dismissed-at desktop\" id={`${item.PaymentId}-dismissed-at`}>\n                    {item.DismissedAt ? new Date(parseInt(item.DismissedAt)).toISOString().split('T')[0] : 'N/A'}\n                  </td>\n                  <td className=\"order-error-dismissed-by desktop\" id={`${item.PaymentId}-dismissed-by`}>{item.DismissedBy ? item.DismissedBy : 'N/A'}</td>\n                </tr>\n              ) : \n              (\n                null\n              )\n              })\n          ) : (\n            <tr>\n              <td className=\"hidden-checkbox\"></td>\n              <td>None</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  ) : (\n    ''\n  )\n};\n\nexport default FailedPayment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}