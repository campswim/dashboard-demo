{"ast":null,"code":"var _jsxFileName = \"/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/home/missing/missing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useSort from '../../../hooks/sort-data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Missing = ({\n  data,\n  error,\n  market,\n  count\n}) => {\n  _s();\n\n  const reformattedData = data && Array.isArray(data) ? data.map(data => ({\n    itemCode: data\n  })) : '';\n  const {\n    items,\n    requestSort,\n    sortConfig\n  } = useSort(reformattedData, 'missing-items');\n\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  return error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this) : data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-staged-tableset\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"missing-items-subheader\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Market: \", market]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"missing-items-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"header-row\",\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => requestSort('itemCode'),\n            className: getClassNamesFor('itemCode'),\n            children: \"Item Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.length > 0 ? items.map((item, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.itemCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : '';\n};\n\n_s(Missing, \"QPHcTATq20H/OpQ1sh37sgXRvZQ=\", false, function () {\n  return [useSort];\n});\n\n_c = Missing;\nexport default Missing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Missing\");","map":{"version":3,"sources":["/Users/rhead/Coding/campswim/dashboard/dashboard-ncompass/src/pages/home/missing/missing.js"],"names":["React","useSort","Missing","data","error","market","count","reformattedData","Array","isArray","map","itemCode","items","requestSort","sortConfig","getClassNamesFor","name","key","direction","undefined","length","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,KAAoC;AAAA;;AAClD,QAAMC,eAAe,GAAGJ,IAAI,IAAIK,KAAK,CAACC,OAAN,CAAcN,IAAd,CAAR,GAA8BA,IAAI,CAACO,GAAL,CAASP,IAAI,KAAK;AAAEQ,IAAAA,QAAQ,EAAER;AAAZ,GAAL,CAAb,CAA9B,GAAsE,EAA9F;AACA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA;AAAtB,MAAqCb,OAAO,CAACM,eAAD,EAAkB,eAAlB,CAAlD;;AACA,QAAMQ,gBAAgB,GAAGC,IAAI,IAAI;AAC/B,QAAI,CAACF,UAAL,EAAiB;AACjB,WAAOA,UAAU,CAACG,GAAX,KAAmBD,IAAnB,GAA0BF,UAAU,CAACI,SAArC,GAAiDC,SAAxD;AACD,GAHD;;AAKA,SAAOf,KAAK,gBAEV;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAFU,GAGRD,IAAI,gBAEN;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AAAA,+BAAYE,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACE;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,iCACE;AACE,YAAA,OAAO,EAAE,MAAMO,WAAW,CAAC,UAAD,CAD5B;AAEE,YAAA,SAAS,EAAEE,gBAAgB,CAAC,UAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGH,KAAK,CAACQ,MAAN,GAAe,CAAf,GAECR,KAAK,CAACF,GAAN,CAAU,CAACW,IAAD,EAAOJ,GAAP,kBACR;AAAA,iCACE;AAAA,sBAAKI,IAAI,CAACV;AAAV;AAAA;AAAA;AAAA;AAAA;AADF,WAASM,GAAT;AAAA;AAAA;AAAA;AAAA,gBADF,CAFD,gBAUC;AAAA,iCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFM,GAgCJ,EAnCJ;AAoCD,CA5CD;;GAAMf,O;UAEuCD,O;;;KAFvCC,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport useSort from '../../../hooks/sort-data';\n\nconst Missing = ({ data, error, market, count }) => {\n  const reformattedData = data && Array.isArray(data) ? data.map(data => ({ itemCode: data})) : '';\n  const { items, requestSort, sortConfig } = useSort(reformattedData, 'missing-items');\n  const getClassNamesFor = name => {\n    if (!sortConfig) return;\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  \n  return error ? \n  (\n    <div>{error}</div>\n  ) : data ?\n  (\n    <div className=\"dash-staged-tableset\">\n      <div className=\"missing-items-subheader\">\n        <p>Market: {market}</p>\n        <p>Count: {count}</p>\n      </div>\n      <table className=\"missing-items-table\">\n        <thead>\n          <tr className=\"header-row\">\n            <th\n              onClick={() => requestSort('itemCode')}\n              className={getClassNamesFor('itemCode')}\n            >Item Code</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.length > 0 ? \n          (\n            items.map((item, key) => (\n              <tr key={key}>\n                <td>{item.itemCode}</td>\n              </tr>\n            ))\n          )\n          : \n          (\n            <tr><td>None</td></tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  ) : '';\n};\n\nexport default Missing;\n"]},"metadata":{},"sourceType":"module"}